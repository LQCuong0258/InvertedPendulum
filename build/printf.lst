ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"printf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/printf.c"
  20              		.section	.text._out_buffer,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_out_buffer:
  27              	.LVL0:
  28              	.LFB0:
   1:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
   2:Core/Src/printf.c **** // \author (c) Marco Paland (info@paland.com)
   3:Core/Src/printf.c **** //             2014-2019, PALANDesign Hannover, Germany
   4:Core/Src/printf.c **** //
   5:Core/Src/printf.c **** // \license The MIT License (MIT)
   6:Core/Src/printf.c **** //
   7:Core/Src/printf.c **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   8:Core/Src/printf.c **** // of this software and associated documentation files (the "Software"), to deal
   9:Core/Src/printf.c **** // in the Software without restriction, including without limitation the rights
  10:Core/Src/printf.c **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:Core/Src/printf.c **** // copies of the Software, and to permit persons to whom the Software is
  12:Core/Src/printf.c **** // furnished to do so, subject to the following conditions:
  13:Core/Src/printf.c **** //
  14:Core/Src/printf.c **** // The above copyright notice and this permission notice shall be included in
  15:Core/Src/printf.c **** // all copies or substantial portions of the Software.
  16:Core/Src/printf.c **** //
  17:Core/Src/printf.c **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Core/Src/printf.c **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:Core/Src/printf.c **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:Core/Src/printf.c **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:Core/Src/printf.c **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:Core/Src/printf.c **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  23:Core/Src/printf.c **** // THE SOFTWARE.
  24:Core/Src/printf.c **** //
  25:Core/Src/printf.c **** // \brief Tiny printf, sprintf and (v)snprintf implementation, optimized for speed on
  26:Core/Src/printf.c **** //        embedded systems with a very limited resources. These routines are thread
  27:Core/Src/printf.c **** //        safe and reentrant!
  28:Core/Src/printf.c **** //        Use this instead of the bloated standard/newlib printf cause these use
  29:Core/Src/printf.c **** //        malloc for printf (and may not be thread safe).
  30:Core/Src/printf.c **** //
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 2


  31:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  32:Core/Src/printf.c **** 
  33:Core/Src/printf.c **** #include <stdbool.h>
  34:Core/Src/printf.c **** #include <stdint.h>
  35:Core/Src/printf.c **** 
  36:Core/Src/printf.c **** #include "printf.h"
  37:Core/Src/printf.c **** 
  38:Core/Src/printf.c **** 
  39:Core/Src/printf.c **** // define this globally (e.g. gcc -DPRINTF_INCLUDE_CONFIG_H ...) to include the
  40:Core/Src/printf.c **** // printf_config.h header file
  41:Core/Src/printf.c **** // default: undefined
  42:Core/Src/printf.c **** #ifdef PRINTF_INCLUDE_CONFIG_H
  43:Core/Src/printf.c **** #include "printf_config.h"
  44:Core/Src/printf.c **** #endif
  45:Core/Src/printf.c **** 
  46:Core/Src/printf.c **** 
  47:Core/Src/printf.c **** // 'ntoa' conversion buffer size, this must be big enough to hold one converted
  48:Core/Src/printf.c **** // numeric number including padded zeros (dynamically created on stack)
  49:Core/Src/printf.c **** // default: 32 byte
  50:Core/Src/printf.c **** #ifndef PRINTF_NTOA_BUFFER_SIZE
  51:Core/Src/printf.c **** #define PRINTF_NTOA_BUFFER_SIZE    32U
  52:Core/Src/printf.c **** #endif
  53:Core/Src/printf.c **** 
  54:Core/Src/printf.c **** // 'ftoa' conversion buffer size, this must be big enough to hold one converted
  55:Core/Src/printf.c **** // float number including padded zeros (dynamically created on stack)
  56:Core/Src/printf.c **** // default: 32 byte
  57:Core/Src/printf.c **** #ifndef PRINTF_FTOA_BUFFER_SIZE
  58:Core/Src/printf.c **** #define PRINTF_FTOA_BUFFER_SIZE    32U
  59:Core/Src/printf.c **** #endif
  60:Core/Src/printf.c **** 
  61:Core/Src/printf.c **** // support for the floating point type (%f)
  62:Core/Src/printf.c **** // default: activated
  63:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_FLOAT
  64:Core/Src/printf.c **** #define PRINTF_SUPPORT_FLOAT
  65:Core/Src/printf.c **** #endif
  66:Core/Src/printf.c **** 
  67:Core/Src/printf.c **** // support for exponential floating point notation (%e/%g)
  68:Core/Src/printf.c **** // default: activated
  69:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_EXPONENTIAL
  70:Core/Src/printf.c **** #define PRINTF_SUPPORT_EXPONENTIAL
  71:Core/Src/printf.c **** #endif
  72:Core/Src/printf.c **** 
  73:Core/Src/printf.c **** // define the default floating point precision
  74:Core/Src/printf.c **** // default: 6 digits
  75:Core/Src/printf.c **** #ifndef PRINTF_DEFAULT_FLOAT_PRECISION
  76:Core/Src/printf.c **** #define PRINTF_DEFAULT_FLOAT_PRECISION  6U
  77:Core/Src/printf.c **** #endif
  78:Core/Src/printf.c **** 
  79:Core/Src/printf.c **** // define the largest float suitable to print with %f
  80:Core/Src/printf.c **** // default: 1e9
  81:Core/Src/printf.c **** #ifndef PRINTF_MAX_FLOAT
  82:Core/Src/printf.c **** #define PRINTF_MAX_FLOAT  1e9
  83:Core/Src/printf.c **** #endif
  84:Core/Src/printf.c **** 
  85:Core/Src/printf.c **** // support for the long long types (%llu or %p)
  86:Core/Src/printf.c **** // default: activated
  87:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_LONG_LONG
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 3


  88:Core/Src/printf.c **** #define PRINTF_SUPPORT_LONG_LONG
  89:Core/Src/printf.c **** #endif
  90:Core/Src/printf.c **** 
  91:Core/Src/printf.c **** // support for the ptrdiff_t type (%t)
  92:Core/Src/printf.c **** // ptrdiff_t is normally defined in <stddef.h> as long or long long type
  93:Core/Src/printf.c **** // default: activated
  94:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_PTRDIFF_T
  95:Core/Src/printf.c **** #define PRINTF_SUPPORT_PTRDIFF_T
  96:Core/Src/printf.c **** #endif
  97:Core/Src/printf.c **** 
  98:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  99:Core/Src/printf.c **** 
 100:Core/Src/printf.c **** // internal flag definitions
 101:Core/Src/printf.c **** #define FLAGS_ZEROPAD   (1U <<  0U)
 102:Core/Src/printf.c **** #define FLAGS_LEFT      (1U <<  1U)
 103:Core/Src/printf.c **** #define FLAGS_PLUS      (1U <<  2U)
 104:Core/Src/printf.c **** #define FLAGS_SPACE     (1U <<  3U)
 105:Core/Src/printf.c **** #define FLAGS_HASH      (1U <<  4U)
 106:Core/Src/printf.c **** #define FLAGS_UPPERCASE (1U <<  5U)
 107:Core/Src/printf.c **** #define FLAGS_CHAR      (1U <<  6U)
 108:Core/Src/printf.c **** #define FLAGS_SHORT     (1U <<  7U)
 109:Core/Src/printf.c **** #define FLAGS_LONG      (1U <<  8U)
 110:Core/Src/printf.c **** #define FLAGS_LONG_LONG (1U <<  9U)
 111:Core/Src/printf.c **** #define FLAGS_PRECISION (1U << 10U)
 112:Core/Src/printf.c **** #define FLAGS_ADAPT_EXP (1U << 11U)
 113:Core/Src/printf.c **** 
 114:Core/Src/printf.c **** 
 115:Core/Src/printf.c **** // import float.h for DBL_MAX
 116:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 117:Core/Src/printf.c **** #include <float.h>
 118:Core/Src/printf.c **** #endif
 119:Core/Src/printf.c **** 
 120:Core/Src/printf.c **** 
 121:Core/Src/printf.c **** // output function type
 122:Core/Src/printf.c **** typedef void (*out_fct_type)(char character, void* buffer, size_t idx, size_t maxlen);
 123:Core/Src/printf.c **** 
 124:Core/Src/printf.c **** 
 125:Core/Src/printf.c **** // wrapper (used as buffer) for output function type
 126:Core/Src/printf.c **** typedef struct {
 127:Core/Src/printf.c ****   void  (*fct)(char character, void* arg);
 128:Core/Src/printf.c ****   void* arg;
 129:Core/Src/printf.c **** } out_fct_wrap_type;
 130:Core/Src/printf.c **** 
 131:Core/Src/printf.c **** 
 132:Core/Src/printf.c **** // internal buffer output
 133:Core/Src/printf.c **** static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
 134:Core/Src/printf.c **** {
  29              		.loc 1 134 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 135:Core/Src/printf.c ****   if (idx < maxlen) {
  34              		.loc 1 135 3 view .LVU1
  35              		.loc 1 135 6 is_stmt 0 view .LVU2
  36 0000 9A42     		cmp	r2, r3
  37 0002 00D2     		bcs	.L1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 4


 136:Core/Src/printf.c ****     ((char*)buffer)[idx] = character;
  38              		.loc 1 136 5 is_stmt 1 view .LVU3
  39              		.loc 1 136 26 is_stmt 0 view .LVU4
  40 0004 8854     		strb	r0, [r1, r2]
  41              	.L1:
 137:Core/Src/printf.c ****   }
 138:Core/Src/printf.c **** }
  42              		.loc 1 138 1 view .LVU5
  43 0006 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE0:
  47              		.section	.text._out_null,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	_out_null:
  54              	.LVL1:
  55              	.LFB1:
 139:Core/Src/printf.c **** 
 140:Core/Src/printf.c **** 
 141:Core/Src/printf.c **** // internal null output
 142:Core/Src/printf.c **** static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
 143:Core/Src/printf.c **** {
  56              		.loc 1 143 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
 144:Core/Src/printf.c ****   (void)character; (void)buffer; (void)idx; (void)maxlen;
  61              		.loc 1 144 3 view .LVU7
  62              		.loc 1 144 20 view .LVU8
  63              		.loc 1 144 34 view .LVU9
  64              		.loc 1 144 45 view .LVU10
 145:Core/Src/printf.c **** }
  65              		.loc 1 145 1 is_stmt 0 view .LVU11
  66 0000 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE1:
  70              		.section	.text._out_fct,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	_out_fct:
  77              	.LVL2:
  78              	.LFB3:
 146:Core/Src/printf.c **** 
 147:Core/Src/printf.c **** 
 148:Core/Src/printf.c **** // internal _putchar wrapper
 149:Core/Src/printf.c **** static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
 150:Core/Src/printf.c **** {
 151:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 152:Core/Src/printf.c ****   if (character) {
 153:Core/Src/printf.c ****     _putchar(character);
 154:Core/Src/printf.c ****   }
 155:Core/Src/printf.c **** }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 5


 156:Core/Src/printf.c **** 
 157:Core/Src/printf.c **** 
 158:Core/Src/printf.c **** // internal output function wrapper
 159:Core/Src/printf.c **** static inline void _out_fct(char character, void* buffer, size_t idx, size_t maxlen)
 160:Core/Src/printf.c **** {
  79              		.loc 1 160 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
 161:Core/Src/printf.c ****   (void)idx; (void)maxlen;
  83              		.loc 1 161 3 view .LVU13
  84              		.loc 1 161 14 view .LVU14
 162:Core/Src/printf.c ****   if (character) {
  85              		.loc 1 162 3 view .LVU15
  86              		.loc 1 162 6 is_stmt 0 view .LVU16
  87 0000 20B1     		cbz	r0, .L7
 160:Core/Src/printf.c ****   (void)idx; (void)maxlen;
  88              		.loc 1 160 1 view .LVU17
  89 0002 08B5     		push	{r3, lr}
  90              	.LCFI0:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 3, -8
  93              		.cfi_offset 14, -4
 163:Core/Src/printf.c ****     // buffer is the output fct pointer
 164:Core/Src/printf.c ****     ((out_fct_wrap_type*)buffer)->fct(character, ((out_fct_wrap_type*)buffer)->arg);
  94              		.loc 1 164 5 is_stmt 1 view .LVU18
  95              		.loc 1 164 33 is_stmt 0 view .LVU19
  96 0004 0A68     		ldr	r2, [r1]
  97              	.LVL3:
  98              		.loc 1 164 6 view .LVU20
  99 0006 4968     		ldr	r1, [r1, #4]
 100              	.LVL4:
 101              		.loc 1 164 6 view .LVU21
 102 0008 9047     		blx	r2
 103              	.LVL5:
 165:Core/Src/printf.c ****   }
 166:Core/Src/printf.c **** }
 104              		.loc 1 166 1 view .LVU22
 105 000a 08BD     		pop	{r3, pc}
 106              	.LVL6:
 107              	.L7:
 108              	.LCFI1:
 109              		.cfi_def_cfa_offset 0
 110              		.cfi_restore 3
 111              		.cfi_restore 14
 112              		.loc 1 166 1 view .LVU23
 113 000c 7047     		bx	lr
 114              		.cfi_endproc
 115              	.LFE3:
 117              		.section	.text._atoi,"ax",%progbits
 118              		.align	1
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 123              	_atoi:
 124              	.LVL7:
 125              	.LFB6:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 6


 167:Core/Src/printf.c **** 
 168:Core/Src/printf.c **** 
 169:Core/Src/printf.c **** // internal secure strlen
 170:Core/Src/printf.c **** // \return The length of the string (excluding the terminating 0) limited by 'maxsize'
 171:Core/Src/printf.c **** static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
 172:Core/Src/printf.c **** {
 173:Core/Src/printf.c ****   const char* s;
 174:Core/Src/printf.c ****   for (s = str; *s && maxsize--; ++s);
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 176:Core/Src/printf.c **** }
 177:Core/Src/printf.c **** 
 178:Core/Src/printf.c **** 
 179:Core/Src/printf.c **** // internal test if char is a digit (0-9)
 180:Core/Src/printf.c **** // \return true if char is a digit
 181:Core/Src/printf.c **** static inline bool _is_digit(char ch)
 182:Core/Src/printf.c **** {
 183:Core/Src/printf.c ****   return (ch >= '0') && (ch <= '9');
 184:Core/Src/printf.c **** }
 185:Core/Src/printf.c **** 
 186:Core/Src/printf.c **** 
 187:Core/Src/printf.c **** // internal ASCII string to unsigned int conversion
 188:Core/Src/printf.c **** static unsigned int _atoi(const char** str)
 189:Core/Src/printf.c **** {
 126              		.loc 1 189 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              		.loc 1 189 1 is_stmt 0 view .LVU25
 132 0000 0146     		mov	r1, r0
 190:Core/Src/printf.c ****   unsigned int i = 0U;
 133              		.loc 1 190 3 is_stmt 1 view .LVU26
 134              	.LVL8:
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 135              		.loc 1 191 3 view .LVU27
 190:Core/Src/printf.c ****   unsigned int i = 0U;
 136              		.loc 1 190 16 is_stmt 0 view .LVU28
 137 0002 0020     		movs	r0, #0
 138              	.LVL9:
 139              		.loc 1 191 9 view .LVU29
 140 0004 08E0     		b	.L11
 141              	.LVL10:
 142              	.L12:
 192:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 143              		.loc 1 192 5 is_stmt 1 view .LVU30
 144              		.loc 1 192 11 is_stmt 0 view .LVU31
 145 0006 00EB8000 		add	r0, r0, r0, lsl #2
 146              	.LVL11:
 147              		.loc 1 192 42 view .LVU32
 148 000a 531C     		adds	r3, r2, #1
 149 000c 0B60     		str	r3, [r1]
 150              		.loc 1 192 34 view .LVU33
 151 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 152              		.loc 1 192 17 view .LVU34
 153 0010 03EB4003 		add	r3, r3, r0, lsl #1
 154              		.loc 1 192 7 view .LVU35
 155 0014 A3F13000 		sub	r0, r3, #48
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 7


 156              	.LVL12:
 157              	.L11:
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 158              		.loc 1 191 10 is_stmt 1 view .LVU36
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 159              		.loc 1 191 21 is_stmt 0 view .LVU37
 160 0018 0A68     		ldr	r2, [r1]
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 161              		.loc 1 191 10 view .LVU38
 162 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 163              	.LVL13:
 164              	.LBB20:
 165              	.LBI20:
 181:Core/Src/printf.c **** {
 166              		.loc 1 181 20 is_stmt 1 view .LVU39
 167              	.LBB21:
 183:Core/Src/printf.c **** }
 168              		.loc 1 183 3 view .LVU40
 183:Core/Src/printf.c **** }
 169              		.loc 1 183 22 is_stmt 0 view .LVU41
 170 001c 303B     		subs	r3, r3, #48
 171 001e DBB2     		uxtb	r3, r3
 172              	.LVL14:
 183:Core/Src/printf.c **** }
 173              		.loc 1 183 22 view .LVU42
 174              	.LBE21:
 175              	.LBE20:
 191:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 176              		.loc 1 191 10 view .LVU43
 177 0020 092B     		cmp	r3, #9
 178 0022 F0D9     		bls	.L12
 193:Core/Src/printf.c ****   }
 194:Core/Src/printf.c ****   return i;
 179              		.loc 1 194 3 is_stmt 1 view .LVU44
 195:Core/Src/printf.c **** }
 180              		.loc 1 195 1 is_stmt 0 view .LVU45
 181 0024 7047     		bx	lr
 182              		.cfi_endproc
 183              	.LFE6:
 185              		.section	.text._out_rev,"ax",%progbits
 186              		.align	1
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 191              	_out_rev:
 192              	.LVL15:
 193              	.LFB7:
 196:Core/Src/printf.c **** 
 197:Core/Src/printf.c **** 
 198:Core/Src/printf.c **** // output the specified string in reverse, taking care of any zero-padding
 199:Core/Src/printf.c **** static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, 
 200:Core/Src/printf.c **** {
 194              		.loc 1 200 1 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 16, pretend = 0, frame = 8
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		.loc 1 200 1 is_stmt 0 view .LVU47
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 8


 199 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 200              	.LCFI2:
 201              		.cfi_def_cfa_offset 36
 202              		.cfi_offset 4, -36
 203              		.cfi_offset 5, -32
 204              		.cfi_offset 6, -28
 205              		.cfi_offset 7, -24
 206              		.cfi_offset 8, -20
 207              		.cfi_offset 9, -16
 208              		.cfi_offset 10, -12
 209              		.cfi_offset 11, -8
 210              		.cfi_offset 14, -4
 211 0004 83B0     		sub	sp, sp, #12
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 48
 214 0006 0546     		mov	r5, r0
 215 0008 0E46     		mov	r6, r1
 216 000a 9346     		mov	fp, r2
 217 000c 1F46     		mov	r7, r3
 218 000e DDF830A0 		ldr	r10, [sp, #48]
 219 0012 0D9C     		ldr	r4, [sp, #52]
 220 0014 DDF83890 		ldr	r9, [sp, #56]
 201:Core/Src/printf.c ****   const size_t start_idx = idx;
 221              		.loc 1 201 3 is_stmt 1 view .LVU48
 222              	.LVL16:
 202:Core/Src/printf.c **** 
 203:Core/Src/printf.c ****   // pad spaces up to given width
 204:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 223              		.loc 1 204 3 view .LVU49
 224              		.loc 1 204 6 is_stmt 0 view .LVU50
 225 0018 0F9B     		ldr	r3, [sp, #60]
 226              	.LVL17:
 227              		.loc 1 204 6 view .LVU51
 228 001a 13F0030F 		tst	r3, #3
 229 001e 19D1     		bne	.L15
 230              	.LBB22:
 205:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 231              		.loc 1 205 17 view .LVU52
 232 0020 A046     		mov	r8, r4
 233              	.LBE22:
 234 0022 0192     		str	r2, [sp, #4]
 235              	.LVL18:
 236              	.L14:
 237              	.LBB23:
 238              		.loc 1 205 28 is_stmt 1 discriminator 1 view .LVU53
 239 0024 C845     		cmp	r8, r9
 240 0026 09D2     		bcs	.L25
 206:Core/Src/printf.c ****       out(' ', buffer, idx++, maxlen);
 241              		.loc 1 206 7 discriminator 3 view .LVU54
 242 0028 02F1010B 		add	fp, r2, #1
 243              	.LVL19:
 244              		.loc 1 206 7 is_stmt 0 discriminator 3 view .LVU55
 245 002c 3B46     		mov	r3, r7
 246 002e 3146     		mov	r1, r6
 247 0030 2020     		movs	r0, #32
 248 0032 A847     		blx	r5
 249              	.LVL20:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 9


 205:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 250              		.loc 1 205 38 is_stmt 1 discriminator 3 view .LVU56
 251 0034 08F10108 		add	r8, r8, #1
 252              	.LVL21:
 253              		.loc 1 206 7 is_stmt 0 discriminator 3 view .LVU57
 254 0038 5A46     		mov	r2, fp
 255 003a F3E7     		b	.L14
 256              	.LVL22:
 257              	.L25:
 258              		.loc 1 206 7 discriminator 3 view .LVU58
 259 003c DDF804B0 		ldr	fp, [sp, #4]
 260 0040 08E0     		b	.L15
 261              	.LVL23:
 262              	.L18:
 263              		.loc 1 206 7 discriminator 3 view .LVU59
 264              	.LBE23:
 207:Core/Src/printf.c ****     }
 208:Core/Src/printf.c ****   }
 209:Core/Src/printf.c **** 
 210:Core/Src/printf.c ****   // reverse string
 211:Core/Src/printf.c ****   while (len) {
 212:Core/Src/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 265              		.loc 1 212 5 is_stmt 1 view .LVU60
 266 0042 013C     		subs	r4, r4, #1
 267              	.LVL24:
 268              		.loc 1 212 5 is_stmt 0 view .LVU61
 269 0044 02F10108 		add	r8, r2, #1
 270              	.LVL25:
 271              		.loc 1 212 5 view .LVU62
 272 0048 3B46     		mov	r3, r7
 273 004a 3146     		mov	r1, r6
 274 004c 1AF80400 		ldrb	r0, [r10, r4]	@ zero_extendqisi2
 275 0050 A847     		blx	r5
 276              	.LVL26:
 277 0052 4246     		mov	r2, r8
 278              	.LVL27:
 279              	.L15:
 211:Core/Src/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 280              		.loc 1 211 10 is_stmt 1 view .LVU63
 281 0054 002C     		cmp	r4, #0
 282 0056 F4D1     		bne	.L18
 213:Core/Src/printf.c ****   }
 214:Core/Src/printf.c **** 
 215:Core/Src/printf.c ****   // append pad spaces up to given width
 216:Core/Src/printf.c ****   if (flags & FLAGS_LEFT) {
 283              		.loc 1 216 3 view .LVU64
 284              		.loc 1 216 6 is_stmt 0 view .LVU65
 285 0058 0F9B     		ldr	r3, [sp, #60]
 286 005a 13F0020F 		tst	r3, #2
 287 005e 03D1     		bne	.L19
 288              	.LVL28:
 289              	.L13:
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 218:Core/Src/printf.c ****       out(' ', buffer, idx++, maxlen);
 219:Core/Src/printf.c ****     }
 220:Core/Src/printf.c ****   }
 221:Core/Src/printf.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 10


 222:Core/Src/printf.c ****   return idx;
 223:Core/Src/printf.c **** }
 290              		.loc 1 223 1 view .LVU66
 291 0060 1046     		mov	r0, r2
 292 0062 03B0     		add	sp, sp, #12
 293              	.LCFI4:
 294              		.cfi_remember_state
 295              		.cfi_def_cfa_offset 36
 296              		@ sp needed
 297 0064 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 298              	.LVL29:
 299              	.L19:
 300              	.LCFI5:
 301              		.cfi_restore_state
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 302              		.loc 1 217 28 is_stmt 1 view .LVU67
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 303              		.loc 1 217 16 is_stmt 0 view .LVU68
 304 0068 A2EB0B03 		sub	r3, r2, fp
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 305              		.loc 1 217 28 view .LVU69
 306 006c 4B45     		cmp	r3, r9
 307 006e F7D2     		bcs	.L13
 218:Core/Src/printf.c ****     }
 308              		.loc 1 218 7 is_stmt 1 view .LVU70
 309 0070 541C     		adds	r4, r2, #1
 310              	.LVL30:
 218:Core/Src/printf.c ****     }
 311              		.loc 1 218 7 is_stmt 0 view .LVU71
 312 0072 3B46     		mov	r3, r7
 313 0074 3146     		mov	r1, r6
 314 0076 2020     		movs	r0, #32
 315 0078 A847     		blx	r5
 316              	.LVL31:
 317 007a 2246     		mov	r2, r4
 318 007c F4E7     		b	.L19
 319              		.cfi_endproc
 320              	.LFE7:
 322              		.section	.text._ntoa_format,"ax",%progbits
 323              		.align	1
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 328              	_ntoa_format:
 329              	.LVL32:
 330              	.LFB8:
 224:Core/Src/printf.c **** 
 225:Core/Src/printf.c **** 
 226:Core/Src/printf.c **** // internal itoa format
 227:Core/Src/printf.c **** static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, si
 228:Core/Src/printf.c **** {
 331              		.loc 1 228 1 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 28, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		.loc 1 228 1 is_stmt 0 view .LVU73
 336 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 11


 337              	.LCFI6:
 338              		.cfi_def_cfa_offset 28
 339              		.cfi_offset 4, -28
 340              		.cfi_offset 5, -24
 341              		.cfi_offset 6, -20
 342              		.cfi_offset 7, -16
 343              		.cfi_offset 8, -12
 344              		.cfi_offset 9, -8
 345              		.cfi_offset 14, -4
 346 0004 85B0     		sub	sp, sp, #20
 347              	.LCFI7:
 348              		.cfi_def_cfa_offset 48
 349 0006 9946     		mov	r9, r3
 350 0008 0C9D     		ldr	r5, [sp, #48]
 351 000a 0D9C     		ldr	r4, [sp, #52]
 352 000c 9DF83880 		ldrb	r8, [sp, #56]	@ zero_extendqisi2
 353 0010 DDF840E0 		ldr	lr, [sp, #64]
 354 0014 119F     		ldr	r7, [sp, #68]
 355 0016 129E     		ldr	r6, [sp, #72]
 229:Core/Src/printf.c ****   // pad leading zeros
 230:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT)) {
 356              		.loc 1 230 3 is_stmt 1 view .LVU74
 357              		.loc 1 230 6 is_stmt 0 view .LVU75
 358 0018 16F0020F 		tst	r6, #2
 359 001c 21D1     		bne	.L27
 231:Core/Src/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 360              		.loc 1 231 5 is_stmt 1 view .LVU76
 361              		.loc 1 231 8 is_stmt 0 view .LVU77
 362 001e 7FB1     		cbz	r7, .L30
 363              		.loc 1 231 15 discriminator 1 view .LVU78
 364 0020 16F0010F 		tst	r6, #1
 365 0024 0CD0     		beq	.L30
 366              		.loc 1 231 42 discriminator 2 view .LVU79
 367 0026 B8F1000F 		cmp	r8, #0
 368 002a 02D1     		bne	.L29
 369              		.loc 1 231 55 discriminator 3 view .LVU80
 370 002c 16F00C0F 		tst	r6, #12
 371 0030 06D0     		beq	.L30
 372              	.L29:
 232:Core/Src/printf.c ****       width--;
 373              		.loc 1 232 7 is_stmt 1 view .LVU81
 374              		.loc 1 232 12 is_stmt 0 view .LVU82
 375 0032 013F     		subs	r7, r7, #1
 376              	.LVL33:
 377              		.loc 1 232 12 view .LVU83
 378 0034 04E0     		b	.L30
 379              	.LVL34:
 380              	.L32:
 233:Core/Src/printf.c ****     }
 234:Core/Src/printf.c ****     while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 235:Core/Src/printf.c ****       buf[len++] = '0';
 381              		.loc 1 235 7 is_stmt 1 view .LVU84
 382              		.loc 1 235 18 is_stmt 0 view .LVU85
 383 0036 4FF0300C 		mov	ip, #48
 384 003a 05F804C0 		strb	ip, [r5, r4]
 385              		.loc 1 235 14 view .LVU86
 386 003e 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 12


 387              	.LVL35:
 388              	.L30:
 234:Core/Src/printf.c ****       buf[len++] = '0';
 389              		.loc 1 234 25 is_stmt 1 view .LVU87
 390 0040 7445     		cmp	r4, lr
 391 0042 01D2     		bcs	.L33
 234:Core/Src/printf.c ****       buf[len++] = '0';
 392              		.loc 1 234 25 is_stmt 0 discriminator 1 view .LVU88
 393 0044 1F2C     		cmp	r4, #31
 394 0046 F6D9     		bls	.L32
 395              	.L33:
 236:Core/Src/printf.c ****     }
 237:Core/Src/printf.c ****     while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 396              		.loc 1 237 53 is_stmt 1 view .LVU89
 397 0048 16F0010F 		tst	r6, #1
 398 004c 09D0     		beq	.L27
 399              		.loc 1 237 36 is_stmt 0 discriminator 1 view .LVU90
 400 004e BC42     		cmp	r4, r7
 401 0050 07D2     		bcs	.L27
 402              		.loc 1 237 53 discriminator 2 view .LVU91
 403 0052 1F2C     		cmp	r4, #31
 404 0054 05D8     		bhi	.L27
 238:Core/Src/printf.c ****       buf[len++] = '0';
 405              		.loc 1 238 7 is_stmt 1 view .LVU92
 406              	.LVL36:
 407              		.loc 1 238 18 is_stmt 0 view .LVU93
 408 0056 4FF0300C 		mov	ip, #48
 409 005a 05F804C0 		strb	ip, [r5, r4]
 410              		.loc 1 238 14 view .LVU94
 411 005e 0134     		adds	r4, r4, #1
 412              	.LVL37:
 413              		.loc 1 238 14 view .LVU95
 414 0060 F2E7     		b	.L33
 415              	.LVL38:
 416              	.L27:
 239:Core/Src/printf.c ****     }
 240:Core/Src/printf.c ****   }
 241:Core/Src/printf.c **** 
 242:Core/Src/printf.c ****   // handle hash
 243:Core/Src/printf.c ****   if (flags & FLAGS_HASH) {
 417              		.loc 1 243 3 is_stmt 1 view .LVU96
 418              		.loc 1 243 6 is_stmt 0 view .LVU97
 419 0062 16F0100F 		tst	r6, #16
 420 0066 14D0     		beq	.L35
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 421              		.loc 1 244 5 is_stmt 1 view .LVU98
 422              		.loc 1 244 8 is_stmt 0 view .LVU99
 423 0068 16F4806F 		tst	r6, #1024
 424 006c 04D1     		bne	.L36
 425              		.loc 1 244 36 discriminator 1 view .LVU100
 426 006e 1CB1     		cbz	r4, .L36
 427              		.loc 1 244 43 discriminator 2 view .LVU101
 428 0070 7445     		cmp	r4, lr
 429 0072 22D0     		beq	.L37
 430              		.loc 1 244 61 discriminator 3 view .LVU102
 431 0074 BC42     		cmp	r4, r7
 432 0076 20D0     		beq	.L37
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 13


 433              	.LVL39:
 434              	.L36:
 245:Core/Src/printf.c ****       len--;
 246:Core/Src/printf.c ****       if (len && (base == 16U)) {
 247:Core/Src/printf.c ****         len--;
 248:Core/Src/printf.c ****       }
 249:Core/Src/printf.c ****     }
 250:Core/Src/printf.c ****     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 435              		.loc 1 250 5 is_stmt 1 view .LVU103
 436              		.loc 1 250 8 is_stmt 0 view .LVU104
 437 0078 0F9B     		ldr	r3, [sp, #60]
 438 007a 102B     		cmp	r3, #16
 439 007c 36D0     		beq	.L47
 440              	.LVL40:
 441              	.L39:
 251:Core/Src/printf.c ****       buf[len++] = 'x';
 252:Core/Src/printf.c ****     }
 253:Core/Src/printf.c ****     else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 254:Core/Src/printf.c ****       buf[len++] = 'X';
 255:Core/Src/printf.c ****     }
 256:Core/Src/printf.c ****     else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 442              		.loc 1 256 10 is_stmt 1 view .LVU105
 443              		.loc 1 256 13 is_stmt 0 view .LVU106
 444 007e 0F9B     		ldr	r3, [sp, #60]
 445 0080 022B     		cmp	r3, #2
 446 0082 3ED0     		beq	.L48
 447              	.L40:
 448              	.LVL41:
 257:Core/Src/printf.c ****       buf[len++] = 'b';
 258:Core/Src/printf.c ****     }
 259:Core/Src/printf.c ****     if (len < PRINTF_NTOA_BUFFER_SIZE) {
 449              		.loc 1 259 5 is_stmt 1 view .LVU107
 450              		.loc 1 259 8 is_stmt 0 view .LVU108
 451 0084 1F2C     		cmp	r4, #31
 452 0086 0ED8     		bhi	.L41
 260:Core/Src/printf.c ****       buf[len++] = '0';
 453              		.loc 1 260 7 is_stmt 1 view .LVU109
 454              	.LVL42:
 455              		.loc 1 260 18 is_stmt 0 view .LVU110
 456 0088 4FF0300C 		mov	ip, #48
 457 008c 05F804C0 		strb	ip, [r5, r4]
 458              		.loc 1 260 14 view .LVU111
 459 0090 0134     		adds	r4, r4, #1
 460              	.LVL43:
 461              	.L35:
 261:Core/Src/printf.c ****     }
 262:Core/Src/printf.c ****   }
 263:Core/Src/printf.c **** 
 264:Core/Src/printf.c ****   if (len < PRINTF_NTOA_BUFFER_SIZE) {
 462              		.loc 1 264 3 is_stmt 1 view .LVU112
 463              		.loc 1 264 6 is_stmt 0 view .LVU113
 464 0092 1F2C     		cmp	r4, #31
 465 0094 07D8     		bhi	.L41
 265:Core/Src/printf.c ****     if (negative) {
 466              		.loc 1 265 5 is_stmt 1 view .LVU114
 467              		.loc 1 265 8 is_stmt 0 view .LVU115
 468 0096 B8F1000F 		cmp	r8, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 14


 469 009a 3AD0     		beq	.L42
 266:Core/Src/printf.c ****       buf[len++] = '-';
 470              		.loc 1 266 7 is_stmt 1 view .LVU116
 471              	.LVL44:
 472              		.loc 1 266 18 is_stmt 0 view .LVU117
 473 009c 4FF02D0C 		mov	ip, #45
 474 00a0 05F804C0 		strb	ip, [r5, r4]
 475              		.loc 1 266 14 view .LVU118
 476 00a4 0134     		adds	r4, r4, #1
 477              	.LVL45:
 478              	.L41:
 267:Core/Src/printf.c ****     }
 268:Core/Src/printf.c ****     else if (flags & FLAGS_PLUS) {
 269:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 270:Core/Src/printf.c ****     }
 271:Core/Src/printf.c ****     else if (flags & FLAGS_SPACE) {
 272:Core/Src/printf.c ****       buf[len++] = ' ';
 273:Core/Src/printf.c ****     }
 274:Core/Src/printf.c ****   }
 275:Core/Src/printf.c **** 
 276:Core/Src/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 479              		.loc 1 276 3 is_stmt 1 view .LVU119
 480              		.loc 1 276 10 is_stmt 0 view .LVU120
 481 00a6 0396     		str	r6, [sp, #12]
 482 00a8 0297     		str	r7, [sp, #8]
 483 00aa 0194     		str	r4, [sp, #4]
 484 00ac 0095     		str	r5, [sp]
 485 00ae 4B46     		mov	r3, r9
 486 00b0 FFF7FEFF 		bl	_out_rev
 487              	.LVL46:
 277:Core/Src/printf.c **** }
 488              		.loc 1 277 1 view .LVU121
 489 00b4 05B0     		add	sp, sp, #20
 490              	.LCFI8:
 491              		.cfi_remember_state
 492              		.cfi_def_cfa_offset 28
 493              		@ sp needed
 494 00b6 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 495              	.LVL47:
 496              	.L37:
 497              	.LCFI9:
 498              		.cfi_restore_state
 245:Core/Src/printf.c ****       if (len && (base == 16U)) {
 499              		.loc 1 245 7 is_stmt 1 view .LVU122
 246:Core/Src/printf.c ****         len--;
 500              		.loc 1 246 7 view .LVU123
 246:Core/Src/printf.c ****         len--;
 501              		.loc 1 246 10 is_stmt 0 view .LVU124
 502 00ba B4F1010C 		subs	ip, r4, #1
 503              	.LVL48:
 246:Core/Src/printf.c ****         len--;
 504              		.loc 1 246 10 view .LVU125
 505 00be 13D0     		beq	.L44
 246:Core/Src/printf.c ****         len--;
 506              		.loc 1 246 15 discriminator 1 view .LVU126
 507 00c0 0F9B     		ldr	r3, [sp, #60]
 508              	.LVL49:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 15


 246:Core/Src/printf.c ****         len--;
 509              		.loc 1 246 15 discriminator 1 view .LVU127
 510 00c2 102B     		cmp	r3, #16
 511 00c4 0ED0     		beq	.L49
 245:Core/Src/printf.c ****       if (len && (base == 16U)) {
 512              		.loc 1 245 10 view .LVU128
 513 00c6 6446     		mov	r4, ip
 514              	.LVL50:
 515              	.L38:
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 516              		.loc 1 253 10 is_stmt 1 view .LVU129
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 517              		.loc 1 253 13 is_stmt 0 view .LVU130
 518 00c8 0F9B     		ldr	r3, [sp, #60]
 519 00ca 102B     		cmp	r3, #16
 520 00cc D7D1     		bne	.L39
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 521              		.loc 1 253 28 discriminator 1 view .LVU131
 522 00ce 16F0200F 		tst	r6, #32
 523 00d2 D4D0     		beq	.L39
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 524              		.loc 1 253 57 discriminator 2 view .LVU132
 525 00d4 1F2C     		cmp	r4, #31
 526 00d6 D2D8     		bhi	.L39
 254:Core/Src/printf.c ****     }
 527              		.loc 1 254 7 is_stmt 1 view .LVU133
 528              	.LVL51:
 254:Core/Src/printf.c ****     }
 529              		.loc 1 254 18 is_stmt 0 view .LVU134
 530 00d8 4FF0580C 		mov	ip, #88
 531 00dc 05F804C0 		strb	ip, [r5, r4]
 254:Core/Src/printf.c ****     }
 532              		.loc 1 254 14 view .LVU135
 533 00e0 0134     		adds	r4, r4, #1
 534              	.LVL52:
 254:Core/Src/printf.c ****     }
 535              		.loc 1 254 18 view .LVU136
 536 00e2 CFE7     		b	.L40
 537              	.LVL53:
 538              	.L49:
 247:Core/Src/printf.c ****       }
 539              		.loc 1 247 9 is_stmt 1 view .LVU137
 247:Core/Src/printf.c ****       }
 540              		.loc 1 247 12 is_stmt 0 view .LVU138
 541 00e4 023C     		subs	r4, r4, #2
 542              	.LVL54:
 247:Core/Src/printf.c ****       }
 543              		.loc 1 247 12 view .LVU139
 544 00e6 C7E7     		b	.L36
 545              	.LVL55:
 546              	.L44:
 245:Core/Src/printf.c ****       if (len && (base == 16U)) {
 547              		.loc 1 245 10 view .LVU140
 548 00e8 6446     		mov	r4, ip
 549 00ea C5E7     		b	.L36
 550              	.LVL56:
 551              	.L47:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 16


 250:Core/Src/printf.c ****       buf[len++] = 'x';
 552              		.loc 1 250 23 discriminator 1 view .LVU141
 553 00ec 16F0200F 		tst	r6, #32
 554 00f0 EAD1     		bne	.L38
 250:Core/Src/printf.c ****       buf[len++] = 'x';
 555              		.loc 1 250 53 discriminator 2 view .LVU142
 556 00f2 1F2C     		cmp	r4, #31
 557 00f4 E8D8     		bhi	.L38
 251:Core/Src/printf.c ****     }
 558              		.loc 1 251 7 is_stmt 1 view .LVU143
 559              	.LVL57:
 251:Core/Src/printf.c ****     }
 560              		.loc 1 251 18 is_stmt 0 view .LVU144
 561 00f6 4FF0780C 		mov	ip, #120
 562 00fa 05F804C0 		strb	ip, [r5, r4]
 251:Core/Src/printf.c ****     }
 563              		.loc 1 251 14 view .LVU145
 564 00fe 0134     		adds	r4, r4, #1
 565              	.LVL58:
 251:Core/Src/printf.c ****     }
 566              		.loc 1 251 18 view .LVU146
 567 0100 C0E7     		b	.L40
 568              	.LVL59:
 569              	.L48:
 256:Core/Src/printf.c ****       buf[len++] = 'b';
 570              		.loc 1 256 27 discriminator 1 view .LVU147
 571 0102 1F2C     		cmp	r4, #31
 572 0104 CFD8     		bhi	.L41
 257:Core/Src/printf.c ****     }
 573              		.loc 1 257 7 is_stmt 1 view .LVU148
 574              	.LVL60:
 257:Core/Src/printf.c ****     }
 575              		.loc 1 257 18 is_stmt 0 view .LVU149
 576 0106 4FF0620C 		mov	ip, #98
 577 010a 05F804C0 		strb	ip, [r5, r4]
 257:Core/Src/printf.c ****     }
 578              		.loc 1 257 14 view .LVU150
 579 010e 0134     		adds	r4, r4, #1
 580              	.LVL61:
 257:Core/Src/printf.c ****     }
 581              		.loc 1 257 14 view .LVU151
 582 0110 B8E7     		b	.L40
 583              	.L42:
 268:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 584              		.loc 1 268 10 is_stmt 1 view .LVU152
 268:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 585              		.loc 1 268 13 is_stmt 0 view .LVU153
 586 0112 16F0040F 		tst	r6, #4
 587 0116 05D0     		beq	.L43
 269:Core/Src/printf.c ****     }
 588              		.loc 1 269 7 is_stmt 1 view .LVU154
 589              	.LVL62:
 269:Core/Src/printf.c ****     }
 590              		.loc 1 269 18 is_stmt 0 view .LVU155
 591 0118 4FF02B0C 		mov	ip, #43
 592 011c 05F804C0 		strb	ip, [r5, r4]
 269:Core/Src/printf.c ****     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 17


 593              		.loc 1 269 14 view .LVU156
 594 0120 0134     		adds	r4, r4, #1
 595              	.LVL63:
 269:Core/Src/printf.c ****     }
 596              		.loc 1 269 14 view .LVU157
 597 0122 C0E7     		b	.L41
 598              	.L43:
 271:Core/Src/printf.c ****       buf[len++] = ' ';
 599              		.loc 1 271 10 is_stmt 1 view .LVU158
 271:Core/Src/printf.c ****       buf[len++] = ' ';
 600              		.loc 1 271 13 is_stmt 0 view .LVU159
 601 0124 16F0080F 		tst	r6, #8
 602 0128 BDD0     		beq	.L41
 272:Core/Src/printf.c ****     }
 603              		.loc 1 272 7 is_stmt 1 view .LVU160
 604              	.LVL64:
 272:Core/Src/printf.c ****     }
 605              		.loc 1 272 18 is_stmt 0 view .LVU161
 606 012a 4FF0200C 		mov	ip, #32
 607 012e 05F804C0 		strb	ip, [r5, r4]
 272:Core/Src/printf.c ****     }
 608              		.loc 1 272 14 view .LVU162
 609 0132 0134     		adds	r4, r4, #1
 610              	.LVL65:
 272:Core/Src/printf.c ****     }
 611              		.loc 1 272 14 view .LVU163
 612 0134 B7E7     		b	.L41
 613              		.cfi_endproc
 614              	.LFE8:
 616              		.section	.text._ntoa_long,"ax",%progbits
 617              		.align	1
 618              		.syntax unified
 619              		.thumb
 620              		.thumb_func
 622              	_ntoa_long:
 623              	.LVL66:
 624              	.LFB9:
 278:Core/Src/printf.c **** 
 279:Core/Src/printf.c **** 
 280:Core/Src/printf.c **** // internal itoa for 'long' type
 281:Core/Src/printf.c **** static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long v
 282:Core/Src/printf.c **** {
 625              		.loc 1 282 1 is_stmt 1 view -0
 626              		.cfi_startproc
 627              		@ args = 24, pretend = 0, frame = 32
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              		.loc 1 282 1 is_stmt 0 view .LVU165
 630 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 631              	.LCFI10:
 632              		.cfi_def_cfa_offset 20
 633              		.cfi_offset 4, -20
 634              		.cfi_offset 5, -16
 635              		.cfi_offset 6, -12
 636              		.cfi_offset 7, -8
 637              		.cfi_offset 14, -4
 638 0002 91B0     		sub	sp, sp, #68
 639              	.LCFI11:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 18


 640              		.cfi_def_cfa_offset 88
 641 0004 169C     		ldr	r4, [sp, #88]
 642 0006 189D     		ldr	r5, [sp, #96]
 643 0008 1B9E     		ldr	r6, [sp, #108]
 283:Core/Src/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 644              		.loc 1 283 3 is_stmt 1 view .LVU166
 284:Core/Src/printf.c ****   size_t len = 0U;
 645              		.loc 1 284 3 view .LVU167
 646              	.LVL67:
 285:Core/Src/printf.c **** 
 286:Core/Src/printf.c ****   // no hash for 0 values
 287:Core/Src/printf.c ****   if (!value) {
 647              		.loc 1 287 3 view .LVU168
 648              		.loc 1 287 6 is_stmt 0 view .LVU169
 649 000a 0CB9     		cbnz	r4, .L51
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 650              		.loc 1 288 5 is_stmt 1 view .LVU170
 651              		.loc 1 288 11 is_stmt 0 view .LVU171
 652 000c 26F01006 		bic	r6, r6, #16
 653              	.LVL68:
 654              	.L51:
 289:Core/Src/printf.c ****   }
 290:Core/Src/printf.c **** 
 291:Core/Src/printf.c ****   // write if precision != 0 and value is != 0
 292:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 655              		.loc 1 292 3 is_stmt 1 view .LVU172
 656              		.loc 1 292 6 is_stmt 0 view .LVU173
 657 0010 16F4806E 		ands	lr, r6, #1024
 658 0014 16D0     		beq	.L57
 659              		.loc 1 292 34 discriminator 1 view .LVU174
 660 0016 64B3     		cbz	r4, .L58
 661 0018 4FF0000E 		mov	lr, #0
 662 001c 12E0     		b	.L57
 663              	.LVL69:
 664              	.L62:
 665              	.LBB24:
 293:Core/Src/printf.c ****     do {
 294:Core/Src/printf.c ****       const char digit = (char)(value % base);
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 666              		.loc 1 295 18 discriminator 1 view .LVU175
 667 001e 0CF1300C 		add	ip, ip, #48
 668              	.LVL70:
 669              		.loc 1 295 18 discriminator 1 view .LVU176
 670 0022 5FFA8CFC 		uxtb	ip, ip
 671              	.LVL71:
 672              	.L55:
 673              		.loc 1 295 14 discriminator 8 view .LVU177
 674 0026 0EF10107 		add	r7, lr, #1
 675              	.LVL72:
 676              		.loc 1 295 18 discriminator 8 view .LVU178
 677 002a 0EF1400E 		add	lr, lr, #64
 678 002e EE44     		add	lr, sp, lr
 679 0030 0EF820CC 		strb	ip, [lr, #-32]
 296:Core/Src/printf.c ****       value /= base;
 680              		.loc 1 296 7 is_stmt 1 discriminator 8 view .LVU179
 681              		.loc 1 296 13 is_stmt 0 discriminator 8 view .LVU180
 682 0034 B4FBF5FC 		udiv	ip, r4, r5
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 19


 683              	.LVL73:
 684              		.loc 1 296 13 discriminator 8 view .LVU181
 685              	.LBE24:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 686              		.loc 1 297 20 is_stmt 1 discriminator 8 view .LVU182
 687 0038 AC42     		cmp	r4, r5
 688 003a 1BD3     		bcc	.L53
 689              		.loc 1 297 20 is_stmt 0 discriminator 1 view .LVU183
 690 003c 1F2F     		cmp	r7, #31
 691 003e 19D8     		bhi	.L53
 692              	.LBB25:
 295:Core/Src/printf.c ****       value /= base;
 693              		.loc 1 295 14 view .LVU184
 694 0040 BE46     		mov	lr, r7
 296:Core/Src/printf.c ****       value /= base;
 695              		.loc 1 296 13 view .LVU185
 696 0042 6446     		mov	r4, ip
 697              	.LVL74:
 698              	.L57:
 296:Core/Src/printf.c ****       value /= base;
 699              		.loc 1 296 13 view .LVU186
 700              	.LBE25:
 293:Core/Src/printf.c ****       const char digit = (char)(value % base);
 701              		.loc 1 293 5 is_stmt 1 view .LVU187
 702              	.LBB26:
 294:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 703              		.loc 1 294 7 view .LVU188
 294:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 704              		.loc 1 294 39 is_stmt 0 view .LVU189
 705 0044 B4FBF5FC 		udiv	ip, r4, r5
 706 0048 05FB1C4C 		mls	ip, r5, ip, r4
 294:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 707              		.loc 1 294 18 view .LVU190
 708 004c 5FFA8CFC 		uxtb	ip, ip
 709              	.LVL75:
 295:Core/Src/printf.c ****       value /= base;
 710              		.loc 1 295 7 is_stmt 1 view .LVU191
 295:Core/Src/printf.c ****       value /= base;
 711              		.loc 1 295 18 is_stmt 0 view .LVU192
 712 0050 BCF1090F 		cmp	ip, #9
 713 0054 E3D9     		bls	.L62
 295:Core/Src/printf.c ****       value /= base;
 714              		.loc 1 295 85 discriminator 2 view .LVU193
 715 0056 16F0200F 		tst	r6, #32
 716 005a 08D0     		beq	.L59
 295:Core/Src/printf.c ****       value /= base;
 717              		.loc 1 295 85 view .LVU194
 718 005c 4127     		movs	r7, #65
 719              	.L56:
 295:Core/Src/printf.c ****       value /= base;
 720              		.loc 1 295 85 discriminator 7 view .LVU195
 721 005e BC44     		add	ip, ip, r7
 722              	.LVL76:
 295:Core/Src/printf.c ****       value /= base;
 723              		.loc 1 295 85 discriminator 7 view .LVU196
 724 0060 5FFA8CFC 		uxtb	ip, ip
 295:Core/Src/printf.c ****       value /= base;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 20


 725              		.loc 1 295 18 discriminator 7 view .LVU197
 726 0064 ACF10A0C 		sub	ip, ip, #10
 727 0068 5FFA8CFC 		uxtb	ip, ip
 728 006c DBE7     		b	.L55
 729              	.LVL77:
 730              	.L59:
 295:Core/Src/printf.c ****       value /= base;
 731              		.loc 1 295 85 view .LVU198
 732 006e 6127     		movs	r7, #97
 733 0070 F5E7     		b	.L56
 734              	.LVL78:
 735              	.L58:
 295:Core/Src/printf.c ****       value /= base;
 736              		.loc 1 295 85 view .LVU199
 737              	.LBE26:
 284:Core/Src/printf.c **** 
 738              		.loc 1 284 10 view .LVU200
 739 0072 2746     		mov	r7, r4
 740              	.LVL79:
 741              	.L53:
 298:Core/Src/printf.c ****   }
 299:Core/Src/printf.c **** 
 300:Core/Src/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 742              		.loc 1 300 3 is_stmt 1 view .LVU201
 743              		.loc 1 300 10 is_stmt 0 view .LVU202
 744 0074 0696     		str	r6, [sp, #24]
 745 0076 1A9C     		ldr	r4, [sp, #104]
 746 0078 0594     		str	r4, [sp, #20]
 747 007a 199C     		ldr	r4, [sp, #100]
 748 007c 0494     		str	r4, [sp, #16]
 749 007e 0395     		str	r5, [sp, #12]
 750 0080 9DF85C40 		ldrb	r4, [sp, #92]	@ zero_extendqisi2
 751 0084 0294     		str	r4, [sp, #8]
 752 0086 0197     		str	r7, [sp, #4]
 753 0088 08AC     		add	r4, sp, #32
 754 008a 0094     		str	r4, [sp]
 755 008c FFF7FEFF 		bl	_ntoa_format
 756              	.LVL80:
 301:Core/Src/printf.c **** }
 757              		.loc 1 301 1 view .LVU203
 758 0090 11B0     		add	sp, sp, #68
 759              	.LCFI12:
 760              		.cfi_def_cfa_offset 20
 761              		@ sp needed
 762 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 763              		.loc 1 301 1 view .LVU204
 764              		.cfi_endproc
 765              	.LFE9:
 767              		.global	__aeabi_uldivmod
 768              		.section	.text._ntoa_long_long,"ax",%progbits
 769              		.align	1
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 774              	_ntoa_long_long:
 775              	.LVL81:
 776              	.LFB10:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 21


 302:Core/Src/printf.c **** 
 303:Core/Src/printf.c **** 
 304:Core/Src/printf.c **** // internal itoa for 'long long' type
 305:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 306:Core/Src/printf.c **** static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned l
 307:Core/Src/printf.c **** {
 777              		.loc 1 307 1 is_stmt 1 view -0
 778              		.cfi_startproc
 779              		@ args = 36, pretend = 0, frame = 48
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              		.loc 1 307 1 is_stmt 0 view .LVU206
 782 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 783              	.LCFI13:
 784              		.cfi_def_cfa_offset 36
 785              		.cfi_offset 4, -36
 786              		.cfi_offset 5, -32
 787              		.cfi_offset 6, -28
 788              		.cfi_offset 7, -24
 789              		.cfi_offset 8, -20
 790              		.cfi_offset 9, -16
 791              		.cfi_offset 10, -12
 792              		.cfi_offset 11, -8
 793              		.cfi_offset 14, -4
 794 0004 95B0     		sub	sp, sp, #84
 795              	.LCFI14:
 796              		.cfi_def_cfa_offset 120
 797 0006 0990     		str	r0, [sp, #36]
 798 0008 0A91     		str	r1, [sp, #40]
 799 000a 0B92     		str	r2, [sp, #44]
 800 000c 9846     		mov	r8, r3
 801 000e DDF878B0 		ldr	fp, [sp, #120]
 802 0012 DDF87C90 		ldr	r9, [sp, #124]
 803 0016 229D     		ldr	r5, [sp, #136]
 804 0018 239F     		ldr	r7, [sp, #140]
 805 001a 269E     		ldr	r6, [sp, #152]
 308:Core/Src/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 806              		.loc 1 308 3 is_stmt 1 view .LVU207
 309:Core/Src/printf.c ****   size_t len = 0U;
 807              		.loc 1 309 3 view .LVU208
 808              	.LVL82:
 310:Core/Src/printf.c **** 
 311:Core/Src/printf.c ****   // no hash for 0 values
 312:Core/Src/printf.c ****   if (!value) {
 809              		.loc 1 312 3 view .LVU209
 810              		.loc 1 312 6 is_stmt 0 view .LVU210
 811 001c 5BEA0902 		orrs	r2, fp, r9
 812              	.LVL83:
 813              		.loc 1 312 6 view .LVU211
 814 0020 01D1     		bne	.L64
 313:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 815              		.loc 1 313 5 is_stmt 1 view .LVU212
 816              		.loc 1 313 11 is_stmt 0 view .LVU213
 817 0022 26F01006 		bic	r6, r6, #16
 818              	.LVL84:
 819              	.L64:
 314:Core/Src/printf.c ****   }
 315:Core/Src/printf.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 22


 316:Core/Src/printf.c ****   // write if precision != 0 and value is != 0
 317:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 820              		.loc 1 317 3 is_stmt 1 view .LVU214
 821              		.loc 1 317 6 is_stmt 0 view .LVU215
 822 0026 16F48064 		ands	r4, r6, #1024
 823 002a 1ED0     		beq	.L70
 824              		.loc 1 317 34 discriminator 1 view .LVU216
 825 002c 5BEA0902 		orrs	r2, fp, r9
 826 0030 2FD0     		beq	.L71
 827 0032 0024     		movs	r4, #0
 828 0034 19E0     		b	.L70
 829              	.LVL85:
 830              	.L77:
 831              	.LBB27:
 318:Core/Src/printf.c ****     do {
 319:Core/Src/printf.c ****       const char digit = (char)(value % base);
 320:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 832              		.loc 1 320 18 discriminator 1 view .LVU217
 833 0036 3032     		adds	r2, r2, #48
 834              	.LVL86:
 835              		.loc 1 320 18 discriminator 1 view .LVU218
 836 0038 D3B2     		uxtb	r3, r2
 837              	.LVL87:
 838              	.L68:
 839              		.loc 1 320 14 discriminator 8 view .LVU219
 840 003a 04F1010A 		add	r10, r4, #1
 841              	.LVL88:
 842              		.loc 1 320 18 discriminator 8 view .LVU220
 843 003e 04F15002 		add	r2, r4, #80
 844 0042 0DEB0204 		add	r4, sp, r2
 845 0046 04F8203C 		strb	r3, [r4, #-32]
 321:Core/Src/printf.c ****       value /= base;
 846              		.loc 1 321 7 is_stmt 1 discriminator 8 view .LVU221
 847              		.loc 1 321 13 is_stmt 0 discriminator 8 view .LVU222
 848 004a 2A46     		mov	r2, r5
 849 004c 3B46     		mov	r3, r7
 850 004e 5846     		mov	r0, fp
 851 0050 4946     		mov	r1, r9
 852 0052 FFF7FEFF 		bl	__aeabi_uldivmod
 853              	.LVL89:
 854              		.loc 1 321 13 discriminator 8 view .LVU223
 855              	.LBE27:
 322:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 856              		.loc 1 322 20 is_stmt 1 discriminator 8 view .LVU224
 857 0056 AB45     		cmp	fp, r5
 858 0058 79EB0709 		sbcs	r9, r9, r7
 859 005c 1BD3     		bcc	.L66
 860              		.loc 1 322 20 is_stmt 0 discriminator 1 view .LVU225
 861 005e BAF11F0F 		cmp	r10, #31
 862 0062 18D8     		bhi	.L66
 863              	.LBB28:
 320:Core/Src/printf.c ****       value /= base;
 864              		.loc 1 320 14 view .LVU226
 865 0064 5446     		mov	r4, r10
 321:Core/Src/printf.c ****       value /= base;
 866              		.loc 1 321 13 view .LVU227
 867 0066 8346     		mov	fp, r0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 23


 868 0068 8946     		mov	r9, r1
 869              	.LVL90:
 870              	.L70:
 321:Core/Src/printf.c ****       value /= base;
 871              		.loc 1 321 13 view .LVU228
 872              	.LBE28:
 318:Core/Src/printf.c ****       const char digit = (char)(value % base);
 873              		.loc 1 318 5 is_stmt 1 view .LVU229
 874              	.LBB29:
 319:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 875              		.loc 1 319 7 view .LVU230
 319:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 876              		.loc 1 319 39 is_stmt 0 view .LVU231
 877 006a 2A46     		mov	r2, r5
 878 006c 3B46     		mov	r3, r7
 879 006e 5846     		mov	r0, fp
 880 0070 4946     		mov	r1, r9
 881 0072 FFF7FEFF 		bl	__aeabi_uldivmod
 882              	.LVL91:
 319:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 883              		.loc 1 319 18 view .LVU232
 884 0076 D2B2     		uxtb	r2, r2
 885              	.LVL92:
 320:Core/Src/printf.c ****       value /= base;
 886              		.loc 1 320 7 is_stmt 1 view .LVU233
 320:Core/Src/printf.c ****       value /= base;
 887              		.loc 1 320 18 is_stmt 0 view .LVU234
 888 0078 092A     		cmp	r2, #9
 889 007a DCD9     		bls	.L77
 320:Core/Src/printf.c ****       value /= base;
 890              		.loc 1 320 85 discriminator 2 view .LVU235
 891 007c 16F0200F 		tst	r6, #32
 892 0080 05D0     		beq	.L72
 320:Core/Src/printf.c ****       value /= base;
 893              		.loc 1 320 85 view .LVU236
 894 0082 4123     		movs	r3, #65
 895              	.L69:
 320:Core/Src/printf.c ****       value /= base;
 896              		.loc 1 320 85 discriminator 7 view .LVU237
 897 0084 1344     		add	r3, r3, r2
 898 0086 DBB2     		uxtb	r3, r3
 320:Core/Src/printf.c ****       value /= base;
 899              		.loc 1 320 18 discriminator 7 view .LVU238
 900 0088 0A3B     		subs	r3, r3, #10
 901 008a DBB2     		uxtb	r3, r3
 902 008c D5E7     		b	.L68
 903              	.L72:
 320:Core/Src/printf.c ****       value /= base;
 904              		.loc 1 320 85 view .LVU239
 905 008e 6123     		movs	r3, #97
 906 0090 F8E7     		b	.L69
 907              	.LVL93:
 908              	.L71:
 320:Core/Src/printf.c ****       value /= base;
 909              		.loc 1 320 85 view .LVU240
 910              	.LBE29:
 309:Core/Src/printf.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 24


 911              		.loc 1 309 10 view .LVU241
 912 0092 4FF0000A 		mov	r10, #0
 913              	.LVL94:
 914              	.L66:
 323:Core/Src/printf.c ****   }
 324:Core/Src/printf.c **** 
 325:Core/Src/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 915              		.loc 1 325 3 is_stmt 1 view .LVU242
 916              		.loc 1 325 10 is_stmt 0 view .LVU243
 917 0096 0696     		str	r6, [sp, #24]
 918 0098 259B     		ldr	r3, [sp, #148]
 919 009a 0593     		str	r3, [sp, #20]
 920 009c 249B     		ldr	r3, [sp, #144]
 921 009e 0493     		str	r3, [sp, #16]
 922 00a0 0395     		str	r5, [sp, #12]
 923 00a2 9DF88030 		ldrb	r3, [sp, #128]	@ zero_extendqisi2
 924 00a6 0293     		str	r3, [sp, #8]
 925 00a8 CDF804A0 		str	r10, [sp, #4]
 926 00ac 0CAB     		add	r3, sp, #48
 927 00ae 0093     		str	r3, [sp]
 928 00b0 4346     		mov	r3, r8
 929 00b2 0B9A     		ldr	r2, [sp, #44]
 930 00b4 0A99     		ldr	r1, [sp, #40]
 931 00b6 0998     		ldr	r0, [sp, #36]
 932 00b8 FFF7FEFF 		bl	_ntoa_format
 933              	.LVL95:
 326:Core/Src/printf.c **** }
 934              		.loc 1 326 1 view .LVU244
 935 00bc 15B0     		add	sp, sp, #84
 936              	.LCFI15:
 937              		.cfi_def_cfa_offset 36
 938              		@ sp needed
 939 00be BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 940              		.loc 1 326 1 view .LVU245
 941              		.cfi_endproc
 942              	.LFE10:
 944              		.global	__aeabi_dcmpeq
 945              		.global	__aeabi_dcmpgt
 946              		.global	__aeabi_dcmplt
 947              		.global	__aeabi_i2d
 948              		.global	__aeabi_dmul
 949              		.global	__aeabi_dadd
 950              		.global	__aeabi_dsub
 951              		.global	__aeabi_d2iz
 952              		.global	__aeabi_ddiv
 953              		.global	__aeabi_dcmpge
 954              		.section	.text._etoa,"ax",%progbits
 955              		.align	1
 956              		.syntax unified
 957              		.thumb
 958              		.thumb_func
 960              	_etoa:
 961              	.LVL96:
 962              	.LFB12:
 327:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_LONG_LONG
 328:Core/Src/printf.c **** 
 329:Core/Src/printf.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 25


 330:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 331:Core/Src/printf.c **** 
 332:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 333:Core/Src/printf.c **** // forward declaration so that _ftoa can switch to exp notation for values > PRINTF_MAX_FLOAT
 334:Core/Src/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 335:Core/Src/printf.c **** #endif
 336:Core/Src/printf.c **** 
 337:Core/Src/printf.c **** 
 338:Core/Src/printf.c **** // internal ftoa for fixed decimal floating point
 339:Core/Src/printf.c **** static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 340:Core/Src/printf.c **** {
 341:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 342:Core/Src/printf.c ****   size_t len  = 0U;
 343:Core/Src/printf.c ****   double diff = 0.0;
 344:Core/Src/printf.c **** 
 345:Core/Src/printf.c ****   // powers of 10
 346:Core/Src/printf.c ****   static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 10
 347:Core/Src/printf.c **** 
 348:Core/Src/printf.c ****   // test for special values
 349:Core/Src/printf.c ****   if (value != value)
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 351:Core/Src/printf.c ****   if (value < -DBL_MAX)
 352:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 353:Core/Src/printf.c ****   if (value > DBL_MAX)
 354:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 355:Core/Src/printf.c **** 
 356:Core/Src/printf.c ****   // test for very large values
 357:Core/Src/printf.c ****   // standard printf behavior is to print EVERY whole number digit -- which could be 100s of charac
 358:Core/Src/printf.c ****   if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 359:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 360:Core/Src/printf.c ****     return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 361:Core/Src/printf.c **** #else
 362:Core/Src/printf.c ****     return 0U;
 363:Core/Src/printf.c **** #endif
 364:Core/Src/printf.c ****   }
 365:Core/Src/printf.c **** 
 366:Core/Src/printf.c ****   // test for negative
 367:Core/Src/printf.c ****   bool negative = false;
 368:Core/Src/printf.c ****   if (value < 0) {
 369:Core/Src/printf.c ****     negative = true;
 370:Core/Src/printf.c ****     value = 0 - value;
 371:Core/Src/printf.c ****   }
 372:Core/Src/printf.c **** 
 373:Core/Src/printf.c ****   // set default precision, if not set explicitly
 374:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 375:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 376:Core/Src/printf.c ****   }
 377:Core/Src/printf.c ****   // limit precision to 9, cause a prec >= 10 can lead to overflow errors
 378:Core/Src/printf.c ****   while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 379:Core/Src/printf.c ****     buf[len++] = '0';
 380:Core/Src/printf.c ****     prec--;
 381:Core/Src/printf.c ****   }
 382:Core/Src/printf.c **** 
 383:Core/Src/printf.c ****   int whole = (int)value;
 384:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 385:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 386:Core/Src/printf.c ****   diff = tmp - frac;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 26


 387:Core/Src/printf.c **** 
 388:Core/Src/printf.c ****   if (diff > 0.5) {
 389:Core/Src/printf.c ****     ++frac;
 390:Core/Src/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 391:Core/Src/printf.c ****     if (frac >= pow10[prec]) {
 392:Core/Src/printf.c ****       frac = 0;
 393:Core/Src/printf.c ****       ++whole;
 394:Core/Src/printf.c ****     }
 395:Core/Src/printf.c ****   }
 396:Core/Src/printf.c ****   else if (diff < 0.5) {
 397:Core/Src/printf.c ****   }
 398:Core/Src/printf.c ****   else if ((frac == 0U) || (frac & 1U)) {
 399:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 400:Core/Src/printf.c ****     ++frac;
 401:Core/Src/printf.c ****   }
 402:Core/Src/printf.c **** 
 403:Core/Src/printf.c ****   if (prec == 0U) {
 404:Core/Src/printf.c ****     diff = value - (double)whole;
 405:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 406:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 407:Core/Src/printf.c ****       // 1.5 -> 2, but 2.5 -> 2
 408:Core/Src/printf.c ****       ++whole;
 409:Core/Src/printf.c ****     }
 410:Core/Src/printf.c ****   }
 411:Core/Src/printf.c ****   else {
 412:Core/Src/printf.c ****     unsigned int count = prec;
 413:Core/Src/printf.c ****     // now do fractional part, as an unsigned number
 414:Core/Src/printf.c ****     while (len < PRINTF_FTOA_BUFFER_SIZE) {
 415:Core/Src/printf.c ****       --count;
 416:Core/Src/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 418:Core/Src/printf.c ****         break;
 419:Core/Src/printf.c ****       }
 420:Core/Src/printf.c ****     }
 421:Core/Src/printf.c ****     // add extra 0s
 422:Core/Src/printf.c ****     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 423:Core/Src/printf.c ****       buf[len++] = '0';
 424:Core/Src/printf.c ****     }
 425:Core/Src/printf.c ****     if (len < PRINTF_FTOA_BUFFER_SIZE) {
 426:Core/Src/printf.c ****       // add decimal
 427:Core/Src/printf.c ****       buf[len++] = '.';
 428:Core/Src/printf.c ****     }
 429:Core/Src/printf.c ****   }
 430:Core/Src/printf.c **** 
 431:Core/Src/printf.c ****   // do whole part, number is reversed
 432:Core/Src/printf.c ****   while (len < PRINTF_FTOA_BUFFER_SIZE) {
 433:Core/Src/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 435:Core/Src/printf.c ****       break;
 436:Core/Src/printf.c ****     }
 437:Core/Src/printf.c ****   }
 438:Core/Src/printf.c **** 
 439:Core/Src/printf.c ****   // pad leading zeros
 440:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 441:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 442:Core/Src/printf.c ****       width--;
 443:Core/Src/printf.c ****     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 27


 444:Core/Src/printf.c ****     while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 445:Core/Src/printf.c ****       buf[len++] = '0';
 446:Core/Src/printf.c ****     }
 447:Core/Src/printf.c ****   }
 448:Core/Src/printf.c **** 
 449:Core/Src/printf.c ****   if (len < PRINTF_FTOA_BUFFER_SIZE) {
 450:Core/Src/printf.c ****     if (negative) {
 451:Core/Src/printf.c ****       buf[len++] = '-';
 452:Core/Src/printf.c ****     }
 453:Core/Src/printf.c ****     else if (flags & FLAGS_PLUS) {
 454:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 455:Core/Src/printf.c ****     }
 456:Core/Src/printf.c ****     else if (flags & FLAGS_SPACE) {
 457:Core/Src/printf.c ****       buf[len++] = ' ';
 458:Core/Src/printf.c ****     }
 459:Core/Src/printf.c ****   }
 460:Core/Src/printf.c **** 
 461:Core/Src/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 462:Core/Src/printf.c **** }
 463:Core/Src/printf.c **** 
 464:Core/Src/printf.c **** 
 465:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 466:Core/Src/printf.c **** // internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.ja
 467:Core/Src/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 468:Core/Src/printf.c **** {
 963              		.loc 1 468 1 is_stmt 1 view -0
 964              		.cfi_startproc
 965              		@ args = 12, pretend = 0, frame = 48
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              		.loc 1 468 1 is_stmt 0 view .LVU247
 968 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 969              	.LCFI16:
 970              		.cfi_def_cfa_offset 36
 971              		.cfi_offset 4, -36
 972              		.cfi_offset 5, -32
 973              		.cfi_offset 6, -28
 974              		.cfi_offset 7, -24
 975              		.cfi_offset 8, -20
 976              		.cfi_offset 9, -16
 977              		.cfi_offset 10, -12
 978              		.cfi_offset 11, -8
 979              		.cfi_offset 14, -4
 980 0004 2DED028B 		vpush.64	{d8}
 981              	.LCFI17:
 982              		.cfi_def_cfa_offset 44
 983              		.cfi_offset 80, -44
 984              		.cfi_offset 81, -40
 985 0008 93B0     		sub	sp, sp, #76
 986              	.LCFI18:
 987              		.cfi_def_cfa_offset 120
 988 000a 8246     		mov	r10, r0
 989 000c 0C46     		mov	r4, r1
 990 000e 9346     		mov	fp, r2
 991 0010 1D46     		mov	r5, r3
 992 0012 57EC106B 		vmov	r6, r7, d0
 993 0016 8DED080B 		vstr.64	d0, [sp, #32]
 469:Core/Src/printf.c ****   // check for NaN and special values
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 28


 470:Core/Src/printf.c ****   if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 994              		.loc 1 470 3 is_stmt 1 view .LVU248
 995              		.loc 1 470 6 is_stmt 0 view .LVU249
 996 001a 3246     		mov	r2, r6
 997              	.LVL97:
 998              		.loc 1 470 6 view .LVU250
 999 001c 3B46     		mov	r3, r7
 1000              	.LVL98:
 1001              		.loc 1 470 6 view .LVU251
 1002 001e 3046     		mov	r0, r6
 1003              	.LVL99:
 1004              		.loc 1 470 6 view .LVU252
 1005 0020 3946     		mov	r1, r7
 1006              	.LVL100:
 1007              		.loc 1 470 6 view .LVU253
 1008 0022 FFF7FEFF 		bl	__aeabi_dcmpeq
 1009              	.LVL101:
 1010              		.loc 1 470 6 view .LVU254
 1011 0026 0028     		cmp	r0, #0
 1012 0028 00F00981 		beq	.L79
 1013              		.loc 1 470 24 discriminator 1 view .LVU255
 1014 002c 4FF0FF32 		mov	r2, #-1
 1015 0030 B14B     		ldr	r3, .L120+72
 1016 0032 3046     		mov	r0, r6
 1017 0034 3946     		mov	r1, r7
 1018 0036 FFF7FEFF 		bl	__aeabi_dcmpgt
 1019              	.LVL102:
 1020 003a 0028     		cmp	r0, #0
 1021 003c 40F0FF80 		bne	.L79
 1022              		.loc 1 470 45 discriminator 2 view .LVU256
 1023 0040 4FF0FF32 		mov	r2, #-1
 1024 0044 6FF48013 		mvn	r3, #1048576
 1025 0048 3046     		mov	r0, r6
 1026 004a 3946     		mov	r1, r7
 1027 004c FFF7FEFF 		bl	__aeabi_dcmplt
 1028              	.LVL103:
 1029 0050 0028     		cmp	r0, #0
 1030 0052 40F0F480 		bne	.L79
 471:Core/Src/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 472:Core/Src/printf.c ****   }
 473:Core/Src/printf.c **** 
 474:Core/Src/printf.c ****   // determine the sign
 475:Core/Src/printf.c ****   const bool negative = value < 0;
 1031              		.loc 1 475 3 is_stmt 1 view .LVU257
 1032              	.LVL104:
 476:Core/Src/printf.c ****   if (negative) {
 1033              		.loc 1 476 3 view .LVU258
 1034              		.loc 1 476 6 is_stmt 0 view .LVU259
 1035 0056 0022     		movs	r2, #0
 1036 0058 0023     		movs	r3, #0
 1037 005a DDE90867 		ldrd	r6, [sp, #32]
 1038              		.loc 1 476 6 view .LVU260
 1039 005e 3046     		mov	r0, r6
 1040 0060 3946     		mov	r1, r7
 1041 0062 FFF7FEFF 		bl	__aeabi_dcmplt
 1042              	.LVL105:
 1043 0066 0028     		cmp	r0, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 29


 1044 0068 40F0FC80 		bne	.L118
 1045 006c 9DED087B 		vldr.64	d7, [sp, #32]
 1046 0070 8DED067B 		vstr.64	d7, [sp, #24]
 1047              	.LVL106:
 1048              	.L83:
 477:Core/Src/printf.c ****     value = -value;
 478:Core/Src/printf.c ****   }
 479:Core/Src/printf.c **** 
 480:Core/Src/printf.c ****   // default precision
 481:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 1049              		.loc 1 481 3 is_stmt 1 view .LVU261
 1050              		.loc 1 481 6 is_stmt 0 view .LVU262
 1051 0074 209B     		ldr	r3, [sp, #128]
 1052 0076 13F48063 		ands	r3, r3, #1024
 1053 007a 1193     		str	r3, [sp, #68]
 1054 007c 01D1     		bne	.L85
 482:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1055              		.loc 1 482 10 view .LVU263
 1056 007e 0623     		movs	r3, #6
 1057 0080 1E93     		str	r3, [sp, #120]
 1058              	.LVL107:
 1059              	.L85:
 483:Core/Src/printf.c ****   }
 484:Core/Src/printf.c **** 
 485:Core/Src/printf.c ****   // determine the decimal exponent
 486:Core/Src/printf.c ****   // based on the algorithm by David Gay (https://www.ampl.com/netlib/fp/dtoa.c)
 487:Core/Src/printf.c ****   union {
 1060              		.loc 1 487 3 is_stmt 1 view .LVU264
 488:Core/Src/printf.c ****     uint64_t U;
 489:Core/Src/printf.c ****     double   F;
 490:Core/Src/printf.c ****   } conv;
 491:Core/Src/printf.c **** 
 492:Core/Src/printf.c ****   conv.F = value;
 1061              		.loc 1 492 3 view .LVU265
 493:Core/Src/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
 1062              		.loc 1 493 3 view .LVU266
 1063 0082 DDE90601 		ldrd	r0, [sp, #24]
 1064 0086 0246     		mov	r2, r0
 1065              		.loc 1 493 14 is_stmt 0 view .LVU267
 1066 0088 C1F30A50 		ubfx	r0, r1, #20, #11
 1067              	.LVL108:
 494:Core/Src/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is n
 1068              		.loc 1 494 3 is_stmt 1 view .LVU268
 1069              		.loc 1 494 20 is_stmt 0 view .LVU269
 1070 008c C1F31303 		ubfx	r3, r1, #0, #20
 1071              		.loc 1 494 44 view .LVU270
 1072 0090 9046     		mov	r8, r2
 1073 0092 43F07F59 		orr	r9, r3, #1069547520
 1074 0096 49F44019 		orr	r9, r9, #3145728
 495:Core/Src/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 496:Core/Src/printf.c ****   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.28952965460216
 1075              		.loc 1 496 3 is_stmt 1 view .LVU271
 1076              		.loc 1 496 45 is_stmt 0 view .LVU272
 1077 009a A0F2FF30 		subw	r0, r0, #1023
 1078              	.LVL109:
 1079              		.loc 1 496 45 view .LVU273
 1080 009e FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 30


 1081              	.LVL110:
 1082              		.loc 1 496 45 view .LVU274
 1083 00a2 83A3     		adr	r3, .L120
 1084 00a4 D3E90023 		ldrd	r2, [r3]
 1085 00a8 FFF7FEFF 		bl	__aeabi_dmul
 1086              	.LVL111:
 1087              		.loc 1 496 38 view .LVU275
 1088 00ac 82A3     		adr	r3, .L120+8
 1089 00ae D3E90023 		ldrd	r2, [r3]
 1090 00b2 FFF7FEFF 		bl	__aeabi_dadd
 1091              	.LVL112:
 1092 00b6 0646     		mov	r6, r0
 1093              	.LVL113:
 1094              		.loc 1 496 38 view .LVU276
 1095 00b8 0F46     		mov	r7, r1
 1096              		.loc 1 496 75 view .LVU277
 1097 00ba 0022     		movs	r2, #0
 1098 00bc 8F4B     		ldr	r3, .L120+76
 1099 00be 4046     		mov	r0, r8
 1100 00c0 4946     		mov	r1, r9
 1101 00c2 FFF7FEFF 		bl	__aeabi_dsub
 1102              	.LVL114:
 1103              		.loc 1 496 82 view .LVU278
 1104 00c6 7EA3     		adr	r3, .L120+16
 1105 00c8 D3E90023 		ldrd	r2, [r3]
 1106 00cc FFF7FEFF 		bl	__aeabi_dmul
 1107              	.LVL115:
 1108 00d0 0246     		mov	r2, r0
 1109 00d2 0B46     		mov	r3, r1
 1110              		.loc 1 496 65 view .LVU279
 1111 00d4 3046     		mov	r0, r6
 1112 00d6 3946     		mov	r1, r7
 1113 00d8 FFF7FEFF 		bl	__aeabi_dadd
 1114              	.LVL116:
 1115              		.loc 1 496 7 view .LVU280
 1116 00dc FFF7FEFF 		bl	__aeabi_d2iz
 1117              	.LVL117:
 1118 00e0 0646     		mov	r6, r0
 1119              	.LVL118:
 497:Core/Src/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 498:Core/Src/printf.c ****   exp2 = (int)(expval * 3.321928094887362 + 0.5);
 1120              		.loc 1 498 3 is_stmt 1 view .LVU281
 1121              		.loc 1 498 23 is_stmt 0 view .LVU282
 1122 00e2 FFF7FEFF 		bl	__aeabi_i2d
 1123              	.LVL119:
 1124              		.loc 1 498 23 view .LVU283
 1125 00e6 8046     		mov	r8, r0
 1126 00e8 8946     		mov	r9, r1
 1127 00ea 77A3     		adr	r3, .L120+24
 1128 00ec D3E90023 		ldrd	r2, [r3]
 1129 00f0 FFF7FEFF 		bl	__aeabi_dmul
 1130              	.LVL120:
 1131              		.loc 1 498 43 view .LVU284
 1132 00f4 0022     		movs	r2, #0
 1133 00f6 824B     		ldr	r3, .L120+80
 1134 00f8 FFF7FEFF 		bl	__aeabi_dadd
 1135              	.LVL121:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 31


 1136              		.loc 1 498 8 view .LVU285
 1137 00fc FFF7FEFF 		bl	__aeabi_d2iz
 1138              	.LVL122:
 1139 0100 0746     		mov	r7, r0
 1140              	.LVL123:
 499:Core/Src/printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 1141              		.loc 1 499 3 is_stmt 1 view .LVU286
 1142              		.loc 1 499 28 is_stmt 0 view .LVU287
 1143 0102 73A3     		adr	r3, .L120+32
 1144 0104 D3E90023 		ldrd	r2, [r3]
 1145 0108 4046     		mov	r0, r8
 1146              	.LVL124:
 1147              		.loc 1 499 28 view .LVU288
 1148 010a 4946     		mov	r1, r9
 1149 010c FFF7FEFF 		bl	__aeabi_dmul
 1150              	.LVL125:
 1151 0110 8046     		mov	r8, r0
 1152 0112 8946     		mov	r9, r1
 1153              		.loc 1 499 55 view .LVU289
 1154 0114 3846     		mov	r0, r7
 1155 0116 FFF7FEFF 		bl	__aeabi_i2d
 1156              	.LVL126:
 1157 011a 6FA3     		adr	r3, .L120+40
 1158 011c D3E90023 		ldrd	r2, [r3]
 1159 0120 FFF7FEFF 		bl	__aeabi_dmul
 1160              	.LVL127:
 1161 0124 0246     		mov	r2, r0
 1162 0126 0B46     		mov	r3, r1
 1163              		.loc 1 499 16 view .LVU290
 1164 0128 4046     		mov	r0, r8
 1165 012a 4946     		mov	r1, r9
 1166 012c FFF7FEFF 		bl	__aeabi_dsub
 1167              	.LVL128:
 1168 0130 8046     		mov	r8, r0
 1169 0132 8946     		mov	r9, r1
 1170              	.LVL129:
 500:Core/Src/printf.c ****   const double z2 = z * z;
 1171              		.loc 1 500 3 is_stmt 1 view .LVU291
 1172              		.loc 1 500 16 is_stmt 0 view .LVU292
 1173 0134 0246     		mov	r2, r0
 1174 0136 0B46     		mov	r3, r1
 1175 0138 FFF7FEFF 		bl	__aeabi_dmul
 1176              	.LVL130:
 1177 013c CDE90C01 		strd	r0, [sp, #48]
 1178              	.LVL131:
 501:Core/Src/printf.c ****   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 1179              		.loc 1 501 3 is_stmt 1 view .LVU293
 1180              		.loc 1 501 28 is_stmt 0 view .LVU294
 1181 0140 07F2FF37 		addw	r7, r7, #1023
 1182              	.LVL132:
 1183              		.loc 1 501 36 view .LVU295
 1184 0144 0021     		movs	r1, #0
 1185 0146 0022     		movs	r2, #0
 1186 0148 CDE90A12 		strd	r1, [sp, #40]
 1187 014c 3B05     		lsls	r3, r7, #20
 1188 014e 0B93     		str	r3, [sp, #44]
 1189 0150 0023     		movs	r3, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 32


 1190 0152 0A93     		str	r3, [sp, #40]
 502:Core/Src/printf.c ****   // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_functi
 503:Core/Src/printf.c ****   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1191              		.loc 1 503 3 is_stmt 1 view .LVU296
 1192              		.loc 1 503 19 is_stmt 0 view .LVU297
 1193 0154 4246     		mov	r2, r8
 1194 0156 4B46     		mov	r3, r9
 1195 0158 4046     		mov	r0, r8
 1196              	.LVL133:
 1197              		.loc 1 503 19 view .LVU298
 1198 015a 4946     		mov	r1, r9
 1199 015c FFF7FEFF 		bl	__aeabi_dadd
 1200              	.LVL134:
 1201 0160 CDE90E01 		strd	r0, [sp, #56]
 1202              		.loc 1 503 28 view .LVU299
 1203 0164 4246     		mov	r2, r8
 1204 0166 4B46     		mov	r3, r9
 1205 0168 0020     		movs	r0, #0
 1206 016a 4FF08041 		mov	r1, #1073741824
 1207 016e FFF7FEFF 		bl	__aeabi_dsub
 1208              	.LVL135:
 1209 0172 8046     		mov	r8, r0
 1210              	.LVL136:
 1211              		.loc 1 503 28 view .LVU300
 1212 0174 8946     		mov	r9, r1
 1213              		.loc 1 503 60 view .LVU301
 1214 0176 0022     		movs	r2, #0
 1215 0178 624B     		ldr	r3, .L120+84
 1216 017a DDE90C01 		ldrd	r0, [sp, #48]
 1217 017e FFF7FEFF 		bl	__aeabi_ddiv
 1218              	.LVL137:
 1219              		.loc 1 503 55 view .LVU302
 1220 0182 0022     		movs	r2, #0
 1221 0184 604B     		ldr	r3, .L120+88
 1222 0186 FFF7FEFF 		bl	__aeabi_dadd
 1223              	.LVL138:
 1224 018a 0246     		mov	r2, r0
 1225 018c 0B46     		mov	r3, r1
 1226              		.loc 1 503 49 view .LVU303
 1227 018e DDE90C01 		ldrd	r0, [sp, #48]
 1228 0192 FFF7FEFF 		bl	__aeabi_ddiv
 1229              	.LVL139:
 1230              		.loc 1 503 43 view .LVU304
 1231 0196 0022     		movs	r2, #0
 1232 0198 5C4B     		ldr	r3, .L120+92
 1233 019a FFF7FEFF 		bl	__aeabi_dadd
 1234              	.LVL140:
 1235 019e 0246     		mov	r2, r0
 1236 01a0 0B46     		mov	r3, r1
 1237              		.loc 1 503 38 view .LVU305
 1238 01a2 DDE90C01 		ldrd	r0, [sp, #48]
 1239 01a6 FFF7FEFF 		bl	__aeabi_ddiv
 1240              	.LVL141:
 1241 01aa 0246     		mov	r2, r0
 1242 01ac 0B46     		mov	r3, r1
 1243              		.loc 1 503 32 view .LVU306
 1244 01ae 4046     		mov	r0, r8
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 33


 1245 01b0 4946     		mov	r1, r9
 1246 01b2 FFF7FEFF 		bl	__aeabi_dadd
 1247              	.LVL142:
 1248 01b6 0246     		mov	r2, r0
 1249 01b8 0B46     		mov	r3, r1
 1250              		.loc 1 503 23 view .LVU307
 1251 01ba DDE90E01 		ldrd	r0, [sp, #56]
 1252 01be FFF7FEFF 		bl	__aeabi_ddiv
 1253              	.LVL143:
 1254              		.loc 1 503 15 view .LVU308
 1255 01c2 0022     		movs	r2, #0
 1256 01c4 524B     		ldr	r3, .L120+96
 1257 01c6 FFF7FEFF 		bl	__aeabi_dadd
 1258              	.LVL144:
 1259              		.loc 1 503 10 view .LVU309
 1260 01ca DDE90A23 		ldrd	r2, [sp, #40]
 1261 01ce FFF7FEFF 		bl	__aeabi_dmul
 1262              	.LVL145:
 1263 01d2 8046     		mov	r8, r0
 1264 01d4 8946     		mov	r9, r1
 1265 01d6 49EC188B 		vmov	d8, r8, r9	@ int
 1266              	.LVL146:
 504:Core/Src/printf.c ****   // correct for rounding errors
 505:Core/Src/printf.c ****   if (value < conv.F) {
 1267              		.loc 1 505 3 is_stmt 1 view .LVU310
 1268              		.loc 1 505 6 is_stmt 0 view .LVU311
 1269 01da DDE90623 		ldrd	r2, [sp, #24]
 1270 01de FFF7FEFF 		bl	__aeabi_dcmpgt
 1271              	.LVL147:
 1272 01e2 40B1     		cbz	r0, .L86
 506:Core/Src/printf.c ****     expval--;
 1273              		.loc 1 506 5 is_stmt 1 view .LVU312
 1274              		.loc 1 506 11 is_stmt 0 view .LVU313
 1275 01e4 013E     		subs	r6, r6, #1
 1276              	.LVL148:
 507:Core/Src/printf.c ****     conv.F /= 10;
 1277              		.loc 1 507 5 is_stmt 1 view .LVU314
 1278              		.loc 1 507 12 is_stmt 0 view .LVU315
 1279 01e6 0022     		movs	r2, #0
 1280 01e8 474B     		ldr	r3, .L120+88
 1281 01ea 4046     		mov	r0, r8
 1282 01ec 4946     		mov	r1, r9
 1283 01ee FFF7FEFF 		bl	__aeabi_ddiv
 1284              	.LVL149:
 1285 01f2 41EC180B 		vmov	d8, r0, r1	@ int
 1286              	.L86:
 508:Core/Src/printf.c ****   }
 509:Core/Src/printf.c **** 
 510:Core/Src/printf.c ****   // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
 511:Core/Src/printf.c ****   unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
 1287              		.loc 1 511 3 is_stmt 1 view .LVU316
 1288              		.loc 1 511 43 is_stmt 0 view .LVU317
 1289 01f6 06F16303 		add	r3, r6, #99
 1290              		.loc 1 511 68 view .LVU318
 1291 01fa C62B     		cmp	r3, #198
 1292 01fc 3BD8     		bhi	.L104
 1293              		.loc 1 511 68 view .LVU319
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 34


 1294 01fe 0427     		movs	r7, #4
 1295              	.LVL150:
 1296              	.L88:
 512:Core/Src/printf.c **** 
 513:Core/Src/printf.c ****   // in "%g" mode, "prec" is the number of *significant figures* not decimals
 514:Core/Src/printf.c ****   if (flags & FLAGS_ADAPT_EXP) {
 1297              		.loc 1 514 3 is_stmt 1 discriminator 4 view .LVU320
 1298              		.loc 1 514 6 is_stmt 0 discriminator 4 view .LVU321
 1299 0200 209B     		ldr	r3, [sp, #128]
 1300 0202 13F4006F 		tst	r3, #2048
 1301 0206 40D0     		beq	.L89
 515:Core/Src/printf.c ****     // do we want to fall-back to "%f" mode?
 516:Core/Src/printf.c ****     if ((value >= 1e-4) && (value < 1e6)) {
 1302              		.loc 1 516 5 is_stmt 1 view .LVU322
 1303              		.loc 1 516 8 is_stmt 0 view .LVU323
 1304 0208 35A3     		adr	r3, .L120+48
 1305 020a D3E90023 		ldrd	r2, [r3]
 1306 020e DDE90689 		ldrd	r8, [sp, #24]
 1307 0212 4046     		mov	r0, r8
 1308 0214 4946     		mov	r1, r9
 1309 0216 FFF7FEFF 		bl	__aeabi_dcmpge
 1310              	.LVL151:
 1311 021a 0028     		cmp	r0, #0
 1312 021c 3BD0     		beq	.L90
 1313              		.loc 1 516 25 discriminator 1 view .LVU324
 1314 021e 32A3     		adr	r3, .L120+56
 1315 0220 D3E90023 		ldrd	r2, [r3]
 1316 0224 4046     		mov	r0, r8
 1317 0226 4946     		mov	r1, r9
 1318 0228 FFF7FEFF 		bl	__aeabi_dcmplt
 1319              	.LVL152:
 1320 022c 0028     		cmp	r0, #0
 1321 022e 32D0     		beq	.L90
 517:Core/Src/printf.c ****       if ((int)prec > expval) {
 1322              		.loc 1 517 7 is_stmt 1 view .LVU325
 1323              		.loc 1 517 10 is_stmt 0 view .LVU326
 1324 0230 1E9B     		ldr	r3, [sp, #120]
 1325 0232 B342     		cmp	r3, r6
 1326 0234 21DD     		ble	.L105
 518:Core/Src/printf.c ****         prec = (unsigned)((int)prec - expval - 1);
 1327              		.loc 1 518 9 is_stmt 1 view .LVU327
 1328              		.loc 1 518 37 is_stmt 0 view .LVU328
 1329 0236 9E1B     		subs	r6, r3, r6
 1330              	.LVL153:
 1331              		.loc 1 518 46 view .LVU329
 1332 0238 731E     		subs	r3, r6, #1
 1333 023a 1E93     		str	r3, [sp, #120]
 1334              	.LVL154:
 1335              		.loc 1 518 46 view .LVU330
 1336 023c 1FE0     		b	.L93
 1337              	.LVL155:
 1338              	.L79:
 471:Core/Src/printf.c ****   }
 1339              		.loc 1 471 5 is_stmt 1 view .LVU331
 471:Core/Src/printf.c ****   }
 1340              		.loc 1 471 12 is_stmt 0 view .LVU332
 1341 023e 209B     		ldr	r3, [sp, #128]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 35


 1342 0240 0293     		str	r3, [sp, #8]
 1343 0242 1F9B     		ldr	r3, [sp, #124]
 1344 0244 0193     		str	r3, [sp, #4]
 1345 0246 1E9B     		ldr	r3, [sp, #120]
 1346 0248 0093     		str	r3, [sp]
 1347 024a 9DED080B 		vldr.64	d0, [sp, #32]
 1348 024e 2B46     		mov	r3, r5
 1349 0250 5A46     		mov	r2, fp
 1350 0252 2146     		mov	r1, r4
 1351 0254 5046     		mov	r0, r10
 1352 0256 FFF7FEFF 		bl	_ftoa
 1353              	.LVL156:
 1354              	.L82:
 519:Core/Src/printf.c ****       }
 520:Core/Src/printf.c ****       else {
 521:Core/Src/printf.c ****         prec = 0;
 522:Core/Src/printf.c ****       }
 523:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
 524:Core/Src/printf.c ****       // no characters in exponent
 525:Core/Src/printf.c ****       minwidth = 0U;
 526:Core/Src/printf.c ****       expval   = 0;
 527:Core/Src/printf.c ****     }
 528:Core/Src/printf.c ****     else {
 529:Core/Src/printf.c ****       // we use one sigfig for the whole part
 530:Core/Src/printf.c ****       if ((prec > 0) && (flags & FLAGS_PRECISION)) {
 531:Core/Src/printf.c ****         --prec;
 532:Core/Src/printf.c ****       }
 533:Core/Src/printf.c ****     }
 534:Core/Src/printf.c ****   }
 535:Core/Src/printf.c **** 
 536:Core/Src/printf.c ****   // will everything fit?
 537:Core/Src/printf.c ****   unsigned int fwidth = width;
 538:Core/Src/printf.c ****   if (width > minwidth) {
 539:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 540:Core/Src/printf.c ****     fwidth -= minwidth;
 541:Core/Src/printf.c ****   } else {
 542:Core/Src/printf.c ****     // not enough characters, so go back to default sizing
 543:Core/Src/printf.c ****     fwidth = 0U;
 544:Core/Src/printf.c ****   }
 545:Core/Src/printf.c ****   if ((flags & FLAGS_LEFT) && minwidth) {
 546:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 547:Core/Src/printf.c ****     fwidth = 0U;
 548:Core/Src/printf.c ****   }
 549:Core/Src/printf.c **** 
 550:Core/Src/printf.c ****   // rescale the float value
 551:Core/Src/printf.c ****   if (expval) {
 552:Core/Src/printf.c ****     value /= conv.F;
 553:Core/Src/printf.c ****   }
 554:Core/Src/printf.c **** 
 555:Core/Src/printf.c ****   // output the floating part
 556:Core/Src/printf.c ****   const size_t start_idx = idx;
 557:Core/Src/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 558:Core/Src/printf.c **** 
 559:Core/Src/printf.c ****   // output the exponent part
 560:Core/Src/printf.c ****   if (minwidth) {
 561:Core/Src/printf.c ****     // output the exponential symbol
 562:Core/Src/printf.c ****     out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 36


 563:Core/Src/printf.c ****     // output the exponent value
 564:Core/Src/printf.c ****     idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, 
 565:Core/Src/printf.c ****     // might need to right-pad spaces
 566:Core/Src/printf.c ****     if (flags & FLAGS_LEFT) {
 567:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 568:Core/Src/printf.c ****     }
 569:Core/Src/printf.c ****   }
 570:Core/Src/printf.c ****   return idx;
 571:Core/Src/printf.c **** }
 1355              		.loc 1 571 1 view .LVU333
 1356 025a 13B0     		add	sp, sp, #76
 1357              	.LCFI19:
 1358              		.cfi_remember_state
 1359              		.cfi_def_cfa_offset 44
 1360              		@ sp needed
 1361 025c BDEC028B 		vldm	sp!, {d8}
 1362              	.LCFI20:
 1363              		.cfi_restore 80
 1364              		.cfi_restore 81
 1365              		.cfi_def_cfa_offset 36
 1366              	.LVL157:
 1367              		.loc 1 571 1 view .LVU334
 1368 0260 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1369              	.LVL158:
 1370              	.L118:
 1371              	.LCFI21:
 1372              		.cfi_restore_state
 477:Core/Src/printf.c ****   }
 1373              		.loc 1 477 5 is_stmt 1 view .LVU335
 477:Core/Src/printf.c ****   }
 1374              		.loc 1 477 11 is_stmt 0 view .LVU336
 1375 0264 9FED227B 		vldr.64	d7, .L120+64
 1376 0268 8DED067B 		vstr.64	d7, [sp, #24]
 1377 026c 0696     		str	r6, [sp, #24]
 1378 026e 07F10043 		add	r3, r7, #-2147483648
 1379 0272 0793     		str	r3, [sp, #28]
 1380              	.LVL159:
 477:Core/Src/printf.c ****   }
 1381              		.loc 1 477 11 view .LVU337
 1382 0274 FEE6     		b	.L83
 1383              	.LVL160:
 1384              	.L104:
 511:Core/Src/printf.c **** 
 1385              		.loc 1 511 68 view .LVU338
 1386 0276 0527     		movs	r7, #5
 1387              	.LVL161:
 511:Core/Src/printf.c **** 
 1388              		.loc 1 511 68 view .LVU339
 1389 0278 C2E7     		b	.L88
 1390              	.LVL162:
 1391              	.L105:
 521:Core/Src/printf.c ****       }
 1392              		.loc 1 521 14 view .LVU340
 1393 027a 0023     		movs	r3, #0
 1394 027c 1E93     		str	r3, [sp, #120]
 1395              	.LVL163:
 1396              	.L93:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 37


 523:Core/Src/printf.c ****       // no characters in exponent
 1397              		.loc 1 523 7 is_stmt 1 view .LVU341
 523:Core/Src/printf.c ****       // no characters in exponent
 1398              		.loc 1 523 13 is_stmt 0 view .LVU342
 1399 027e 209B     		ldr	r3, [sp, #128]
 1400 0280 43F48063 		orr	r3, r3, #1024
 1401 0284 2093     		str	r3, [sp, #128]
 1402              	.LVL164:
 525:Core/Src/printf.c ****       expval   = 0;
 1403              		.loc 1 525 7 is_stmt 1 view .LVU343
 526:Core/Src/printf.c ****     }
 1404              		.loc 1 526 7 view .LVU344
 525:Core/Src/printf.c ****       expval   = 0;
 1405              		.loc 1 525 16 is_stmt 0 view .LVU345
 1406 0286 0027     		movs	r7, #0
 526:Core/Src/printf.c ****     }
 1407              		.loc 1 526 16 view .LVU346
 1408 0288 3E46     		mov	r6, r7
 1409              	.LVL165:
 1410              	.L89:
 537:Core/Src/printf.c ****   if (width > minwidth) {
 1411              		.loc 1 537 3 is_stmt 1 view .LVU347
 538:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 1412              		.loc 1 538 3 view .LVU348
 538:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 1413              		.loc 1 538 6 is_stmt 0 view .LVU349
 1414 028a 1F9B     		ldr	r3, [sp, #124]
 1415 028c 9F42     		cmp	r7, r3
 1416 028e 41D2     		bcs	.L106
 540:Core/Src/printf.c ****   } else {
 1417              		.loc 1 540 5 is_stmt 1 view .LVU350
 540:Core/Src/printf.c ****   } else {
 1418              		.loc 1 540 12 is_stmt 0 view .LVU351
 1419 0290 A3EB0708 		sub	r8, r3, r7
 1420              	.LVL166:
 540:Core/Src/printf.c ****   } else {
 1421              		.loc 1 540 12 view .LVU352
 1422 0294 40E0     		b	.L94
 1423              	.LVL167:
 1424              	.L90:
 530:Core/Src/printf.c ****         --prec;
 1425              		.loc 1 530 7 is_stmt 1 view .LVU353
 530:Core/Src/printf.c ****         --prec;
 1426              		.loc 1 530 10 is_stmt 0 view .LVU354
 1427 0296 1E9B     		ldr	r3, [sp, #120]
 1428 0298 002B     		cmp	r3, #0
 1429 029a F6D0     		beq	.L89
 530:Core/Src/printf.c ****         --prec;
 1430              		.loc 1 530 22 discriminator 1 view .LVU355
 1431 029c 119B     		ldr	r3, [sp, #68]
 1432 029e 002B     		cmp	r3, #0
 1433 02a0 F3D0     		beq	.L89
 531:Core/Src/printf.c ****       }
 1434              		.loc 1 531 9 is_stmt 1 view .LVU356
 1435 02a2 1E9B     		ldr	r3, [sp, #120]
 1436 02a4 013B     		subs	r3, r3, #1
 1437 02a6 1E93     		str	r3, [sp, #120]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 38


 1438              	.LVL168:
 531:Core/Src/printf.c ****       }
 1439              		.loc 1 531 9 is_stmt 0 view .LVU357
 1440 02a8 EFE7     		b	.L89
 1441              	.L121:
 1442 02aa 00BFAFF3 		.align	3
 1442      0080
 1443              	.L120:
 1444 02b0 FB799F50 		.word	1352628731
 1445 02b4 1344D33F 		.word	1070810131
 1446 02b8 B3C8608B 		.word	-1956591437
 1447 02bc 288AC63F 		.word	1069976104
 1448 02c0 61436F63 		.word	1668236129
 1449 02c4 A787D23F 		.word	1070761895
 1450 02c8 71A37909 		.word	158966641
 1451 02cc 4F930A40 		.word	1074434895
 1452 02d0 1655B5BB 		.word	-1145744106
 1453 02d4 B16B0240 		.word	1073900465
 1454 02d8 EF39FAFE 		.word	-17155601
 1455 02dc 422EE63F 		.word	1072049730
 1456 02e0 2D431CEB 		.word	-350469331
 1457 02e4 E2361A3F 		.word	1058682594
 1458 02e8 00000000 		.word	0
 1459 02ec 80842E41 		.word	1093567616
 1460 02f0 00000000 		.word	0
 1461 02f4 00000000 		.word	0
 1462 02f8 FFFFEF7F 		.word	2146435071
 1463 02fc 0000F83F 		.word	1073217536
 1464 0300 0000E03F 		.word	1071644672
 1465 0304 00002C40 		.word	1076625408
 1466 0308 00002440 		.word	1076101120
 1467 030c 00001840 		.word	1075314688
 1468 0310 0000F03F 		.word	1072693248
 1469              	.LVL169:
 1470              	.L106:
 543:Core/Src/printf.c ****   }
 1471              		.loc 1 543 12 view .LVU358
 1472 0314 4FF00008 		mov	r8, #0
 1473              	.LVL170:
 1474              	.L94:
 545:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1475              		.loc 1 545 3 is_stmt 1 view .LVU359
 545:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1476              		.loc 1 545 6 is_stmt 0 view .LVU360
 1477 0318 209B     		ldr	r3, [sp, #128]
 1478 031a 13F00209 		ands	r9, r3, #2
 1479 031e 02D0     		beq	.L95
 545:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1480              		.loc 1 545 28 discriminator 1 view .LVU361
 1481 0320 0FB1     		cbz	r7, .L95
 547:Core/Src/printf.c ****   }
 1482              		.loc 1 547 12 view .LVU362
 1483 0322 4FF00008 		mov	r8, #0
 1484              	.LVL171:
 1485              	.L95:
 551:Core/Src/printf.c ****     value /= conv.F;
 1486              		.loc 1 551 3 is_stmt 1 view .LVU363
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 39


 551:Core/Src/printf.c ****     value /= conv.F;
 1487              		.loc 1 551 6 is_stmt 0 view .LVU364
 1488 0326 3EB1     		cbz	r6, .L96
 552:Core/Src/printf.c ****   }
 1489              		.loc 1 552 5 is_stmt 1 view .LVU365
 1490              	.LVL172:
 552:Core/Src/printf.c ****   }
 1491              		.loc 1 552 18 is_stmt 0 view .LVU366
 1492 0328 53EC182B 		vmov	r2, r3, d8
 552:Core/Src/printf.c ****   }
 1493              		.loc 1 552 11 view .LVU367
 1494 032c DDE90601 		ldrd	r0, [sp, #24]
 1495 0330 FFF7FEFF 		bl	__aeabi_ddiv
 1496              	.LVL173:
 1497 0334 CDE90601 		strd	r0, [sp, #24]
 1498              	.LVL174:
 1499              	.L96:
 556:Core/Src/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 1500              		.loc 1 556 3 is_stmt 1 view .LVU368
 557:Core/Src/printf.c **** 
 1501              		.loc 1 557 3 view .LVU369
 557:Core/Src/printf.c **** 
 1502              		.loc 1 557 9 is_stmt 0 view .LVU370
 1503 0338 0022     		movs	r2, #0
 1504 033a 0023     		movs	r3, #0
 1505 033c DDE90801 		ldrd	r0, [sp, #32]
 1506 0340 FFF7FEFF 		bl	__aeabi_dcmplt
 1507              	.LVL175:
 1508 0344 0028     		cmp	r0, #0
 1509 0346 3BD1     		bne	.L119
 1510              	.LVL176:
 1511              	.L97:
 557:Core/Src/printf.c **** 
 1512              		.loc 1 557 9 discriminator 4 view .LVU371
 1513 0348 209B     		ldr	r3, [sp, #128]
 1514 034a 23F40063 		bic	r3, r3, #2048
 1515 034e 0293     		str	r3, [sp, #8]
 1516 0350 CDF80480 		str	r8, [sp, #4]
 1517 0354 1E9B     		ldr	r3, [sp, #120]
 1518 0356 0093     		str	r3, [sp]
 1519 0358 9DED060B 		vldr.64	d0, [sp, #24]
 1520 035c 2B46     		mov	r3, r5
 1521 035e 5A46     		mov	r2, fp
 1522 0360 2146     		mov	r1, r4
 1523 0362 5046     		mov	r0, r10
 1524 0364 FFF7FEFF 		bl	_ftoa
 1525              	.LVL177:
 560:Core/Src/printf.c ****     // output the exponential symbol
 1526              		.loc 1 560 3 is_stmt 1 discriminator 4 view .LVU372
 560:Core/Src/printf.c ****     // output the exponential symbol
 1527              		.loc 1 560 6 is_stmt 0 discriminator 4 view .LVU373
 1528 0368 002F     		cmp	r7, #0
 1529 036a 3FF476AF 		beq	.L82
 562:Core/Src/printf.c ****     // output the exponent value
 1530              		.loc 1 562 5 is_stmt 1 view .LVU374
 1531 036e 209B     		ldr	r3, [sp, #128]
 1532 0370 13F0200F 		tst	r3, #32
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 40


 1533 0374 2CD0     		beq	.L108
 1534 0376 4FF0450C 		mov	ip, #69
 1535              	.L99:
 562:Core/Src/printf.c ****     // output the exponent value
 1536              		.loc 1 562 5 is_stmt 0 discriminator 4 view .LVU375
 1537 037a 00F10108 		add	r8, r0, #1
 1538              	.LVL178:
 562:Core/Src/printf.c ****     // output the exponent value
 1539              		.loc 1 562 5 discriminator 4 view .LVU376
 1540 037e 2B46     		mov	r3, r5
 1541 0380 0246     		mov	r2, r0
 1542 0382 2146     		mov	r1, r4
 1543 0384 6046     		mov	r0, ip
 1544 0386 D047     		blx	r10
 1545              	.LVL179:
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1546              		.loc 1 564 5 is_stmt 1 discriminator 4 view .LVU377
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1547              		.loc 1 564 71 is_stmt 0 discriminator 4 view .LVU378
 1548 0388 86EAE672 		eor	r2, r6, r6, asr #31
 1549 038c A2EBE672 		sub	r2, r2, r6, asr #31
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1550              		.loc 1 564 11 discriminator 4 view .LVU379
 1551 0390 0523     		movs	r3, #5
 1552 0392 0593     		str	r3, [sp, #20]
 1553 0394 013F     		subs	r7, r7, #1
 1554              	.LVL180:
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1555              		.loc 1 564 11 discriminator 4 view .LVU380
 1556 0396 0497     		str	r7, [sp, #16]
 1557 0398 0023     		movs	r3, #0
 1558 039a 0393     		str	r3, [sp, #12]
 1559 039c 0A23     		movs	r3, #10
 1560 039e 0293     		str	r3, [sp, #8]
 1561 03a0 F30F     		lsrs	r3, r6, #31
 1562 03a2 0193     		str	r3, [sp, #4]
 1563 03a4 0092     		str	r2, [sp]
 1564 03a6 2B46     		mov	r3, r5
 1565 03a8 4246     		mov	r2, r8
 1566 03aa 2146     		mov	r1, r4
 1567 03ac 5046     		mov	r0, r10
 1568 03ae FFF7FEFF 		bl	_ntoa_long
 1569              	.LVL181:
 566:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1570              		.loc 1 566 5 is_stmt 1 discriminator 4 view .LVU381
 566:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1571              		.loc 1 566 8 is_stmt 0 discriminator 4 view .LVU382
 1572 03b2 B9F1000F 		cmp	r9, #0
 1573 03b6 3FF450AF 		beq	.L82
 1574 03ba 0246     		mov	r2, r0
 1575 03bc 1F9F     		ldr	r7, [sp, #124]
 1576              	.LVL182:
 566:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1577              		.loc 1 566 8 discriminator 4 view .LVU383
 1578 03be 10E0     		b	.L100
 1579              	.LVL183:
 1580              	.L119:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 41


 557:Core/Src/printf.c **** 
 1581              		.loc 1 557 9 discriminator 1 view .LVU384
 1582 03c0 DDE90601 		ldrd	r0, [sp, #24]
 1583 03c4 0246     		mov	r2, r0
 1584 03c6 01F10043 		add	r3, r1, #-2147483648
 1585 03ca CDE90623 		strd	r2, [sp, #24]
 1586              	.LVL184:
 557:Core/Src/printf.c **** 
 1587              		.loc 1 557 9 discriminator 1 view .LVU385
 1588 03ce BBE7     		b	.L97
 1589              	.LVL185:
 1590              	.L108:
 562:Core/Src/printf.c ****     // output the exponent value
 1591              		.loc 1 562 5 view .LVU386
 1592 03d0 4FF0650C 		mov	ip, #101
 1593 03d4 D1E7     		b	.L99
 1594              	.LVL186:
 1595              	.L101:
 567:Core/Src/printf.c ****     }
 1596              		.loc 1 567 39 is_stmt 1 discriminator 2 view .LVU387
 1597 03d6 561C     		adds	r6, r2, #1
 1598              	.LVL187:
 567:Core/Src/printf.c ****     }
 1599              		.loc 1 567 39 is_stmt 0 discriminator 2 view .LVU388
 1600 03d8 2B46     		mov	r3, r5
 1601 03da 2146     		mov	r1, r4
 1602 03dc 2020     		movs	r0, #32
 1603 03de D047     		blx	r10
 1604              	.LVL188:
 1605 03e0 3246     		mov	r2, r6
 1606              	.LVL189:
 1607              	.L100:
 567:Core/Src/printf.c ****     }
 1608              		.loc 1 567 30 is_stmt 1 discriminator 1 view .LVU389
 567:Core/Src/printf.c ****     }
 1609              		.loc 1 567 18 is_stmt 0 discriminator 1 view .LVU390
 1610 03e2 A2EB0B03 		sub	r3, r2, fp
 567:Core/Src/printf.c ****     }
 1611              		.loc 1 567 30 discriminator 1 view .LVU391
 1612 03e6 BB42     		cmp	r3, r7
 1613 03e8 F5D3     		bcc	.L101
 567:Core/Src/printf.c ****     }
 1614              		.loc 1 567 30 discriminator 1 view .LVU392
 1615 03ea 1046     		mov	r0, r2
 1616 03ec 35E7     		b	.L82
 1617              		.cfi_endproc
 1618              	.LFE12:
 1620 03ee 00BF     		.section	.rodata._ftoa.str1.4,"aMS",%progbits,1
 1621              		.align	2
 1622              	.LC0:
 1623 0000 666E692B 		.ascii	"fni+\000"
 1623      00
 1624 0005 000000   		.align	2
 1625              	.LC1:
 1626 0008 666E6900 		.ascii	"fni\000"
 1627              		.align	2
 1628              	.LC2:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 42


 1629 000c 6E616E00 		.ascii	"nan\000"
 1630              		.align	2
 1631              	.LC3:
 1632 0010 666E692D 		.ascii	"fni-\000"
 1632      00
 1633              		.global	__aeabi_d2uiz
 1634              		.global	__aeabi_ui2d
 1635              		.global	__aeabi_dcmple
 1636              		.section	.text._ftoa,"ax",%progbits
 1637              		.align	1
 1638              		.syntax unified
 1639              		.thumb
 1640              		.thumb_func
 1642              	_ftoa:
 1643              	.LVL190:
 1644              	.LFB11:
 340:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1645              		.loc 1 340 1 is_stmt 1 view -0
 1646              		.cfi_startproc
 1647              		@ args = 12, pretend = 0, frame = 56
 1648              		@ frame_needed = 0, uses_anonymous_args = 0
 340:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1649              		.loc 1 340 1 is_stmt 0 view .LVU394
 1650 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1651              	.LCFI22:
 1652              		.cfi_def_cfa_offset 36
 1653              		.cfi_offset 4, -36
 1654              		.cfi_offset 5, -32
 1655              		.cfi_offset 6, -28
 1656              		.cfi_offset 7, -24
 1657              		.cfi_offset 8, -20
 1658              		.cfi_offset 9, -16
 1659              		.cfi_offset 10, -12
 1660              		.cfi_offset 11, -8
 1661              		.cfi_offset 14, -4
 1662 0004 2DED028B 		vpush.64	{d8}
 1663              	.LCFI23:
 1664              		.cfi_def_cfa_offset 44
 1665              		.cfi_offset 80, -44
 1666              		.cfi_offset 81, -40
 1667 0008 93B0     		sub	sp, sp, #76
 1668              	.LCFI24:
 1669              		.cfi_def_cfa_offset 120
 1670 000a 0590     		str	r0, [sp, #20]
 1671 000c 0891     		str	r1, [sp, #32]
 1672 000e 9246     		mov	r10, r2
 1673 0010 9B46     		mov	fp, r3
 1674 0012 59EC108B 		vmov	r8, r9, d0
 1675 0016 1E9D     		ldr	r5, [sp, #120]
 341:Core/Src/printf.c ****   size_t len  = 0U;
 1676              		.loc 1 341 3 is_stmt 1 view .LVU395
 342:Core/Src/printf.c ****   double diff = 0.0;
 1677              		.loc 1 342 3 view .LVU396
 1678              	.LVL191:
 343:Core/Src/printf.c **** 
 1679              		.loc 1 343 3 view .LVU397
 346:Core/Src/printf.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 43


 1680              		.loc 1 346 3 view .LVU398
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1681              		.loc 1 349 3 view .LVU399
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1682              		.loc 1 349 6 is_stmt 0 view .LVU400
 1683 0018 4246     		mov	r2, r8
 1684              	.LVL192:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1685              		.loc 1 349 6 view .LVU401
 1686 001a 4B46     		mov	r3, r9
 1687              	.LVL193:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1688              		.loc 1 349 6 view .LVU402
 1689 001c 4046     		mov	r0, r8
 1690              	.LVL194:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1691              		.loc 1 349 6 view .LVU403
 1692 001e 4946     		mov	r1, r9
 1693              	.LVL195:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1694              		.loc 1 349 6 view .LVU404
 1695 0020 FFF7FEFF 		bl	__aeabi_dcmpeq
 1696              	.LVL196:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1697              		.loc 1 349 6 view .LVU405
 1698 0024 0028     		cmp	r0, #0
 1699 0026 40D0     		beq	.L195
 351:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 1700              		.loc 1 351 3 is_stmt 1 view .LVU406
 351:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 1701              		.loc 1 351 6 is_stmt 0 view .LVU407
 1702 0028 4FF0FF32 		mov	r2, #-1
 1703 002c 6FF48013 		mvn	r3, #1048576
 1704 0030 4046     		mov	r0, r8
 1705 0032 4946     		mov	r1, r9
 1706 0034 FFF7FEFF 		bl	__aeabi_dcmplt
 1707              	.LVL197:
 1708 0038 0028     		cmp	r0, #0
 1709 003a 45D1     		bne	.L196
 353:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 1710              		.loc 1 353 3 is_stmt 1 view .LVU408
 353:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 1711              		.loc 1 353 6 is_stmt 0 view .LVU409
 1712 003c 4FF0FF32 		mov	r2, #-1
 1713 0040 B14B     		ldr	r3, .L200+16
 1714 0042 4046     		mov	r0, r8
 1715 0044 4946     		mov	r1, r9
 1716 0046 FFF7FEFF 		bl	__aeabi_dcmpgt
 1717              	.LVL198:
 1718 004a 0028     		cmp	r0, #0
 1719 004c 4BD1     		bne	.L197
 358:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1720              		.loc 1 358 3 is_stmt 1 view .LVU410
 358:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1721              		.loc 1 358 6 is_stmt 0 view .LVU411
 1722 004e AAA3     		adr	r3, .L200
 1723 0050 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 44


 1724 0054 4046     		mov	r0, r8
 1725 0056 4946     		mov	r1, r9
 1726 0058 FFF7FEFF 		bl	__aeabi_dcmpgt
 1727              	.LVL199:
 1728 005c 0028     		cmp	r0, #0
 1729 005e 5AD1     		bne	.L132
 358:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1730              		.loc 1 358 34 discriminator 1 view .LVU412
 1731 0060 A7A3     		adr	r3, .L200+8
 1732 0062 D3E90023 		ldrd	r2, [r3]
 1733 0066 4046     		mov	r0, r8
 1734 0068 4946     		mov	r1, r9
 1735 006a FFF7FEFF 		bl	__aeabi_dcmplt
 1736              	.LVL200:
 1737 006e 0028     		cmp	r0, #0
 1738 0070 51D1     		bne	.L132
 367:Core/Src/printf.c ****   if (value < 0) {
 1739              		.loc 1 367 3 is_stmt 1 view .LVU413
 1740              	.LVL201:
 368:Core/Src/printf.c ****     negative = true;
 1741              		.loc 1 368 3 view .LVU414
 368:Core/Src/printf.c ****     negative = true;
 1742              		.loc 1 368 6 is_stmt 0 view .LVU415
 1743 0072 0022     		movs	r2, #0
 1744 0074 0023     		movs	r3, #0
 1745 0076 4046     		mov	r0, r8
 1746 0078 4946     		mov	r1, r9
 1747 007a FFF7FEFF 		bl	__aeabi_dcmplt
 1748              	.LVL202:
 1749 007e 0028     		cmp	r0, #0
 1750 0080 57D1     		bne	.L198
 367:Core/Src/printf.c ****   if (value < 0) {
 1751              		.loc 1 367 8 view .LVU416
 1752 0082 0023     		movs	r3, #0
 1753 0084 0993     		str	r3, [sp, #36]
 1754              	.LVL203:
 1755              	.L135:
 374:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1756              		.loc 1 374 3 is_stmt 1 view .LVU417
 374:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1757              		.loc 1 374 6 is_stmt 0 view .LVU418
 1758 0086 209B     		ldr	r3, [sp, #128]
 1759 0088 13F4806F 		tst	r3, #1024
 1760 008c 5CD0     		beq	.L171
 1761              	.L137:
 1762              	.LVL204:
 375:Core/Src/printf.c ****   }
 1763              		.loc 1 375 10 view .LVU419
 1764 008e 0024     		movs	r4, #0
 1765              	.LVL205:
 1766              	.L139:
 378:Core/Src/printf.c ****     buf[len++] = '0';
 1767              		.loc 1 378 42 is_stmt 1 view .LVU420
 1768 0090 1F2C     		cmp	r4, #31
 1769 0092 5BD8     		bhi	.L140
 378:Core/Src/printf.c ****     buf[len++] = '0';
 1770              		.loc 1 378 42 is_stmt 0 discriminator 1 view .LVU421
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 45


 1771 0094 092D     		cmp	r5, #9
 1772 0096 59D9     		bls	.L140
 379:Core/Src/printf.c ****     prec--;
 1773              		.loc 1 379 5 is_stmt 1 view .LVU422
 1774              	.LVL206:
 379:Core/Src/printf.c ****     prec--;
 1775              		.loc 1 379 16 is_stmt 0 view .LVU423
 1776 0098 04F14803 		add	r3, r4, #72
 1777 009c 6B44     		add	r3, sp, r3
 1778 009e 3022     		movs	r2, #48
 1779 00a0 03F8202C 		strb	r2, [r3, #-32]
 380:Core/Src/printf.c ****   }
 1780              		.loc 1 380 5 is_stmt 1 view .LVU424
 380:Core/Src/printf.c ****   }
 1781              		.loc 1 380 9 is_stmt 0 view .LVU425
 1782 00a4 013D     		subs	r5, r5, #1
 1783              	.LVL207:
 379:Core/Src/printf.c ****     prec--;
 1784              		.loc 1 379 12 view .LVU426
 1785 00a6 0134     		adds	r4, r4, #1
 1786              	.LVL208:
 379:Core/Src/printf.c ****     prec--;
 1787              		.loc 1 379 12 view .LVU427
 1788 00a8 F2E7     		b	.L139
 1789              	.LVL209:
 1790              	.L195:
 350:Core/Src/printf.c ****   if (value < -DBL_MAX)
 1791              		.loc 1 350 5 is_stmt 1 view .LVU428
 350:Core/Src/printf.c ****   if (value < -DBL_MAX)
 1792              		.loc 1 350 12 is_stmt 0 view .LVU429
 1793 00aa 209B     		ldr	r3, [sp, #128]
 1794 00ac 0393     		str	r3, [sp, #12]
 1795 00ae 1F9B     		ldr	r3, [sp, #124]
 1796 00b0 0293     		str	r3, [sp, #8]
 1797 00b2 0323     		movs	r3, #3
 1798 00b4 0193     		str	r3, [sp, #4]
 1799 00b6 954B     		ldr	r3, .L200+20
 1800 00b8 0093     		str	r3, [sp]
 1801 00ba 5B46     		mov	r3, fp
 1802 00bc 5246     		mov	r2, r10
 1803 00be 0899     		ldr	r1, [sp, #32]
 1804 00c0 0598     		ldr	r0, [sp, #20]
 1805 00c2 FFF7FEFF 		bl	_out_rev
 1806              	.LVL210:
 1807 00c6 10E1     		b	.L122
 1808              	.L196:
 352:Core/Src/printf.c ****   if (value > DBL_MAX)
 1809              		.loc 1 352 5 is_stmt 1 view .LVU430
 352:Core/Src/printf.c ****   if (value > DBL_MAX)
 1810              		.loc 1 352 12 is_stmt 0 view .LVU431
 1811 00c8 209B     		ldr	r3, [sp, #128]
 1812 00ca 0393     		str	r3, [sp, #12]
 1813 00cc 1F9B     		ldr	r3, [sp, #124]
 1814 00ce 0293     		str	r3, [sp, #8]
 1815 00d0 0423     		movs	r3, #4
 1816 00d2 0193     		str	r3, [sp, #4]
 1817 00d4 8E4B     		ldr	r3, .L200+24
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 46


 1818 00d6 0093     		str	r3, [sp]
 1819 00d8 5B46     		mov	r3, fp
 1820 00da 5246     		mov	r2, r10
 1821 00dc 0899     		ldr	r1, [sp, #32]
 1822 00de 0598     		ldr	r0, [sp, #20]
 1823 00e0 FFF7FEFF 		bl	_out_rev
 1824              	.LVL211:
 1825 00e4 01E1     		b	.L122
 1826              	.L197:
 354:Core/Src/printf.c **** 
 1827              		.loc 1 354 5 is_stmt 1 view .LVU432
 354:Core/Src/printf.c **** 
 1828              		.loc 1 354 12 is_stmt 0 view .LVU433
 1829 00e6 209B     		ldr	r3, [sp, #128]
 1830 00e8 13F00403 		ands	r3, r3, #4
 1831 00ec 0FD0     		beq	.L168
 1832 00ee 894A     		ldr	r2, .L200+28
 1833              	.L130:
 354:Core/Src/printf.c **** 
 1834              		.loc 1 354 12 discriminator 4 view .LVU434
 1835 00f0 7BB1     		cbz	r3, .L169
 354:Core/Src/printf.c **** 
 1836              		.loc 1 354 12 view .LVU435
 1837 00f2 0423     		movs	r3, #4
 1838              	.L131:
 354:Core/Src/printf.c **** 
 1839              		.loc 1 354 12 discriminator 8 view .LVU436
 1840 00f4 2099     		ldr	r1, [sp, #128]
 1841 00f6 0391     		str	r1, [sp, #12]
 1842 00f8 1F99     		ldr	r1, [sp, #124]
 1843 00fa 0291     		str	r1, [sp, #8]
 1844 00fc 0193     		str	r3, [sp, #4]
 1845 00fe 0092     		str	r2, [sp]
 1846 0100 5B46     		mov	r3, fp
 1847 0102 5246     		mov	r2, r10
 1848 0104 0899     		ldr	r1, [sp, #32]
 1849 0106 0598     		ldr	r0, [sp, #20]
 1850 0108 FFF7FEFF 		bl	_out_rev
 1851              	.LVL212:
 1852 010c EDE0     		b	.L122
 1853              	.L168:
 354:Core/Src/printf.c **** 
 1854              		.loc 1 354 12 view .LVU437
 1855 010e 824A     		ldr	r2, .L200+32
 1856 0110 EEE7     		b	.L130
 1857              	.L169:
 1858 0112 0323     		movs	r3, #3
 1859 0114 EEE7     		b	.L131
 1860              	.L132:
 360:Core/Src/printf.c **** #else
 1861              		.loc 1 360 5 is_stmt 1 view .LVU438
 360:Core/Src/printf.c **** #else
 1862              		.loc 1 360 12 is_stmt 0 view .LVU439
 1863 0116 209B     		ldr	r3, [sp, #128]
 1864 0118 0293     		str	r3, [sp, #8]
 1865 011a 1F9B     		ldr	r3, [sp, #124]
 1866 011c 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 47


 1867 011e 0095     		str	r5, [sp]
 1868 0120 49EC108B 		vmov	d0, r8, r9
 1869 0124 5B46     		mov	r3, fp
 1870 0126 5246     		mov	r2, r10
 1871 0128 0899     		ldr	r1, [sp, #32]
 1872 012a 0598     		ldr	r0, [sp, #20]
 1873 012c FFF7FEFF 		bl	_etoa
 1874              	.LVL213:
 1875 0130 DBE0     		b	.L122
 1876              	.LVL214:
 1877              	.L198:
 369:Core/Src/printf.c ****     value = 0 - value;
 1878              		.loc 1 369 5 is_stmt 1 view .LVU440
 370:Core/Src/printf.c ****   }
 1879              		.loc 1 370 5 view .LVU441
 370:Core/Src/printf.c ****   }
 1880              		.loc 1 370 11 is_stmt 0 view .LVU442
 1881 0132 4246     		mov	r2, r8
 1882 0134 4B46     		mov	r3, r9
 1883 0136 0020     		movs	r0, #0
 1884 0138 0021     		movs	r1, #0
 1885 013a FFF7FEFF 		bl	__aeabi_dsub
 1886              	.LVL215:
 1887 013e 8046     		mov	r8, r0
 1888              	.LVL216:
 370:Core/Src/printf.c ****   }
 1889              		.loc 1 370 11 view .LVU443
 1890 0140 8946     		mov	r9, r1
 1891              	.LVL217:
 369:Core/Src/printf.c ****     value = 0 - value;
 1892              		.loc 1 369 14 view .LVU444
 1893 0142 0123     		movs	r3, #1
 1894 0144 0993     		str	r3, [sp, #36]
 1895 0146 9EE7     		b	.L135
 1896              	.LVL218:
 1897              	.L171:
 375:Core/Src/printf.c ****   }
 1898              		.loc 1 375 10 view .LVU445
 1899 0148 0625     		movs	r5, #6
 1900 014a A0E7     		b	.L137
 1901              	.LVL219:
 1902              	.L140:
 383:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 1903              		.loc 1 383 3 is_stmt 1 view .LVU446
 383:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 1904              		.loc 1 383 7 is_stmt 0 view .LVU447
 1905 014c 4046     		mov	r0, r8
 1906 014e 4946     		mov	r1, r9
 1907 0150 FFF7FEFF 		bl	__aeabi_d2iz
 1908              	.LVL220:
 1909 0154 0646     		mov	r6, r0
 1910              	.LVL221:
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1911              		.loc 1 384 3 is_stmt 1 view .LVU448
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1912              		.loc 1 384 23 is_stmt 0 view .LVU449
 1913 0156 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 48


 1914              	.LVL222:
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1915              		.loc 1 384 23 view .LVU450
 1916 015a 0246     		mov	r2, r0
 1917 015c 0B46     		mov	r3, r1
 1918 015e 4046     		mov	r0, r8
 1919 0160 4946     		mov	r1, r9
 1920 0162 FFF7FEFF 		bl	__aeabi_dsub
 1921              	.LVL223:
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1922              		.loc 1 384 39 view .LVU451
 1923 0166 6D4B     		ldr	r3, .L200+36
 1924 0168 03EBC503 		add	r3, r3, r5, lsl #3
 1925 016c 93ED008B 		vldr.64	d8, [r3]
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1926              		.loc 1 384 10 view .LVU452
 1927 0170 53EC182B 		vmov	r2, r3, d8
 1928 0174 FFF7FEFF 		bl	__aeabi_dmul
 1929              	.LVL224:
 1930 0178 0246     		mov	r2, r0
 1931 017a 0B46     		mov	r3, r1
 1932 017c CDE90623 		strd	r2, [sp, #24]
 1933              	.LVL225:
 385:Core/Src/printf.c ****   diff = tmp - frac;
 1934              		.loc 1 385 3 is_stmt 1 view .LVU453
 385:Core/Src/printf.c ****   diff = tmp - frac;
 1935              		.loc 1 385 17 is_stmt 0 view .LVU454
 1936 0180 FFF7FEFF 		bl	__aeabi_d2uiz
 1937              	.LVL226:
 385:Core/Src/printf.c ****   diff = tmp - frac;
 1938              		.loc 1 385 17 view .LVU455
 1939 0184 0746     		mov	r7, r0
 1940              	.LVL227:
 386:Core/Src/printf.c **** 
 1941              		.loc 1 386 3 is_stmt 1 view .LVU456
 386:Core/Src/printf.c **** 
 1942              		.loc 1 386 14 is_stmt 0 view .LVU457
 1943 0186 FFF7FEFF 		bl	__aeabi_ui2d
 1944              	.LVL228:
 386:Core/Src/printf.c **** 
 1945              		.loc 1 386 14 view .LVU458
 1946 018a 0246     		mov	r2, r0
 1947 018c 0B46     		mov	r3, r1
 386:Core/Src/printf.c **** 
 1948              		.loc 1 386 8 view .LVU459
 1949 018e DDE90601 		ldrd	r0, [sp, #24]
 1950 0192 FFF7FEFF 		bl	__aeabi_dsub
 1951              	.LVL229:
 1952 0196 0246     		mov	r2, r0
 1953 0198 0B46     		mov	r3, r1
 1954 019a CDE90623 		strd	r2, [sp, #24]
 1955              	.LVL230:
 388:Core/Src/printf.c ****     ++frac;
 1956              		.loc 1 388 3 is_stmt 1 view .LVU460
 388:Core/Src/printf.c ****     ++frac;
 1957              		.loc 1 388 6 is_stmt 0 view .LVU461
 1958 019e 0022     		movs	r2, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 49


 1959              	.LVL231:
 388:Core/Src/printf.c ****     ++frac;
 1960              		.loc 1 388 6 view .LVU462
 1961 01a0 5F4B     		ldr	r3, .L200+40
 1962 01a2 FFF7FEFF 		bl	__aeabi_dcmpgt
 1963              	.LVL232:
 1964 01a6 50B3     		cbz	r0, .L186
 389:Core/Src/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 1965              		.loc 1 389 5 is_stmt 1 view .LVU463
 1966 01a8 0137     		adds	r7, r7, #1
 1967              	.LVL233:
 391:Core/Src/printf.c ****       frac = 0;
 1968              		.loc 1 391 5 view .LVU464
 391:Core/Src/printf.c ****       frac = 0;
 1969              		.loc 1 391 14 is_stmt 0 view .LVU465
 1970 01aa 3846     		mov	r0, r7
 1971 01ac FFF7FEFF 		bl	__aeabi_ui2d
 1972              	.LVL234:
 1973 01b0 0246     		mov	r2, r0
 1974 01b2 0B46     		mov	r3, r1
 391:Core/Src/printf.c ****       frac = 0;
 1975              		.loc 1 391 8 view .LVU466
 1976 01b4 51EC180B 		vmov	r0, r1, d8
 1977 01b8 FFF7FEFF 		bl	__aeabi_dcmple
 1978              	.LVL235:
 1979 01bc 08B1     		cbz	r0, .L144
 392:Core/Src/printf.c ****       ++whole;
 1980              		.loc 1 392 7 is_stmt 1 view .LVU467
 1981              	.LVL236:
 393:Core/Src/printf.c ****     }
 1982              		.loc 1 393 7 view .LVU468
 1983 01be 0136     		adds	r6, r6, #1
 1984              	.LVL237:
 392:Core/Src/printf.c ****       ++whole;
 1985              		.loc 1 392 12 is_stmt 0 view .LVU469
 1986 01c0 0027     		movs	r7, #0
 1987              	.LVL238:
 1988              	.L144:
 403:Core/Src/printf.c ****     diff = value - (double)whole;
 1989              		.loc 1 403 3 is_stmt 1 view .LVU470
 403:Core/Src/printf.c ****     diff = value - (double)whole;
 1990              		.loc 1 403 6 is_stmt 0 view .LVU471
 1991 01c2 55BB     		cbnz	r5, .L147
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1992              		.loc 1 404 5 is_stmt 1 view .LVU472
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1993              		.loc 1 404 20 is_stmt 0 view .LVU473
 1994 01c4 3046     		mov	r0, r6
 1995 01c6 FFF7FEFF 		bl	__aeabi_i2d
 1996              	.LVL239:
 1997 01ca 0246     		mov	r2, r0
 1998 01cc 0B46     		mov	r3, r1
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1999              		.loc 1 404 10 view .LVU474
 2000 01ce 4046     		mov	r0, r8
 2001 01d0 4946     		mov	r1, r9
 2002 01d2 FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 50


 2003              	.LVL240:
 2004 01d6 8046     		mov	r8, r0
 2005              	.LVL241:
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 2006              		.loc 1 404 10 view .LVU475
 2007 01d8 8946     		mov	r9, r1
 2008              	.LVL242:
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2009              		.loc 1 405 5 is_stmt 1 view .LVU476
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2010              		.loc 1 405 8 is_stmt 0 view .LVU477
 2011 01da 0022     		movs	r2, #0
 2012 01dc 504B     		ldr	r3, .L200+40
 2013 01de FFF7FEFF 		bl	__aeabi_dcmplt
 2014              	.LVL243:
 2015 01e2 38B1     		cbz	r0, .L148
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2016              		.loc 1 405 24 discriminator 2 view .LVU478
 2017 01e4 0022     		movs	r2, #0
 2018 01e6 4E4B     		ldr	r3, .L200+40
 2019 01e8 4046     		mov	r0, r8
 2020 01ea 4946     		mov	r1, r9
 2021 01ec FFF7FEFF 		bl	__aeabi_dcmpgt
 2022              	.LVL244:
 2023 01f0 0028     		cmp	r0, #0
 2024 01f2 42D0     		beq	.L158
 2025              	.L148:
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2026              		.loc 1 405 41 discriminator 3 view .LVU479
 2027 01f4 16F0010F 		tst	r6, #1
 2028 01f8 3FD0     		beq	.L158
 408:Core/Src/printf.c ****     }
 2029              		.loc 1 408 7 is_stmt 1 view .LVU480
 2030 01fa 0136     		adds	r6, r6, #1
 2031              	.LVL245:
 408:Core/Src/printf.c ****     }
 2032              		.loc 1 408 7 is_stmt 0 view .LVU481
 2033 01fc 3DE0     		b	.L158
 2034              	.LVL246:
 2035              	.L186:
 396:Core/Src/printf.c ****   }
 2036              		.loc 1 396 8 is_stmt 1 view .LVU482
 396:Core/Src/printf.c ****   }
 2037              		.loc 1 396 11 is_stmt 0 view .LVU483
 2038 01fe 0022     		movs	r2, #0
 2039 0200 474B     		ldr	r3, .L200+40
 2040 0202 DDE90601 		ldrd	r0, [sp, #24]
 2041 0206 FFF7FEFF 		bl	__aeabi_dcmplt
 2042              	.LVL247:
 2043 020a 0028     		cmp	r0, #0
 2044 020c D9D1     		bne	.L144
 398:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2045              		.loc 1 398 8 is_stmt 1 view .LVU484
 398:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2046              		.loc 1 398 11 is_stmt 0 view .LVU485
 2047 020e 17B1     		cbz	r7, .L146
 398:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 51


 2048              		.loc 1 398 25 discriminator 1 view .LVU486
 2049 0210 17F0010F 		tst	r7, #1
 2050 0214 D5D0     		beq	.L144
 2051              	.L146:
 400:Core/Src/printf.c ****   }
 2052              		.loc 1 400 5 is_stmt 1 view .LVU487
 2053 0216 0137     		adds	r7, r7, #1
 2054              	.LVL248:
 400:Core/Src/printf.c ****   }
 2055              		.loc 1 400 5 is_stmt 0 view .LVU488
 2056 0218 D3E7     		b	.L144
 2057              	.LVL249:
 2058              	.L147:
 2059              	.LBB30:
 414:Core/Src/printf.c ****       --count;
 2060              		.loc 1 414 16 is_stmt 1 view .LVU489
 2061 021a 1F2C     		cmp	r4, #31
 2062 021c 17D8     		bhi	.L154
 415:Core/Src/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 2063              		.loc 1 415 7 view .LVU490
 2064 021e 013D     		subs	r5, r5, #1
 2065              	.LVL250:
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2066              		.loc 1 416 7 view .LVU491
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2067              		.loc 1 416 39 is_stmt 0 view .LVU492
 2068 0220 404B     		ldr	r3, .L200+44
 2069 0222 A3FB0723 		umull	r2, r3, r3, r7
 2070 0226 DB08     		lsrs	r3, r3, #3
 2071 0228 1946     		mov	r1, r3
 2072 022a 03EB8303 		add	r3, r3, r3, lsl #2
 2073 022e A7EB4303 		sub	r3, r7, r3, lsl #1
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2074              		.loc 1 416 14 view .LVU493
 2075 0232 621C     		adds	r2, r4, #1
 2076              	.LVL251:
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2077              		.loc 1 416 20 view .LVU494
 2078 0234 3033     		adds	r3, r3, #48
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2079              		.loc 1 416 18 view .LVU495
 2080 0236 04F14800 		add	r0, r4, #72
 2081 023a 0DEB0004 		add	r4, sp, r0
 2082 023e 04F8203C 		strb	r3, [r4, #-32]
 417:Core/Src/printf.c ****         break;
 2083              		.loc 1 417 7 is_stmt 1 view .LVU496
 2084              	.LVL252:
 417:Core/Src/printf.c ****         break;
 2085              		.loc 1 417 10 is_stmt 0 view .LVU497
 2086 0242 092F     		cmp	r7, #9
 2087 0244 02D9     		bls	.L172
 417:Core/Src/printf.c ****         break;
 2088              		.loc 1 417 18 view .LVU498
 2089 0246 0F46     		mov	r7, r1
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2090              		.loc 1 416 14 view .LVU499
 2091 0248 1446     		mov	r4, r2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 52


 2092 024a E6E7     		b	.L147
 2093              	.L172:
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2094              		.loc 1 416 14 view .LVU500
 2095 024c 1446     		mov	r4, r2
 2096              	.LVL253:
 2097              	.L154:
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2098              		.loc 1 422 44 is_stmt 1 view .LVU501
 2099 024e 1F2C     		cmp	r4, #31
 2100 0250 0AD8     		bhi	.L155
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2101              		.loc 1 422 53 is_stmt 0 discriminator 1 view .LVU502
 2102 0252 6B1E     		subs	r3, r5, #1
 2103              	.LVL254:
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2104              		.loc 1 422 44 discriminator 1 view .LVU503
 2105 0254 45B1     		cbz	r5, .L155
 423:Core/Src/printf.c ****     }
 2106              		.loc 1 423 7 is_stmt 1 view .LVU504
 2107              	.LVL255:
 423:Core/Src/printf.c ****     }
 2108              		.loc 1 423 18 is_stmt 0 view .LVU505
 2109 0256 04F14802 		add	r2, r4, #72
 2110 025a 6A44     		add	r2, sp, r2
 2111 025c 3021     		movs	r1, #48
 2112 025e 02F8201C 		strb	r1, [r2, #-32]
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2113              		.loc 1 422 53 view .LVU506
 2114 0262 1D46     		mov	r5, r3
 423:Core/Src/printf.c ****     }
 2115              		.loc 1 423 14 view .LVU507
 2116 0264 0134     		adds	r4, r4, #1
 2117              	.LVL256:
 423:Core/Src/printf.c ****     }
 2118              		.loc 1 423 14 view .LVU508
 2119 0266 F2E7     		b	.L154
 2120              	.LVL257:
 2121              	.L155:
 425:Core/Src/printf.c ****       // add decimal
 2122              		.loc 1 425 5 is_stmt 1 view .LVU509
 425:Core/Src/printf.c ****       // add decimal
 2123              		.loc 1 425 8 is_stmt 0 view .LVU510
 2124 0268 1F2C     		cmp	r4, #31
 2125 026a 06D8     		bhi	.L158
 427:Core/Src/printf.c ****     }
 2126              		.loc 1 427 7 is_stmt 1 view .LVU511
 2127              	.LVL258:
 427:Core/Src/printf.c ****     }
 2128              		.loc 1 427 18 is_stmt 0 view .LVU512
 2129 026c 04F14803 		add	r3, r4, #72
 2130 0270 6B44     		add	r3, sp, r3
 2131 0272 2E22     		movs	r2, #46
 2132 0274 03F8202C 		strb	r2, [r3, #-32]
 427:Core/Src/printf.c ****     }
 2133              		.loc 1 427 14 view .LVU513
 2134 0278 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 53


 2135              	.LVL259:
 2136              	.L158:
 427:Core/Src/printf.c ****     }
 2137              		.loc 1 427 14 view .LVU514
 2138              	.LBE30:
 432:Core/Src/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 2139              		.loc 1 432 14 is_stmt 1 view .LVU515
 2140 027a 1F2C     		cmp	r4, #31
 2141 027c 17D8     		bhi	.L157
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2142              		.loc 1 433 5 view .LVU516
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2143              		.loc 1 433 37 is_stmt 0 view .LVU517
 2144 027e 2A4A     		ldr	r2, .L200+48
 2145 0280 82FB0632 		smull	r3, r2, r2, r6
 2146 0284 F317     		asrs	r3, r6, #31
 2147 0286 C3EBA203 		rsb	r3, r3, r2, asr #2
 2148 028a 1A46     		mov	r2, r3
 2149 028c 03EB8303 		add	r3, r3, r3, lsl #2
 2150 0290 A6EB4303 		sub	r3, r6, r3, lsl #1
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2151              		.loc 1 433 12 view .LVU518
 2152 0294 611C     		adds	r1, r4, #1
 2153              	.LVL260:
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2154              		.loc 1 433 18 view .LVU519
 2155 0296 3033     		adds	r3, r3, #48
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2156              		.loc 1 433 16 view .LVU520
 2157 0298 04F14800 		add	r0, r4, #72
 2158 029c 0DEB0004 		add	r4, sp, r0
 2159 02a0 04F8203C 		strb	r3, [r4, #-32]
 434:Core/Src/printf.c ****       break;
 2160              		.loc 1 434 5 is_stmt 1 view .LVU521
 434:Core/Src/printf.c ****       break;
 2161              		.loc 1 434 17 is_stmt 0 view .LVU522
 2162 02a4 1646     		mov	r6, r2
 2163              	.LVL261:
 434:Core/Src/printf.c ****       break;
 2164              		.loc 1 434 8 view .LVU523
 2165 02a6 0AB1     		cbz	r2, .L173
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2166              		.loc 1 433 12 view .LVU524
 2167 02a8 0C46     		mov	r4, r1
 2168 02aa E6E7     		b	.L158
 2169              	.L173:
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2170              		.loc 1 433 12 view .LVU525
 2171 02ac 0C46     		mov	r4, r1
 2172              	.LVL262:
 2173              	.L157:
 440:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2174              		.loc 1 440 3 is_stmt 1 view .LVU526
 440:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2175              		.loc 1 440 29 is_stmt 0 view .LVU527
 2176 02ae 209B     		ldr	r3, [sp, #128]
 2177 02b0 03F00303 		and	r3, r3, #3
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 54


 440:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2178              		.loc 1 440 6 view .LVU528
 2179 02b4 012B     		cmp	r3, #1
 2180 02b6 39D0     		beq	.L199
 2181              	.LVL263:
 2182              	.L160:
 449:Core/Src/printf.c ****     if (negative) {
 2183              		.loc 1 449 3 is_stmt 1 view .LVU529
 449:Core/Src/printf.c ****     if (negative) {
 2184              		.loc 1 449 6 is_stmt 0 view .LVU530
 2185 02b8 1F2C     		cmp	r4, #31
 2186 02ba 09D8     		bhi	.L165
 450:Core/Src/printf.c ****       buf[len++] = '-';
 2187              		.loc 1 450 5 is_stmt 1 view .LVU531
 450:Core/Src/printf.c ****       buf[len++] = '-';
 2188              		.loc 1 450 8 is_stmt 0 view .LVU532
 2189 02bc 099B     		ldr	r3, [sp, #36]
 2190 02be 002B     		cmp	r3, #0
 2191 02c0 51D0     		beq	.L166
 451:Core/Src/printf.c ****     }
 2192              		.loc 1 451 7 is_stmt 1 view .LVU533
 2193              	.LVL264:
 451:Core/Src/printf.c ****     }
 2194              		.loc 1 451 18 is_stmt 0 view .LVU534
 2195 02c2 04F14803 		add	r3, r4, #72
 2196 02c6 6B44     		add	r3, sp, r3
 2197 02c8 2D22     		movs	r2, #45
 2198 02ca 03F8202C 		strb	r2, [r3, #-32]
 451:Core/Src/printf.c ****     }
 2199              		.loc 1 451 14 view .LVU535
 2200 02ce 0134     		adds	r4, r4, #1
 2201              	.LVL265:
 2202              	.L165:
 461:Core/Src/printf.c **** }
 2203              		.loc 1 461 3 is_stmt 1 view .LVU536
 461:Core/Src/printf.c **** }
 2204              		.loc 1 461 10 is_stmt 0 view .LVU537
 2205 02d0 209B     		ldr	r3, [sp, #128]
 2206 02d2 0393     		str	r3, [sp, #12]
 2207 02d4 1F9B     		ldr	r3, [sp, #124]
 2208 02d6 0293     		str	r3, [sp, #8]
 2209 02d8 0194     		str	r4, [sp, #4]
 2210 02da 0AAB     		add	r3, sp, #40
 2211 02dc 0093     		str	r3, [sp]
 2212 02de 5B46     		mov	r3, fp
 2213 02e0 5246     		mov	r2, r10
 2214 02e2 0899     		ldr	r1, [sp, #32]
 2215 02e4 0598     		ldr	r0, [sp, #20]
 2216 02e6 FFF7FEFF 		bl	_out_rev
 2217              	.LVL266:
 2218              	.L122:
 462:Core/Src/printf.c **** 
 2219              		.loc 1 462 1 view .LVU538
 2220 02ea 13B0     		add	sp, sp, #76
 2221              	.LCFI25:
 2222              		.cfi_remember_state
 2223              		.cfi_def_cfa_offset 44
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 55


 2224              		@ sp needed
 2225 02ec BDEC028B 		vldm	sp!, {d8}
 2226              	.LCFI26:
 2227              		.cfi_restore 80
 2228              		.cfi_restore 81
 2229              		.cfi_def_cfa_offset 36
 2230 02f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2231              	.LVL267:
 2232              	.L201:
 462:Core/Src/printf.c **** 
 2233              		.loc 1 462 1 view .LVU539
 2234 02f4 AFF30080 		.align	3
 2235              	.L200:
 2236 02f8 00000000 		.word	0
 2237 02fc 65CDCD41 		.word	1104006501
 2238 0300 00000000 		.word	0
 2239 0304 65CDCDC1 		.word	-1043477147
 2240 0308 FFFFEF7F 		.word	2146435071
 2241 030c 0C000000 		.word	.LC2
 2242 0310 10000000 		.word	.LC3
 2243 0314 00000000 		.word	.LC0
 2244 0318 08000000 		.word	.LC1
 2245 031c 00000000 		.word	pow10.0
 2246 0320 0000E03F 		.word	1071644672
 2247 0324 CDCCCCCC 		.word	-858993459
 2248 0328 67666666 		.word	1717986919
 2249              	.LVL268:
 2250              	.L199:
 2251              	.LCFI27:
 2252              		.cfi_restore_state
 441:Core/Src/printf.c ****       width--;
 2253              		.loc 1 441 5 is_stmt 1 view .LVU540
 441:Core/Src/printf.c ****       width--;
 2254              		.loc 1 441 8 is_stmt 0 view .LVU541
 2255 032c 1F9B     		ldr	r3, [sp, #124]
 2256 032e B3B1     		cbz	r3, .L191
 441:Core/Src/printf.c ****       width--;
 2257              		.loc 1 441 15 discriminator 1 view .LVU542
 2258 0330 099B     		ldr	r3, [sp, #36]
 2259 0332 1BB9     		cbnz	r3, .L162
 441:Core/Src/printf.c ****       width--;
 2260              		.loc 1 441 28 discriminator 2 view .LVU543
 2261 0334 209B     		ldr	r3, [sp, #128]
 2262 0336 13F00C0F 		tst	r3, #12
 2263 033a 12D0     		beq	.L192
 2264              	.L162:
 442:Core/Src/printf.c ****     }
 2265              		.loc 1 442 7 is_stmt 1 view .LVU544
 442:Core/Src/printf.c ****     }
 2266              		.loc 1 442 12 is_stmt 0 view .LVU545
 2267 033c 1F9B     		ldr	r3, [sp, #124]
 2268 033e 013B     		subs	r3, r3, #1
 2269 0340 1F93     		str	r3, [sp, #124]
 2270              	.LVL269:
 442:Core/Src/printf.c ****     }
 2271              		.loc 1 442 12 view .LVU546
 2272 0342 1946     		mov	r1, r3
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 56


 2273 0344 06E0     		b	.L163
 2274              	.LVL270:
 2275              	.L164:
 445:Core/Src/printf.c ****     }
 2276              		.loc 1 445 7 is_stmt 1 view .LVU547
 445:Core/Src/printf.c ****     }
 2277              		.loc 1 445 18 is_stmt 0 view .LVU548
 2278 0346 04F14803 		add	r3, r4, #72
 2279 034a 6B44     		add	r3, sp, r3
 2280 034c 3022     		movs	r2, #48
 2281 034e 03F8202C 		strb	r2, [r3, #-32]
 445:Core/Src/printf.c ****     }
 2282              		.loc 1 445 14 view .LVU549
 2283 0352 0134     		adds	r4, r4, #1
 2284              	.LVL271:
 2285              	.L163:
 444:Core/Src/printf.c ****       buf[len++] = '0';
 2286              		.loc 1 444 26 is_stmt 1 view .LVU550
 2287 0354 8C42     		cmp	r4, r1
 2288 0356 AFD2     		bcs	.L160
 444:Core/Src/printf.c ****       buf[len++] = '0';
 2289              		.loc 1 444 26 is_stmt 0 discriminator 1 view .LVU551
 2290 0358 1F2C     		cmp	r4, #31
 2291 035a F4D9     		bls	.L164
 2292 035c ACE7     		b	.L160
 2293              	.LVL272:
 2294              	.L191:
 444:Core/Src/printf.c ****       buf[len++] = '0';
 2295              		.loc 1 444 26 discriminator 1 view .LVU552
 2296 035e 1F99     		ldr	r1, [sp, #124]
 2297 0360 F8E7     		b	.L163
 2298              	.L192:
 2299 0362 1F99     		ldr	r1, [sp, #124]
 2300 0364 F6E7     		b	.L163
 2301              	.L166:
 453:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2302              		.loc 1 453 10 is_stmt 1 view .LVU553
 453:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2303              		.loc 1 453 13 is_stmt 0 view .LVU554
 2304 0366 209B     		ldr	r3, [sp, #128]
 2305 0368 13F0040F 		tst	r3, #4
 2306 036c 07D0     		beq	.L167
 454:Core/Src/printf.c ****     }
 2307              		.loc 1 454 7 is_stmt 1 view .LVU555
 2308              	.LVL273:
 454:Core/Src/printf.c ****     }
 2309              		.loc 1 454 18 is_stmt 0 view .LVU556
 2310 036e 04F14803 		add	r3, r4, #72
 2311 0372 6B44     		add	r3, sp, r3
 2312 0374 2B22     		movs	r2, #43
 2313 0376 03F8202C 		strb	r2, [r3, #-32]
 454:Core/Src/printf.c ****     }
 2314              		.loc 1 454 14 view .LVU557
 2315 037a 0134     		adds	r4, r4, #1
 2316              	.LVL274:
 454:Core/Src/printf.c ****     }
 2317              		.loc 1 454 14 view .LVU558
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 57


 2318 037c A8E7     		b	.L165
 2319              	.L167:
 456:Core/Src/printf.c ****       buf[len++] = ' ';
 2320              		.loc 1 456 10 is_stmt 1 view .LVU559
 456:Core/Src/printf.c ****       buf[len++] = ' ';
 2321              		.loc 1 456 13 is_stmt 0 view .LVU560
 2322 037e 209B     		ldr	r3, [sp, #128]
 2323 0380 13F0080F 		tst	r3, #8
 2324 0384 A4D0     		beq	.L165
 457:Core/Src/printf.c ****     }
 2325              		.loc 1 457 7 is_stmt 1 view .LVU561
 2326              	.LVL275:
 457:Core/Src/printf.c ****     }
 2327              		.loc 1 457 18 is_stmt 0 view .LVU562
 2328 0386 04F14803 		add	r3, r4, #72
 2329 038a 6B44     		add	r3, sp, r3
 2330 038c 2022     		movs	r2, #32
 2331 038e 03F8202C 		strb	r2, [r3, #-32]
 457:Core/Src/printf.c ****     }
 2332              		.loc 1 457 14 view .LVU563
 2333 0392 0134     		adds	r4, r4, #1
 2334              	.LVL276:
 457:Core/Src/printf.c ****     }
 2335              		.loc 1 457 14 view .LVU564
 2336 0394 9CE7     		b	.L165
 2337              		.cfi_endproc
 2338              	.LFE11:
 2340 0396 00BF     		.section	.text._vsnprintf,"ax",%progbits
 2341              		.align	1
 2342              		.syntax unified
 2343              		.thumb
 2344              		.thumb_func
 2346              	_vsnprintf:
 2347              	.LVL277:
 2348              	.LFB13:
 572:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 573:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 574:Core/Src/printf.c **** 
 575:Core/Src/printf.c **** 
 576:Core/Src/printf.c **** // internal vsnprintf
 577:Core/Src/printf.c **** static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_l
 578:Core/Src/printf.c **** {
 2349              		.loc 1 578 1 is_stmt 1 view -0
 2350              		.cfi_startproc
 2351              		@ args = 4, pretend = 0, frame = 24
 2352              		@ frame_needed = 0, uses_anonymous_args = 0
 2353              		.loc 1 578 1 is_stmt 0 view .LVU566
 2354 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2355              	.LCFI28:
 2356              		.cfi_def_cfa_offset 36
 2357              		.cfi_offset 4, -36
 2358              		.cfi_offset 5, -32
 2359              		.cfi_offset 6, -28
 2360              		.cfi_offset 7, -24
 2361              		.cfi_offset 8, -20
 2362              		.cfi_offset 9, -16
 2363              		.cfi_offset 10, -12
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 58


 2364              		.cfi_offset 11, -8
 2365              		.cfi_offset 14, -4
 2366 0004 91B0     		sub	sp, sp, #68
 2367              	.LCFI29:
 2368              		.cfi_def_cfa_offset 104
 2369 0006 8046     		mov	r8, r0
 2370 0008 1746     		mov	r7, r2
 2371 000a 0F93     		str	r3, [sp, #60]
 579:Core/Src/printf.c ****   unsigned int flags, width, precision, n;
 2372              		.loc 1 579 3 is_stmt 1 view .LVU567
 580:Core/Src/printf.c ****   size_t idx = 0U;
 2373              		.loc 1 580 3 view .LVU568
 2374              	.LVL278:
 581:Core/Src/printf.c **** 
 582:Core/Src/printf.c ****   if (!buffer) {
 2375              		.loc 1 582 3 view .LVU569
 2376              		.loc 1 582 6 is_stmt 0 view .LVU570
 2377 000c 8946     		mov	r9, r1
 2378 000e 0029     		cmp	r1, #0
 2379 0010 00F04083 		beq	.L304
 2380              	.L203:
 2381              	.LVL279:
 2382              	.LBB31:
 583:Core/Src/printf.c ****     // use null output function
 584:Core/Src/printf.c ****     out = _out_null;
 585:Core/Src/printf.c ****   }
 586:Core/Src/printf.c **** 
 587:Core/Src/printf.c ****   while (*format)
 588:Core/Src/printf.c ****   {
 589:Core/Src/printf.c ****     // format specifier?  %[flags][width][.precision][length]
 590:Core/Src/printf.c ****     if (*format != '%') {
 591:Core/Src/printf.c ****       // no
 592:Core/Src/printf.c ****       out(*format, buffer, idx++, maxlen);
 593:Core/Src/printf.c ****       format++;
 594:Core/Src/printf.c ****       continue;
 595:Core/Src/printf.c ****     }
 596:Core/Src/printf.c ****     else {
 597:Core/Src/printf.c ****       // yes, evaluate it
 598:Core/Src/printf.c ****       format++;
 599:Core/Src/printf.c ****     }
 600:Core/Src/printf.c **** 
 601:Core/Src/printf.c ****     // evaluate flags
 602:Core/Src/printf.c ****     flags = 0U;
 603:Core/Src/printf.c ****     do {
 604:Core/Src/printf.c ****       switch (*format) {
 605:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 611:Core/Src/printf.c ****       }
 612:Core/Src/printf.c ****     } while (n);
 613:Core/Src/printf.c **** 
 614:Core/Src/printf.c ****     // evaluate width field
 615:Core/Src/printf.c ****     width = 0U;
 616:Core/Src/printf.c ****     if (_is_digit(*format)) {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 59


 617:Core/Src/printf.c ****       width = _atoi(&format);
 618:Core/Src/printf.c ****     }
 619:Core/Src/printf.c ****     else if (*format == '*') {
 620:Core/Src/printf.c ****       const int w = va_arg(va, int);
 621:Core/Src/printf.c ****       if (w < 0) {
 622:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 623:Core/Src/printf.c ****         width = (unsigned int)-w;
 624:Core/Src/printf.c ****       }
 625:Core/Src/printf.c ****       else {
 626:Core/Src/printf.c ****         width = (unsigned int)w;
 627:Core/Src/printf.c ****       }
 628:Core/Src/printf.c ****       format++;
 629:Core/Src/printf.c ****     }
 630:Core/Src/printf.c **** 
 631:Core/Src/printf.c ****     // evaluate precision field
 632:Core/Src/printf.c ****     precision = 0U;
 633:Core/Src/printf.c ****     if (*format == '.') {
 634:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 635:Core/Src/printf.c ****       format++;
 636:Core/Src/printf.c ****       if (_is_digit(*format)) {
 637:Core/Src/printf.c ****         precision = _atoi(&format);
 638:Core/Src/printf.c ****       }
 639:Core/Src/printf.c ****       else if (*format == '*') {
 640:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 641:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 642:Core/Src/printf.c ****         format++;
 643:Core/Src/printf.c ****       }
 644:Core/Src/printf.c ****     }
 645:Core/Src/printf.c **** 
 646:Core/Src/printf.c ****     // evaluate length field
 647:Core/Src/printf.c ****     switch (*format) {
 648:Core/Src/printf.c ****       case 'l' :
 649:Core/Src/printf.c ****         flags |= FLAGS_LONG;
 650:Core/Src/printf.c ****         format++;
 651:Core/Src/printf.c ****         if (*format == 'l') {
 652:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 653:Core/Src/printf.c ****           format++;
 654:Core/Src/printf.c ****         }
 655:Core/Src/printf.c ****         break;
 656:Core/Src/printf.c ****       case 'h' :
 657:Core/Src/printf.c ****         flags |= FLAGS_SHORT;
 658:Core/Src/printf.c ****         format++;
 659:Core/Src/printf.c ****         if (*format == 'h') {
 660:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 661:Core/Src/printf.c ****           format++;
 662:Core/Src/printf.c ****         }
 663:Core/Src/printf.c ****         break;
 664:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_PTRDIFF_T)
 665:Core/Src/printf.c ****       case 't' :
 666:Core/Src/printf.c ****         flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 667:Core/Src/printf.c ****         format++;
 668:Core/Src/printf.c ****         break;
 669:Core/Src/printf.c **** #endif
 670:Core/Src/printf.c ****       case 'j' :
 671:Core/Src/printf.c ****         flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 672:Core/Src/printf.c ****         format++;
 673:Core/Src/printf.c ****         break;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 60


 674:Core/Src/printf.c ****       case 'z' :
 675:Core/Src/printf.c ****         flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 676:Core/Src/printf.c ****         format++;
 677:Core/Src/printf.c ****         break;
 678:Core/Src/printf.c ****       default :
 679:Core/Src/printf.c ****         break;
 680:Core/Src/printf.c ****     }
 681:Core/Src/printf.c **** 
 682:Core/Src/printf.c ****     // evaluate specifier
 683:Core/Src/printf.c ****     switch (*format) {
 684:Core/Src/printf.c ****       case 'd' :
 685:Core/Src/printf.c ****       case 'i' :
 686:Core/Src/printf.c ****       case 'u' :
 687:Core/Src/printf.c ****       case 'x' :
 688:Core/Src/printf.c ****       case 'X' :
 689:Core/Src/printf.c ****       case 'o' :
 690:Core/Src/printf.c ****       case 'b' : {
 691:Core/Src/printf.c ****         // set the base
 692:Core/Src/printf.c ****         unsigned int base;
 693:Core/Src/printf.c ****         if (*format == 'x' || *format == 'X') {
 694:Core/Src/printf.c ****           base = 16U;
 695:Core/Src/printf.c ****         }
 696:Core/Src/printf.c ****         else if (*format == 'o') {
 697:Core/Src/printf.c ****           base =  8U;
 698:Core/Src/printf.c ****         }
 699:Core/Src/printf.c ****         else if (*format == 'b') {
 700:Core/Src/printf.c ****           base =  2U;
 701:Core/Src/printf.c ****         }
 702:Core/Src/printf.c ****         else {
 703:Core/Src/printf.c ****           base = 10U;
 704:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 705:Core/Src/printf.c ****         }
 706:Core/Src/printf.c ****         // uppercase
 707:Core/Src/printf.c ****         if (*format == 'X') {
 708:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 709:Core/Src/printf.c ****         }
 710:Core/Src/printf.c **** 
 711:Core/Src/printf.c ****         // no plus or space flag for u, x, X, o, b
 712:Core/Src/printf.c ****         if ((*format != 'i') && (*format != 'd')) {
 713:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 714:Core/Src/printf.c ****         }
 715:Core/Src/printf.c **** 
 716:Core/Src/printf.c ****         // ignore '0' flag when precision is given
 717:Core/Src/printf.c ****         if (flags & FLAGS_PRECISION) {
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 719:Core/Src/printf.c ****         }
 720:Core/Src/printf.c **** 
 721:Core/Src/printf.c ****         // convert the integer
 722:Core/Src/printf.c ****         if ((*format == 'i') || (*format == 'd')) {
 723:Core/Src/printf.c ****           // signed
 724:Core/Src/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 725:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 726:Core/Src/printf.c ****             const long long value = va_arg(va, long long);
 727:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 728:Core/Src/printf.c **** #endif
 729:Core/Src/printf.c ****           }
 730:Core/Src/printf.c ****           else if (flags & FLAGS_LONG) {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 61


 731:Core/Src/printf.c ****             const long value = va_arg(va, long);
 732:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 733:Core/Src/printf.c ****           }
 734:Core/Src/printf.c ****           else {
 735:Core/Src/printf.c ****             const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) 
 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 737:Core/Src/printf.c ****           }
 738:Core/Src/printf.c ****         }
 739:Core/Src/printf.c ****         else {
 740:Core/Src/printf.c ****           // unsigned
 741:Core/Src/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 742:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 743:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, 
 744:Core/Src/printf.c **** #endif
 745:Core/Src/printf.c ****           }
 746:Core/Src/printf.c ****           else if (flags & FLAGS_LONG) {
 747:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 748:Core/Src/printf.c ****           }
 749:Core/Src/printf.c ****           else {
 750:Core/Src/printf.c ****             const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned in
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 752:Core/Src/printf.c ****           }
 753:Core/Src/printf.c ****         }
 754:Core/Src/printf.c ****         format++;
 755:Core/Src/printf.c ****         break;
 756:Core/Src/printf.c ****       }
 757:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 758:Core/Src/printf.c ****       case 'f' :
 759:Core/Src/printf.c ****       case 'F' :
 760:Core/Src/printf.c ****         if (*format == 'F') flags |= FLAGS_UPPERCASE;
 761:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 762:Core/Src/printf.c ****         format++;
 763:Core/Src/printf.c ****         break;
 764:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 765:Core/Src/printf.c ****       case 'e':
 766:Core/Src/printf.c ****       case 'E':
 767:Core/Src/printf.c ****       case 'g':
 768:Core/Src/printf.c ****       case 'G':
 769:Core/Src/printf.c ****         if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 772:Core/Src/printf.c ****         format++;
 773:Core/Src/printf.c ****         break;
 774:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 775:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 776:Core/Src/printf.c ****       case 'c' : {
 777:Core/Src/printf.c ****         unsigned int l = 1U;
 778:Core/Src/printf.c ****         // pre padding
 779:Core/Src/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 780:Core/Src/printf.c ****           while (l++ < width) {
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 782:Core/Src/printf.c ****           }
 783:Core/Src/printf.c ****         }
 784:Core/Src/printf.c ****         // char output
 785:Core/Src/printf.c ****         out((char)va_arg(va, int), buffer, idx++, maxlen);
 786:Core/Src/printf.c ****         // post padding
 787:Core/Src/printf.c ****         if (flags & FLAGS_LEFT) {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 62


 788:Core/Src/printf.c ****           while (l++ < width) {
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 790:Core/Src/printf.c ****           }
 791:Core/Src/printf.c ****         }
 792:Core/Src/printf.c ****         format++;
 793:Core/Src/printf.c ****         break;
 2383              		.loc 1 793 9 view .LVU571
 2384 0014 0026     		movs	r6, #0
 2385              	.LVL280:
 2386              	.L284:
 2387              		.loc 1 793 9 view .LVU572
 2388              	.LBE31:
 587:Core/Src/printf.c ****   {
 2389              		.loc 1 587 10 is_stmt 1 view .LVU573
 2390 0016 0F9B     		ldr	r3, [sp, #60]
 2391 0018 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2392 001a 0028     		cmp	r0, #0
 2393 001c 00F03D83 		beq	.L305
 590:Core/Src/printf.c ****       // no
 2394              		.loc 1 590 5 view .LVU574
 590:Core/Src/printf.c ****       // no
 2395              		.loc 1 590 8 is_stmt 0 view .LVU575
 2396 0020 2528     		cmp	r0, #37
 2397 0022 09D0     		beq	.L205
 592:Core/Src/printf.c ****       format++;
 2398              		.loc 1 592 7 is_stmt 1 discriminator 1 view .LVU576
 2399 0024 741C     		adds	r4, r6, #1
 2400              	.LVL281:
 592:Core/Src/printf.c ****       format++;
 2401              		.loc 1 592 7 is_stmt 0 discriminator 1 view .LVU577
 2402 0026 3B46     		mov	r3, r7
 2403 0028 3246     		mov	r2, r6
 2404 002a 4946     		mov	r1, r9
 2405 002c C047     		blx	r8
 2406              	.LVL282:
 593:Core/Src/printf.c ****       continue;
 2407              		.loc 1 593 7 is_stmt 1 discriminator 1 view .LVU578
 593:Core/Src/printf.c ****       continue;
 2408              		.loc 1 593 13 is_stmt 0 discriminator 1 view .LVU579
 2409 002e 0F9B     		ldr	r3, [sp, #60]
 2410 0030 0133     		adds	r3, r3, #1
 2411 0032 0F93     		str	r3, [sp, #60]
 594:Core/Src/printf.c ****     }
 2412              		.loc 1 594 7 is_stmt 1 discriminator 1 view .LVU580
 592:Core/Src/printf.c ****       format++;
 2413              		.loc 1 592 7 is_stmt 0 discriminator 1 view .LVU581
 2414 0034 2646     		mov	r6, r4
 594:Core/Src/printf.c ****     }
 2415              		.loc 1 594 7 discriminator 1 view .LVU582
 2416 0036 EEE7     		b	.L284
 2417              	.LVL283:
 2418              	.L205:
 598:Core/Src/printf.c ****     }
 2419              		.loc 1 598 7 is_stmt 1 view .LVU583
 598:Core/Src/printf.c ****     }
 2420              		.loc 1 598 13 is_stmt 0 view .LVU584
 2421 0038 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 63


 2422 003a 0F93     		str	r3, [sp, #60]
 602:Core/Src/printf.c ****     do {
 2423              		.loc 1 602 5 is_stmt 1 view .LVU585
 2424              	.LVL284:
 602:Core/Src/printf.c ****     do {
 2425              		.loc 1 602 11 is_stmt 0 view .LVU586
 2426 003c 0025     		movs	r5, #0
 2427 003e 1FE0     		b	.L214
 2428              	.LVL285:
 2429              	.L208:
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2430              		.loc 1 605 19 is_stmt 1 view .LVU587
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2431              		.loc 1 605 25 is_stmt 0 view .LVU588
 2432 0040 45F00105 		orr	r5, r5, #1
 2433              	.LVL286:
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2434              		.loc 1 605 43 is_stmt 1 view .LVU589
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2435              		.loc 1 605 49 is_stmt 0 view .LVU590
 2436 0044 0132     		adds	r2, r2, #1
 2437 0046 0F92     		str	r2, [sp, #60]
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2438              		.loc 1 605 53 is_stmt 1 view .LVU591
 2439              	.LVL287:
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2440              		.loc 1 605 61 view .LVU592
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2441              		.loc 1 605 55 is_stmt 0 view .LVU593
 2442 0048 0123     		movs	r3, #1
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2443              		.loc 1 605 61 view .LVU594
 2444 004a 18E0     		b	.L207
 2445              	.LVL288:
 2446              	.L210:
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2447              		.loc 1 606 19 is_stmt 1 view .LVU595
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2448              		.loc 1 606 25 is_stmt 0 view .LVU596
 2449 004c 45F00205 		orr	r5, r5, #2
 2450              	.LVL289:
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2451              		.loc 1 606 43 is_stmt 1 view .LVU597
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2452              		.loc 1 606 49 is_stmt 0 view .LVU598
 2453 0050 0132     		adds	r2, r2, #1
 2454 0052 0F92     		str	r2, [sp, #60]
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2455              		.loc 1 606 53 is_stmt 1 view .LVU599
 2456              	.LVL290:
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2457              		.loc 1 606 61 view .LVU600
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2458              		.loc 1 606 55 is_stmt 0 view .LVU601
 2459 0054 0123     		movs	r3, #1
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2460              		.loc 1 606 61 view .LVU602
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 64


 2461 0056 12E0     		b	.L207
 2462              	.LVL291:
 2463              	.L211:
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2464              		.loc 1 607 19 is_stmt 1 view .LVU603
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2465              		.loc 1 607 25 is_stmt 0 view .LVU604
 2466 0058 45F00405 		orr	r5, r5, #4
 2467              	.LVL292:
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2468              		.loc 1 607 43 is_stmt 1 view .LVU605
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2469              		.loc 1 607 49 is_stmt 0 view .LVU606
 2470 005c 0132     		adds	r2, r2, #1
 2471 005e 0F92     		str	r2, [sp, #60]
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2472              		.loc 1 607 53 is_stmt 1 view .LVU607
 2473              	.LVL293:
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2474              		.loc 1 607 61 view .LVU608
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2475              		.loc 1 607 55 is_stmt 0 view .LVU609
 2476 0060 0123     		movs	r3, #1
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2477              		.loc 1 607 61 view .LVU610
 2478 0062 0CE0     		b	.L207
 2479              	.LVL294:
 2480              	.L213:
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2481              		.loc 1 608 19 is_stmt 1 view .LVU611
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2482              		.loc 1 608 25 is_stmt 0 view .LVU612
 2483 0064 45F00805 		orr	r5, r5, #8
 2484              	.LVL295:
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2485              		.loc 1 608 43 is_stmt 1 view .LVU613
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2486              		.loc 1 608 49 is_stmt 0 view .LVU614
 2487 0068 0132     		adds	r2, r2, #1
 2488 006a 0F92     		str	r2, [sp, #60]
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2489              		.loc 1 608 53 is_stmt 1 view .LVU615
 2490              	.LVL296:
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2491              		.loc 1 608 61 view .LVU616
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2492              		.loc 1 608 55 is_stmt 0 view .LVU617
 2493 006c 0123     		movs	r3, #1
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2494              		.loc 1 608 61 view .LVU618
 2495 006e 06E0     		b	.L207
 2496              	.LVL297:
 2497              	.L212:
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2498              		.loc 1 609 19 is_stmt 1 view .LVU619
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2499              		.loc 1 609 25 is_stmt 0 view .LVU620
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 65


 2500 0070 45F01005 		orr	r5, r5, #16
 2501              	.LVL298:
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2502              		.loc 1 609 43 is_stmt 1 view .LVU621
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2503              		.loc 1 609 49 is_stmt 0 view .LVU622
 2504 0074 0132     		adds	r2, r2, #1
 2505 0076 0F92     		str	r2, [sp, #60]
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2506              		.loc 1 609 53 is_stmt 1 view .LVU623
 2507              	.LVL299:
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2508              		.loc 1 609 61 view .LVU624
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2509              		.loc 1 609 55 is_stmt 0 view .LVU625
 2510 0078 0123     		movs	r3, #1
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2511              		.loc 1 609 61 view .LVU626
 2512 007a 00E0     		b	.L207
 2513              	.LVL300:
 2514              	.L288:
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2515              		.loc 1 604 7 view .LVU627
 2516 007c 0023     		movs	r3, #0
 2517              	.L207:
 2518              	.LVL301:
 612:Core/Src/printf.c **** 
 2519              		.loc 1 612 14 is_stmt 1 view .LVU628
 2520 007e 4BB3     		cbz	r3, .L306
 2521              	.LVL302:
 2522              	.L214:
 603:Core/Src/printf.c ****       switch (*format) {
 2523              		.loc 1 603 5 view .LVU629
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2524              		.loc 1 604 7 view .LVU630
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2525              		.loc 1 604 15 is_stmt 0 view .LVU631
 2526 0080 0F9A     		ldr	r2, [sp, #60]
 2527 0082 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2528              		.loc 1 604 7 view .LVU632
 2529 0084 203B     		subs	r3, r3, #32
 2530 0086 102B     		cmp	r3, #16
 2531 0088 F8D8     		bhi	.L288
 2532 008a 01A1     		adr	r1, .L209
 2533 008c 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 2534              		.p2align 2
 2535              	.L209:
 2536 0090 65000000 		.word	.L213+1
 2537 0094 7D000000 		.word	.L288+1
 2538 0098 7D000000 		.word	.L288+1
 2539 009c 71000000 		.word	.L212+1
 2540 00a0 7D000000 		.word	.L288+1
 2541 00a4 7D000000 		.word	.L288+1
 2542 00a8 7D000000 		.word	.L288+1
 2543 00ac 7D000000 		.word	.L288+1
 2544 00b0 7D000000 		.word	.L288+1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 66


 2545 00b4 7D000000 		.word	.L288+1
 2546 00b8 7D000000 		.word	.L288+1
 2547 00bc 59000000 		.word	.L211+1
 2548 00c0 7D000000 		.word	.L288+1
 2549 00c4 4D000000 		.word	.L210+1
 2550 00c8 7D000000 		.word	.L288+1
 2551 00cc 7D000000 		.word	.L288+1
 2552 00d0 41000000 		.word	.L208+1
 2553              	.LVL303:
 2554              		.p2align 1
 2555              	.L306:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2556              		.loc 1 616 9 view .LVU633
 2557 00d4 0B93     		str	r3, [sp, #44]
 615:Core/Src/printf.c ****     if (_is_digit(*format)) {
 2558              		.loc 1 615 5 is_stmt 1 view .LVU634
 2559              	.LVL304:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2560              		.loc 1 616 5 view .LVU635
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2561              		.loc 1 616 9 is_stmt 0 view .LVU636
 2562 00d6 0F9B     		ldr	r3, [sp, #60]
 2563              	.LVL305:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2564              		.loc 1 616 9 view .LVU637
 2565 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2566              	.LVL306:
 2567              	.LBB32:
 2568              	.LBI32:
 181:Core/Src/printf.c **** {
 2569              		.loc 1 181 20 is_stmt 1 view .LVU638
 2570              	.LBB33:
 183:Core/Src/printf.c **** }
 2571              		.loc 1 183 3 view .LVU639
 183:Core/Src/printf.c **** }
 2572              		.loc 1 183 22 is_stmt 0 view .LVU640
 2573 00da A2F13003 		sub	r3, r2, #48
 2574 00de DBB2     		uxtb	r3, r3
 2575              	.LVL307:
 183:Core/Src/printf.c **** }
 2576              		.loc 1 183 22 view .LVU641
 2577              	.LBE33:
 2578              	.LBE32:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2579              		.loc 1 616 8 view .LVU642
 2580 00e0 092B     		cmp	r3, #9
 2581 00e2 18D9     		bls	.L307
 619:Core/Src/printf.c ****       const int w = va_arg(va, int);
 2582              		.loc 1 619 10 is_stmt 1 view .LVU643
 619:Core/Src/printf.c ****       const int w = va_arg(va, int);
 2583              		.loc 1 619 13 is_stmt 0 view .LVU644
 2584 00e4 2A2A     		cmp	r2, #42
 2585 00e6 1BD0     		beq	.L308
 615:Core/Src/printf.c ****     if (_is_digit(*format)) {
 2586              		.loc 1 615 11 view .LVU645
 2587 00e8 DDF82CB0 		ldr	fp, [sp, #44]
 2588              	.LVL308:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 67


 2589              	.L216:
 632:Core/Src/printf.c ****     if (*format == '.') {
 2590              		.loc 1 632 5 is_stmt 1 view .LVU646
 633:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2591              		.loc 1 633 5 view .LVU647
 633:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2592              		.loc 1 633 9 is_stmt 0 view .LVU648
 2593 00ec 0F9B     		ldr	r3, [sp, #60]
 2594 00ee 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 633:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2595              		.loc 1 633 8 view .LVU649
 2596 00f0 2E2A     		cmp	r2, #46
 2597 00f2 25D0     		beq	.L309
 2598              	.LVL309:
 2599              	.L219:
 647:Core/Src/printf.c ****       case 'l' :
 2600              		.loc 1 647 5 is_stmt 1 view .LVU650
 647:Core/Src/printf.c ****       case 'l' :
 2601              		.loc 1 647 13 is_stmt 0 view .LVU651
 2602 00f4 0F9A     		ldr	r2, [sp, #60]
 2603 00f6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 647:Core/Src/printf.c ****       case 'l' :
 2604              		.loc 1 647 5 view .LVU652
 2605 00f8 683B     		subs	r3, r3, #104
 2606 00fa 122B     		cmp	r3, #18
 2607 00fc 5CD8     		bhi	.L221
 2608 00fe DFE803F0 		tbb	[pc, r3]
 2609              	.L223:
 2610 0102 49       		.byte	(.L227-.L223)/2
 2611 0103 5B       		.byte	(.L221-.L223)/2
 2612 0104 AA       		.byte	(.L226-.L223)/2
 2613 0105 5B       		.byte	(.L221-.L223)/2
 2614 0106 3B       		.byte	(.L225-.L223)/2
 2615 0107 5B       		.byte	(.L221-.L223)/2
 2616 0108 5B       		.byte	(.L221-.L223)/2
 2617 0109 5B       		.byte	(.L221-.L223)/2
 2618 010a 5B       		.byte	(.L221-.L223)/2
 2619 010b 5B       		.byte	(.L221-.L223)/2
 2620 010c 5B       		.byte	(.L221-.L223)/2
 2621 010d 5B       		.byte	(.L221-.L223)/2
 2622 010e 57       		.byte	(.L224-.L223)/2
 2623 010f 5B       		.byte	(.L221-.L223)/2
 2624 0110 5B       		.byte	(.L221-.L223)/2
 2625 0111 5B       		.byte	(.L221-.L223)/2
 2626 0112 5B       		.byte	(.L221-.L223)/2
 2627 0113 5B       		.byte	(.L221-.L223)/2
 2628 0114 AF       		.byte	(.L222-.L223)/2
 2629              	.LVL310:
 2630 0115 00       		.p2align 1
 2631              	.L307:
 617:Core/Src/printf.c ****     }
 2632              		.loc 1 617 7 is_stmt 1 view .LVU653
 617:Core/Src/printf.c ****     }
 2633              		.loc 1 617 15 is_stmt 0 view .LVU654
 2634 0116 0FA8     		add	r0, sp, #60
 2635 0118 FFF7FEFF 		bl	_atoi
 2636              	.LVL311:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 68


 2637 011c 8346     		mov	fp, r0
 2638              	.LVL312:
 617:Core/Src/printf.c ****     }
 2639              		.loc 1 617 15 view .LVU655
 2640 011e E5E7     		b	.L216
 2641              	.LVL313:
 2642              	.L308:
 2643              	.LBB34:
 620:Core/Src/printf.c ****       if (w < 0) {
 2644              		.loc 1 620 7 is_stmt 1 view .LVU656
 620:Core/Src/printf.c ****       if (w < 0) {
 2645              		.loc 1 620 17 is_stmt 0 view .LVU657
 2646 0120 1A9B     		ldr	r3, [sp, #104]
 2647 0122 1A1D     		adds	r2, r3, #4
 2648 0124 1A92     		str	r2, [sp, #104]
 2649 0126 1B68     		ldr	r3, [r3]
 621:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 2650              		.loc 1 621 7 is_stmt 1 view .LVU658
 621:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 2651              		.loc 1 621 10 is_stmt 0 view .LVU659
 2652 0128 002B     		cmp	r3, #0
 2653 012a 04DB     		blt	.L310
 626:Core/Src/printf.c ****       }
 2654              		.loc 1 626 9 is_stmt 1 view .LVU660
 626:Core/Src/printf.c ****       }
 2655              		.loc 1 626 15 is_stmt 0 view .LVU661
 2656 012c 9B46     		mov	fp, r3
 2657              	.LVL314:
 2658              	.L218:
 628:Core/Src/printf.c ****     }
 2659              		.loc 1 628 7 is_stmt 1 view .LVU662
 628:Core/Src/printf.c ****     }
 2660              		.loc 1 628 13 is_stmt 0 view .LVU663
 2661 012e 0F9B     		ldr	r3, [sp, #60]
 2662 0130 0133     		adds	r3, r3, #1
 2663 0132 0F93     		str	r3, [sp, #60]
 2664 0134 DAE7     		b	.L216
 2665              	.LVL315:
 2666              	.L310:
 622:Core/Src/printf.c ****         width = (unsigned int)-w;
 2667              		.loc 1 622 9 is_stmt 1 view .LVU664
 622:Core/Src/printf.c ****         width = (unsigned int)-w;
 2668              		.loc 1 622 15 is_stmt 0 view .LVU665
 2669 0136 45F00205 		orr	r5, r5, #2
 2670              	.LVL316:
 623:Core/Src/printf.c ****       }
 2671              		.loc 1 623 9 is_stmt 1 view .LVU666
 623:Core/Src/printf.c ****       }
 2672              		.loc 1 623 31 is_stmt 0 view .LVU667
 2673 013a C3F1000B 		rsb	fp, r3, #0
 2674              	.LVL317:
 623:Core/Src/printf.c ****       }
 2675              		.loc 1 623 31 view .LVU668
 2676 013e F6E7     		b	.L218
 2677              	.LVL318:
 2678              	.L309:
 623:Core/Src/printf.c ****       }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 69


 2679              		.loc 1 623 31 view .LVU669
 2680              	.LBE34:
 634:Core/Src/printf.c ****       format++;
 2681              		.loc 1 634 7 is_stmt 1 view .LVU670
 634:Core/Src/printf.c ****       format++;
 2682              		.loc 1 634 13 is_stmt 0 view .LVU671
 2683 0140 45F48065 		orr	r5, r5, #1024
 2684              	.LVL319:
 635:Core/Src/printf.c ****       if (_is_digit(*format)) {
 2685              		.loc 1 635 7 is_stmt 1 view .LVU672
 635:Core/Src/printf.c ****       if (_is_digit(*format)) {
 2686              		.loc 1 635 13 is_stmt 0 view .LVU673
 2687 0144 5A1C     		adds	r2, r3, #1
 2688 0146 0F92     		str	r2, [sp, #60]
 636:Core/Src/printf.c ****         precision = _atoi(&format);
 2689              		.loc 1 636 7 is_stmt 1 view .LVU674
 636:Core/Src/printf.c ****         precision = _atoi(&format);
 2690              		.loc 1 636 11 is_stmt 0 view .LVU675
 2691 0148 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2692              	.LVL320:
 2693              	.LBB35:
 2694              	.LBI35:
 181:Core/Src/printf.c **** {
 2695              		.loc 1 181 20 is_stmt 1 view .LVU676
 2696              	.LBB36:
 183:Core/Src/printf.c **** }
 2697              		.loc 1 183 3 view .LVU677
 183:Core/Src/printf.c **** }
 2698              		.loc 1 183 22 is_stmt 0 view .LVU678
 2699 014a A2F13003 		sub	r3, r2, #48
 2700 014e DBB2     		uxtb	r3, r3
 2701              	.LVL321:
 183:Core/Src/printf.c **** }
 2702              		.loc 1 183 22 view .LVU679
 2703              	.LBE36:
 2704              	.LBE35:
 636:Core/Src/printf.c ****         precision = _atoi(&format);
 2705              		.loc 1 636 10 view .LVU680
 2706 0150 092B     		cmp	r3, #9
 2707 0152 0CD9     		bls	.L311
 639:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 2708              		.loc 1 639 12 is_stmt 1 view .LVU681
 639:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 2709              		.loc 1 639 15 is_stmt 0 view .LVU682
 2710 0154 2A2A     		cmp	r2, #42
 2711 0156 CDD1     		bne	.L219
 2712              	.LBB37:
 640:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 2713              		.loc 1 640 9 is_stmt 1 view .LVU683
 640:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 2714              		.loc 1 640 19 is_stmt 0 view .LVU684
 2715 0158 1A9B     		ldr	r3, [sp, #104]
 2716 015a 1A1D     		adds	r2, r3, #4
 2717 015c 1A92     		str	r2, [sp, #104]
 2718 015e 1C68     		ldr	r4, [r3]
 641:Core/Src/printf.c ****         format++;
 2719              		.loc 1 641 9 is_stmt 1 view .LVU685
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 70


 641:Core/Src/printf.c ****         format++;
 2720              		.loc 1 641 51 is_stmt 0 view .LVU686
 2721 0160 24EAE473 		bic	r3, r4, r4, asr #31
 2722 0164 0B93     		str	r3, [sp, #44]
 2723              	.LVL322:
 642:Core/Src/printf.c ****       }
 2724              		.loc 1 642 9 is_stmt 1 view .LVU687
 642:Core/Src/printf.c ****       }
 2725              		.loc 1 642 15 is_stmt 0 view .LVU688
 2726 0166 0F9B     		ldr	r3, [sp, #60]
 2727              	.LVL323:
 642:Core/Src/printf.c ****       }
 2728              		.loc 1 642 15 view .LVU689
 2729 0168 0133     		adds	r3, r3, #1
 2730 016a 0F93     		str	r3, [sp, #60]
 2731 016c C2E7     		b	.L219
 2732              	.LVL324:
 2733              	.L311:
 642:Core/Src/printf.c ****       }
 2734              		.loc 1 642 15 view .LVU690
 2735              	.LBE37:
 637:Core/Src/printf.c ****       }
 2736              		.loc 1 637 9 is_stmt 1 view .LVU691
 637:Core/Src/printf.c ****       }
 2737              		.loc 1 637 21 is_stmt 0 view .LVU692
 2738 016e 0FA8     		add	r0, sp, #60
 2739 0170 FFF7FEFF 		bl	_atoi
 2740              	.LVL325:
 2741 0174 0B90     		str	r0, [sp, #44]
 2742              	.LVL326:
 637:Core/Src/printf.c ****       }
 2743              		.loc 1 637 21 view .LVU693
 2744 0176 BDE7     		b	.L219
 2745              	.LVL327:
 2746              	.L225:
 649:Core/Src/printf.c ****         format++;
 2747              		.loc 1 649 9 is_stmt 1 view .LVU694
 649:Core/Src/printf.c ****         format++;
 2748              		.loc 1 649 15 is_stmt 0 view .LVU695
 2749 0178 45F48071 		orr	r1, r5, #256
 2750              	.LVL328:
 650:Core/Src/printf.c ****         if (*format == 'l') {
 2751              		.loc 1 650 9 is_stmt 1 view .LVU696
 650:Core/Src/printf.c ****         if (*format == 'l') {
 2752              		.loc 1 650 15 is_stmt 0 view .LVU697
 2753 017c 531C     		adds	r3, r2, #1
 2754 017e 0F93     		str	r3, [sp, #60]
 651:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 2755              		.loc 1 651 9 is_stmt 1 view .LVU698
 651:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 2756              		.loc 1 651 13 is_stmt 0 view .LVU699
 2757 0180 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 651:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 2758              		.loc 1 651 12 view .LVU700
 2759 0182 6C2B     		cmp	r3, #108
 2760 0184 01D0     		beq	.L312
 649:Core/Src/printf.c ****         format++;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 71


 2761              		.loc 1 649 15 view .LVU701
 2762 0186 0D46     		mov	r5, r1
 2763 0188 16E0     		b	.L221
 2764              	.L312:
 652:Core/Src/printf.c ****           format++;
 2765              		.loc 1 652 11 is_stmt 1 view .LVU702
 652:Core/Src/printf.c ****           format++;
 2766              		.loc 1 652 17 is_stmt 0 view .LVU703
 2767 018a 45F44075 		orr	r5, r5, #768
 2768              	.LVL329:
 653:Core/Src/printf.c ****         }
 2769              		.loc 1 653 11 is_stmt 1 view .LVU704
 653:Core/Src/printf.c ****         }
 2770              		.loc 1 653 17 is_stmt 0 view .LVU705
 2771 018e 0232     		adds	r2, r2, #2
 2772 0190 0F92     		str	r2, [sp, #60]
 2773 0192 11E0     		b	.L221
 2774              	.L227:
 657:Core/Src/printf.c ****         format++;
 2775              		.loc 1 657 9 is_stmt 1 view .LVU706
 657:Core/Src/printf.c ****         format++;
 2776              		.loc 1 657 15 is_stmt 0 view .LVU707
 2777 0194 45F08001 		orr	r1, r5, #128
 2778              	.LVL330:
 658:Core/Src/printf.c ****         if (*format == 'h') {
 2779              		.loc 1 658 9 is_stmt 1 view .LVU708
 658:Core/Src/printf.c ****         if (*format == 'h') {
 2780              		.loc 1 658 15 is_stmt 0 view .LVU709
 2781 0198 531C     		adds	r3, r2, #1
 2782 019a 0F93     		str	r3, [sp, #60]
 659:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 2783              		.loc 1 659 9 is_stmt 1 view .LVU710
 659:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 2784              		.loc 1 659 13 is_stmt 0 view .LVU711
 2785 019c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 659:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 2786              		.loc 1 659 12 view .LVU712
 2787 019e 682B     		cmp	r3, #104
 2788 01a0 01D0     		beq	.L313
 657:Core/Src/printf.c ****         format++;
 2789              		.loc 1 657 15 view .LVU713
 2790 01a2 0D46     		mov	r5, r1
 2791 01a4 08E0     		b	.L221
 2792              	.L313:
 660:Core/Src/printf.c ****           format++;
 2793              		.loc 1 660 11 is_stmt 1 view .LVU714
 660:Core/Src/printf.c ****           format++;
 2794              		.loc 1 660 17 is_stmt 0 view .LVU715
 2795 01a6 45F0C005 		orr	r5, r5, #192
 2796              	.LVL331:
 661:Core/Src/printf.c ****         }
 2797              		.loc 1 661 11 is_stmt 1 view .LVU716
 661:Core/Src/printf.c ****         }
 2798              		.loc 1 661 17 is_stmt 0 view .LVU717
 2799 01aa 0232     		adds	r2, r2, #2
 2800 01ac 0F92     		str	r2, [sp, #60]
 2801 01ae 03E0     		b	.L221
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 72


 2802              	.L224:
 666:Core/Src/printf.c ****         format++;
 2803              		.loc 1 666 9 is_stmt 1 view .LVU718
 666:Core/Src/printf.c ****         format++;
 2804              		.loc 1 666 15 is_stmt 0 view .LVU719
 2805 01b0 45F48075 		orr	r5, r5, #256
 2806              	.LVL332:
 667:Core/Src/printf.c ****         break;
 2807              		.loc 1 667 9 is_stmt 1 view .LVU720
 667:Core/Src/printf.c ****         break;
 2808              		.loc 1 667 15 is_stmt 0 view .LVU721
 2809 01b4 0132     		adds	r2, r2, #1
 2810 01b6 0F92     		str	r2, [sp, #60]
 668:Core/Src/printf.c **** #endif
 2811              		.loc 1 668 9 is_stmt 1 view .LVU722
 2812              	.L221:
 683:Core/Src/printf.c ****       case 'd' :
 2813              		.loc 1 683 5 view .LVU723
 683:Core/Src/printf.c ****       case 'd' :
 2814              		.loc 1 683 13 is_stmt 0 view .LVU724
 2815 01b8 0F9B     		ldr	r3, [sp, #60]
 2816 01ba 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 683:Core/Src/printf.c ****       case 'd' :
 2817              		.loc 1 683 5 view .LVU725
 2818 01bc 6728     		cmp	r0, #103
 2819 01be 54D8     		bhi	.L228
 683:Core/Src/printf.c ****       case 'd' :
 2820              		.loc 1 683 5 view .LVU726
 2821 01c0 2528     		cmp	r0, #37
 2822 01c2 67D3     		bcc	.L230
 2823 01c4 A0F12503 		sub	r3, r0, #37
 2824 01c8 422B     		cmp	r3, #66
 2825 01ca 63D8     		bhi	.L230
 2826 01cc DFE813F0 		tbh	[pc, r3, lsl #1]
 2827              	.L235:
 2828 01d0 5702     		.2byte	(.L238-.L235)/2
 2829 01d2 6200     		.2byte	(.L230-.L235)/2
 2830 01d4 6200     		.2byte	(.L230-.L235)/2
 2831 01d6 6200     		.2byte	(.L230-.L235)/2
 2832 01d8 6200     		.2byte	(.L230-.L235)/2
 2833 01da 6200     		.2byte	(.L230-.L235)/2
 2834 01dc 6200     		.2byte	(.L230-.L235)/2
 2835 01de 6200     		.2byte	(.L230-.L235)/2
 2836 01e0 6200     		.2byte	(.L230-.L235)/2
 2837 01e2 6200     		.2byte	(.L230-.L235)/2
 2838 01e4 6200     		.2byte	(.L230-.L235)/2
 2839 01e6 6200     		.2byte	(.L230-.L235)/2
 2840 01e8 6200     		.2byte	(.L230-.L235)/2
 2841 01ea 6200     		.2byte	(.L230-.L235)/2
 2842 01ec 6200     		.2byte	(.L230-.L235)/2
 2843 01ee 6200     		.2byte	(.L230-.L235)/2
 2844 01f0 6200     		.2byte	(.L230-.L235)/2
 2845 01f2 6200     		.2byte	(.L230-.L235)/2
 2846 01f4 6200     		.2byte	(.L230-.L235)/2
 2847 01f6 6200     		.2byte	(.L230-.L235)/2
 2848 01f8 6200     		.2byte	(.L230-.L235)/2
 2849 01fa 6200     		.2byte	(.L230-.L235)/2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 73


 2850 01fc 6200     		.2byte	(.L230-.L235)/2
 2851 01fe 6200     		.2byte	(.L230-.L235)/2
 2852 0200 6200     		.2byte	(.L230-.L235)/2
 2853 0202 6200     		.2byte	(.L230-.L235)/2
 2854 0204 6200     		.2byte	(.L230-.L235)/2
 2855 0206 6200     		.2byte	(.L230-.L235)/2
 2856 0208 6200     		.2byte	(.L230-.L235)/2
 2857 020a 6200     		.2byte	(.L230-.L235)/2
 2858 020c 6200     		.2byte	(.L230-.L235)/2
 2859 020e 6200     		.2byte	(.L230-.L235)/2
 2860 0210 8001     		.2byte	(.L234-.L235)/2
 2861 0212 6201     		.2byte	(.L236-.L235)/2
 2862 0214 8001     		.2byte	(.L234-.L235)/2
 2863 0216 6200     		.2byte	(.L230-.L235)/2
 2864 0218 6200     		.2byte	(.L230-.L235)/2
 2865 021a 6200     		.2byte	(.L230-.L235)/2
 2866 021c 6200     		.2byte	(.L230-.L235)/2
 2867 021e 6200     		.2byte	(.L230-.L235)/2
 2868 0220 6200     		.2byte	(.L230-.L235)/2
 2869 0222 6200     		.2byte	(.L230-.L235)/2
 2870 0224 6200     		.2byte	(.L230-.L235)/2
 2871 0226 6200     		.2byte	(.L230-.L235)/2
 2872 0228 6200     		.2byte	(.L230-.L235)/2
 2873 022a 6200     		.2byte	(.L230-.L235)/2
 2874 022c 6200     		.2byte	(.L230-.L235)/2
 2875 022e 6200     		.2byte	(.L230-.L235)/2
 2876 0230 6200     		.2byte	(.L230-.L235)/2
 2877 0232 6200     		.2byte	(.L230-.L235)/2
 2878 0234 6200     		.2byte	(.L230-.L235)/2
 2879 0236 6C00     		.2byte	(.L231-.L235)/2
 2880 0238 6200     		.2byte	(.L230-.L235)/2
 2881 023a 6200     		.2byte	(.L230-.L235)/2
 2882 023c 6200     		.2byte	(.L230-.L235)/2
 2883 023e 6200     		.2byte	(.L230-.L235)/2
 2884 0240 6200     		.2byte	(.L230-.L235)/2
 2885 0242 6200     		.2byte	(.L230-.L235)/2
 2886 0244 6200     		.2byte	(.L230-.L235)/2
 2887 0246 6200     		.2byte	(.L230-.L235)/2
 2888 0248 6200     		.2byte	(.L230-.L235)/2
 2889 024a 6C00     		.2byte	(.L231-.L235)/2
 2890 024c A501     		.2byte	(.L237-.L235)/2
 2891 024e 6C00     		.2byte	(.L231-.L235)/2
 2892 0250 8001     		.2byte	(.L234-.L235)/2
 2893 0252 6201     		.2byte	(.L236-.L235)/2
 2894 0254 8001     		.2byte	(.L234-.L235)/2
 2895              		.p2align 1
 2896              	.L226:
 671:Core/Src/printf.c ****         format++;
 2897              		.loc 1 671 9 is_stmt 1 view .LVU727
 671:Core/Src/printf.c ****         format++;
 2898              		.loc 1 671 15 is_stmt 0 view .LVU728
 2899 0256 45F40075 		orr	r5, r5, #512
 2900              	.LVL333:
 672:Core/Src/printf.c ****         break;
 2901              		.loc 1 672 9 is_stmt 1 view .LVU729
 672:Core/Src/printf.c ****         break;
 2902              		.loc 1 672 15 is_stmt 0 view .LVU730
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 74


 2903 025a 0132     		adds	r2, r2, #1
 2904 025c 0F92     		str	r2, [sp, #60]
 673:Core/Src/printf.c ****       case 'z' :
 2905              		.loc 1 673 9 is_stmt 1 view .LVU731
 2906 025e ABE7     		b	.L221
 2907              	.L222:
 675:Core/Src/printf.c ****         format++;
 2908              		.loc 1 675 9 view .LVU732
 675:Core/Src/printf.c ****         format++;
 2909              		.loc 1 675 15 is_stmt 0 view .LVU733
 2910 0260 45F48075 		orr	r5, r5, #256
 2911              	.LVL334:
 676:Core/Src/printf.c ****         break;
 2912              		.loc 1 676 9 is_stmt 1 view .LVU734
 676:Core/Src/printf.c ****         break;
 2913              		.loc 1 676 15 is_stmt 0 view .LVU735
 2914 0264 0132     		adds	r2, r2, #1
 2915 0266 0F92     		str	r2, [sp, #60]
 677:Core/Src/printf.c ****       default :
 2916              		.loc 1 677 9 is_stmt 1 view .LVU736
 2917 0268 A6E7     		b	.L221
 2918              	.L228:
 683:Core/Src/printf.c ****       case 'd' :
 2919              		.loc 1 683 5 is_stmt 0 view .LVU737
 2920 026a 7828     		cmp	r0, #120
 2921 026c 12D8     		bhi	.L230
 2922 026e 6928     		cmp	r0, #105
 2923 0270 10D3     		bcc	.L230
 2924 0272 A0F16902 		sub	r2, r0, #105
 2925 0276 D2B2     		uxtb	r2, r2
 2926 0278 0123     		movs	r3, #1
 2927 027a 9340     		lsls	r3, r3, r2
 2928 027c 49F24102 		movw	r2, #36929
 2929 0280 1342     		tst	r3, r2
 2930 0282 11D1     		bne	.L231
 2931 0284 13F0800F 		tst	r3, #128
 2932 0288 40F0DE81 		bne	.L232
 2933 028c 13F4806F 		tst	r3, #1024
 2934 0290 40F07581 		bne	.L314
 2935              	.L230:
 794:Core/Src/printf.c ****       }
 795:Core/Src/printf.c **** 
 796:Core/Src/printf.c ****       case 's' : {
 797:Core/Src/printf.c ****         const char* p = va_arg(va, char*);
 798:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 799:Core/Src/printf.c ****         // pre padding
 800:Core/Src/printf.c ****         if (flags & FLAGS_PRECISION) {
 801:Core/Src/printf.c ****           l = (l < precision ? l : precision);
 802:Core/Src/printf.c ****         }
 803:Core/Src/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 804:Core/Src/printf.c ****           while (l++ < width) {
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 806:Core/Src/printf.c ****           }
 807:Core/Src/printf.c ****         }
 808:Core/Src/printf.c ****         // string output
 809:Core/Src/printf.c ****         while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 75


 811:Core/Src/printf.c ****         }
 812:Core/Src/printf.c ****         // post padding
 813:Core/Src/printf.c ****         if (flags & FLAGS_LEFT) {
 814:Core/Src/printf.c ****           while (l++ < width) {
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 816:Core/Src/printf.c ****           }
 817:Core/Src/printf.c ****         }
 818:Core/Src/printf.c ****         format++;
 819:Core/Src/printf.c ****         break;
 820:Core/Src/printf.c ****       }
 821:Core/Src/printf.c **** 
 822:Core/Src/printf.c ****       case 'p' : {
 823:Core/Src/printf.c ****         width = sizeof(void*) * 2U;
 824:Core/Src/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 825:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 826:Core/Src/printf.c ****         const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
 827:Core/Src/printf.c ****         if (is_ll) {
 828:Core/Src/printf.c ****           idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U,
 829:Core/Src/printf.c ****         }
 830:Core/Src/printf.c ****         else {
 831:Core/Src/printf.c **** #endif
 832:Core/Src/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)),
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 834:Core/Src/printf.c ****         }
 835:Core/Src/printf.c **** #endif
 836:Core/Src/printf.c ****         format++;
 837:Core/Src/printf.c ****         break;
 838:Core/Src/printf.c ****       }
 839:Core/Src/printf.c **** 
 840:Core/Src/printf.c ****       case '%' :
 841:Core/Src/printf.c ****         out('%', buffer, idx++, maxlen);
 842:Core/Src/printf.c ****         format++;
 843:Core/Src/printf.c ****         break;
 844:Core/Src/printf.c **** 
 845:Core/Src/printf.c ****       default :
 846:Core/Src/printf.c ****         out(*format, buffer, idx++, maxlen);
 2936              		.loc 1 846 9 is_stmt 1 view .LVU738
 2937 0294 741C     		adds	r4, r6, #1
 2938              	.LVL335:
 2939              		.loc 1 846 9 is_stmt 0 view .LVU739
 2940 0296 3B46     		mov	r3, r7
 2941 0298 3246     		mov	r2, r6
 2942 029a 4946     		mov	r1, r9
 2943 029c C047     		blx	r8
 2944              	.LVL336:
 847:Core/Src/printf.c ****         format++;
 2945              		.loc 1 847 9 is_stmt 1 view .LVU740
 2946              		.loc 1 847 15 is_stmt 0 view .LVU741
 2947 029e 0F9B     		ldr	r3, [sp, #60]
 2948 02a0 0133     		adds	r3, r3, #1
 2949 02a2 0F93     		str	r3, [sp, #60]
 848:Core/Src/printf.c ****         break;
 2950              		.loc 1 848 9 is_stmt 1 view .LVU742
 846:Core/Src/printf.c ****         format++;
 2951              		.loc 1 846 9 is_stmt 0 view .LVU743
 2952 02a4 2646     		mov	r6, r4
 2953              		.loc 1 848 9 view .LVU744
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 76


 2954 02a6 B6E6     		b	.L284
 2955              	.LVL337:
 2956              	.L231:
 2957              	.LBB38:
 692:Core/Src/printf.c ****         if (*format == 'x' || *format == 'X') {
 2958              		.loc 1 692 9 is_stmt 1 view .LVU745
 693:Core/Src/printf.c ****           base = 16U;
 2959              		.loc 1 693 9 view .LVU746
 693:Core/Src/printf.c ****           base = 16U;
 2960              		.loc 1 693 12 is_stmt 0 view .LVU747
 2961 02a8 7828     		cmp	r0, #120
 2962 02aa 09D0     		beq	.L292
 2963 02ac 6228     		cmp	r0, #98
 2964 02ae 3AD0     		beq	.L293
 2965 02b0 6F28     		cmp	r0, #111
 2966 02b2 3AD0     		beq	.L294
 2967 02b4 5828     		cmp	r0, #88
 2968 02b6 3AD0     		beq	.L295
 703:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 2969              		.loc 1 703 11 is_stmt 1 view .LVU748
 2970              	.LVL338:
 704:Core/Src/printf.c ****         }
 2971              		.loc 1 704 11 view .LVU749
 704:Core/Src/printf.c ****         }
 2972              		.loc 1 704 17 is_stmt 0 view .LVU750
 2973 02b8 25F01005 		bic	r5, r5, #16
 2974              	.LVL339:
 703:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 2975              		.loc 1 703 16 view .LVU751
 2976 02bc 0A23     		movs	r3, #10
 2977 02be 00E0     		b	.L240
 2978              	.LVL340:
 2979              	.L292:
 694:Core/Src/printf.c ****         }
 2980              		.loc 1 694 16 view .LVU752
 2981 02c0 1023     		movs	r3, #16
 2982              	.L240:
 2983              	.LVL341:
 707:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 2984              		.loc 1 707 9 is_stmt 1 view .LVU753
 707:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 2985              		.loc 1 707 12 is_stmt 0 view .LVU754
 2986 02c2 5828     		cmp	r0, #88
 2987 02c4 35D0     		beq	.L315
 2988              	.L241:
 712:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2989              		.loc 1 712 9 is_stmt 1 view .LVU755
 712:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2990              		.loc 1 712 12 is_stmt 0 view .LVU756
 2991 02c6 6928     		cmp	r0, #105
 2992 02c8 03D0     		beq	.L242
 712:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2993              		.loc 1 712 30 discriminator 1 view .LVU757
 2994 02ca 6428     		cmp	r0, #100
 2995 02cc 01D0     		beq	.L242
 713:Core/Src/printf.c ****         }
 2996              		.loc 1 713 11 is_stmt 1 view .LVU758
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 77


 713:Core/Src/printf.c ****         }
 2997              		.loc 1 713 17 is_stmt 0 view .LVU759
 2998 02ce 25F00C05 		bic	r5, r5, #12
 2999              	.LVL342:
 3000              	.L242:
 717:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 3001              		.loc 1 717 9 is_stmt 1 view .LVU760
 717:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 3002              		.loc 1 717 12 is_stmt 0 view .LVU761
 3003 02d2 15F4806F 		tst	r5, #1024
 3004 02d6 01D0     		beq	.L243
 718:Core/Src/printf.c ****         }
 3005              		.loc 1 718 11 is_stmt 1 view .LVU762
 718:Core/Src/printf.c ****         }
 3006              		.loc 1 718 17 is_stmt 0 view .LVU763
 3007 02d8 25F00105 		bic	r5, r5, #1
 3008              	.LVL343:
 3009              	.L243:
 722:Core/Src/printf.c ****           // signed
 3010              		.loc 1 722 9 is_stmt 1 view .LVU764
 722:Core/Src/printf.c ****           // signed
 3011              		.loc 1 722 12 is_stmt 0 view .LVU765
 3012 02dc 6928     		cmp	r0, #105
 3013 02de 2BD0     		beq	.L244
 722:Core/Src/printf.c ****           // signed
 3014              		.loc 1 722 30 discriminator 1 view .LVU766
 3015 02e0 6428     		cmp	r0, #100
 3016 02e2 29D0     		beq	.L244
 741:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3017              		.loc 1 741 11 is_stmt 1 view .LVU767
 741:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3018              		.loc 1 741 14 is_stmt 0 view .LVU768
 3019 02e4 15F4007F 		tst	r5, #512
 3020 02e8 40F09680 		bne	.L316
 746:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 3021              		.loc 1 746 16 is_stmt 1 view .LVU769
 746:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 3022              		.loc 1 746 19 is_stmt 0 view .LVU770
 3023 02ec 15F4807F 		tst	r5, #256
 3024 02f0 40F0AE80 		bne	.L317
 3025              	.LBB39:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3026              		.loc 1 750 13 is_stmt 1 view .LVU771
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3027              		.loc 1 750 103 is_stmt 0 view .LVU772
 3028 02f4 15F0400F 		tst	r5, #64
 3029 02f8 00F0BF80 		beq	.L255
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3030              		.loc 1 750 78 view .LVU773
 3031 02fc 1A9A     		ldr	r2, [sp, #104]
 3032 02fe 111D     		adds	r1, r2, #4
 3033 0300 1A91     		str	r1, [sp, #104]
 3034 0302 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3035              	.L256:
 3036              	.LVL344:
 751:Core/Src/printf.c ****           }
 3037              		.loc 1 751 13 is_stmt 1 discriminator 8 view .LVU774
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 78


 751:Core/Src/printf.c ****           }
 3038              		.loc 1 751 19 is_stmt 0 discriminator 8 view .LVU775
 3039 0304 0595     		str	r5, [sp, #20]
 3040 0306 CDF810B0 		str	fp, [sp, #16]
 3041 030a 0B99     		ldr	r1, [sp, #44]
 3042 030c 0391     		str	r1, [sp, #12]
 3043 030e 0293     		str	r3, [sp, #8]
 3044 0310 0023     		movs	r3, #0
 3045              	.LVL345:
 751:Core/Src/printf.c ****           }
 3046              		.loc 1 751 19 discriminator 8 view .LVU776
 3047 0312 0193     		str	r3, [sp, #4]
 3048 0314 0092     		str	r2, [sp]
 3049 0316 3B46     		mov	r3, r7
 3050 0318 3246     		mov	r2, r6
 3051              	.LVL346:
 751:Core/Src/printf.c ****           }
 3052              		.loc 1 751 19 discriminator 8 view .LVU777
 3053 031a 4946     		mov	r1, r9
 3054 031c 4046     		mov	r0, r8
 3055 031e FFF7FEFF 		bl	_ntoa_long
 3056              	.LVL347:
 751:Core/Src/printf.c ****           }
 3057              		.loc 1 751 19 discriminator 8 view .LVU778
 3058 0322 0646     		mov	r6, r0
 3059              	.LVL348:
 751:Core/Src/printf.c ****           }
 3060              		.loc 1 751 19 discriminator 8 view .LVU779
 3061 0324 29E0     		b	.L248
 3062              	.LVL349:
 3063              	.L293:
 751:Core/Src/printf.c ****           }
 3064              		.loc 1 751 19 discriminator 8 view .LVU780
 3065              	.LBE39:
 693:Core/Src/printf.c ****           base = 16U;
 3066              		.loc 1 693 12 view .LVU781
 3067 0326 0223     		movs	r3, #2
 3068 0328 CBE7     		b	.L240
 3069              	.L294:
 3070 032a 0823     		movs	r3, #8
 3071 032c C9E7     		b	.L240
 3072              	.L295:
 3073 032e 1023     		movs	r3, #16
 3074 0330 C7E7     		b	.L240
 3075              	.LVL350:
 3076              	.L315:
 708:Core/Src/printf.c ****         }
 3077              		.loc 1 708 11 is_stmt 1 view .LVU782
 708:Core/Src/printf.c ****         }
 3078              		.loc 1 708 17 is_stmt 0 view .LVU783
 3079 0332 45F02005 		orr	r5, r5, #32
 3080              	.LVL351:
 708:Core/Src/printf.c ****         }
 3081              		.loc 1 708 17 view .LVU784
 3082 0336 C6E7     		b	.L241
 3083              	.L244:
 724:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 79


 3084              		.loc 1 724 11 is_stmt 1 view .LVU785
 724:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3085              		.loc 1 724 14 is_stmt 0 view .LVU786
 3086 0338 15F4007F 		tst	r5, #512
 3087 033c 21D1     		bne	.L318
 730:Core/Src/printf.c ****             const long value = va_arg(va, long);
 3088              		.loc 1 730 16 is_stmt 1 view .LVU787
 730:Core/Src/printf.c ****             const long value = va_arg(va, long);
 3089              		.loc 1 730 19 is_stmt 0 view .LVU788
 3090 033e 15F4807F 		tst	r5, #256
 3091 0342 42D1     		bne	.L319
 3092              	.LBB40:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3093              		.loc 1 735 13 is_stmt 1 view .LVU789
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3094              		.loc 1 735 76 is_stmt 0 view .LVU790
 3095 0344 15F0400F 		tst	r5, #64
 3096 0348 58D0     		beq	.L250
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3097              		.loc 1 735 60 view .LVU791
 3098 034a 1A9A     		ldr	r2, [sp, #104]
 3099 034c 111D     		adds	r1, r2, #4
 3100 034e 1A91     		str	r1, [sp, #104]
 3101 0350 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3102              	.L251:
 3103              	.LVL352:
 736:Core/Src/printf.c ****           }
 3104              		.loc 1 736 13 is_stmt 1 discriminator 8 view .LVU792
 736:Core/Src/printf.c ****           }
 3105              		.loc 1 736 56 is_stmt 0 discriminator 8 view .LVU793
 3106 0352 82EAE271 		eor	r1, r2, r2, asr #31
 3107 0356 A1EBE271 		sub	r1, r1, r2, asr #31
 736:Core/Src/printf.c ****           }
 3108              		.loc 1 736 19 discriminator 8 view .LVU794
 3109 035a 0595     		str	r5, [sp, #20]
 3110 035c CDF810B0 		str	fp, [sp, #16]
 3111 0360 0B98     		ldr	r0, [sp, #44]
 3112 0362 0390     		str	r0, [sp, #12]
 3113 0364 0293     		str	r3, [sp, #8]
 3114 0366 D20F     		lsrs	r2, r2, #31
 3115              	.LVL353:
 736:Core/Src/printf.c ****           }
 3116              		.loc 1 736 19 discriminator 8 view .LVU795
 3117 0368 0192     		str	r2, [sp, #4]
 3118 036a 0091     		str	r1, [sp]
 3119 036c 3B46     		mov	r3, r7
 3120              	.LVL354:
 736:Core/Src/printf.c ****           }
 3121              		.loc 1 736 19 discriminator 8 view .LVU796
 3122 036e 3246     		mov	r2, r6
 3123 0370 4946     		mov	r1, r9
 3124 0372 4046     		mov	r0, r8
 3125 0374 FFF7FEFF 		bl	_ntoa_long
 3126              	.LVL355:
 736:Core/Src/printf.c ****           }
 3127              		.loc 1 736 19 discriminator 8 view .LVU797
 3128 0378 0646     		mov	r6, r0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 80


 3129              	.LVL356:
 3130              	.L248:
 736:Core/Src/printf.c ****           }
 3131              		.loc 1 736 19 discriminator 8 view .LVU798
 3132              	.LBE40:
 754:Core/Src/printf.c ****         break;
 3133              		.loc 1 754 9 is_stmt 1 view .LVU799
 754:Core/Src/printf.c ****         break;
 3134              		.loc 1 754 15 is_stmt 0 view .LVU800
 3135 037a 0F9B     		ldr	r3, [sp, #60]
 3136 037c 0133     		adds	r3, r3, #1
 3137 037e 0F93     		str	r3, [sp, #60]
 755:Core/Src/printf.c ****       }
 3138              		.loc 1 755 9 is_stmt 1 view .LVU801
 3139 0380 49E6     		b	.L284
 3140              	.LVL357:
 3141              	.L318:
 3142              	.LBB41:
 726:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 3143              		.loc 1 726 13 view .LVU802
 726:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 3144              		.loc 1 726 29 is_stmt 0 view .LVU803
 3145 0382 1A9A     		ldr	r2, [sp, #104]
 3146 0384 0732     		adds	r2, r2, #7
 3147 0386 22F00702 		bic	r2, r2, #7
 3148 038a 02F10801 		add	r1, r2, #8
 3149 038e 1A91     		str	r1, [sp, #104]
 3150 0390 5168     		ldr	r1, [r2, #4]
 727:Core/Src/printf.c **** #endif
 3151              		.loc 1 727 13 is_stmt 1 view .LVU804
 727:Core/Src/printf.c **** #endif
 3152              		.loc 1 727 61 is_stmt 0 view .LVU805
 3153 0392 1268     		ldr	r2, [r2]
 3154 0394 0846     		mov	r0, r1
 3155 0396 0029     		cmp	r1, #0
 3156 0398 13DB     		blt	.L320
 3157              	.L247:
 727:Core/Src/printf.c **** #endif
 3158              		.loc 1 727 19 view .LVU806
 3159 039a 0895     		str	r5, [sp, #32]
 3160 039c CDF81CB0 		str	fp, [sp, #28]
 3161 03a0 0B9C     		ldr	r4, [sp, #44]
 3162 03a2 0694     		str	r4, [sp, #24]
 3163 03a4 0493     		str	r3, [sp, #16]
 3164 03a6 0023     		movs	r3, #0
 3165              	.LVL358:
 727:Core/Src/printf.c **** #endif
 3166              		.loc 1 727 19 view .LVU807
 3167 03a8 0593     		str	r3, [sp, #20]
 3168 03aa C90F     		lsrs	r1, r1, #31
 3169 03ac 0291     		str	r1, [sp, #8]
 3170 03ae 0092     		str	r2, [sp]
 3171 03b0 0190     		str	r0, [sp, #4]
 3172 03b2 3B46     		mov	r3, r7
 3173 03b4 3246     		mov	r2, r6
 3174 03b6 4946     		mov	r1, r9
 3175 03b8 4046     		mov	r0, r8
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 81


 3176 03ba FFF7FEFF 		bl	_ntoa_long_long
 3177              	.LVL359:
 727:Core/Src/printf.c **** #endif
 3178              		.loc 1 727 19 view .LVU808
 3179 03be 0646     		mov	r6, r0
 3180              	.LVL360:
 727:Core/Src/printf.c **** #endif
 3181              		.loc 1 727 19 view .LVU809
 3182              	.LBE41:
 3183 03c0 DBE7     		b	.L248
 3184              	.LVL361:
 3185              	.L320:
 3186              	.LBB42:
 727:Core/Src/printf.c **** #endif
 3187              		.loc 1 727 61 view .LVU810
 3188 03c2 5242     		negs	r2, r2
 3189 03c4 61EB4100 		sbc	r0, r1, r1, lsl #1
 3190 03c8 E7E7     		b	.L247
 3191              	.L319:
 3192              	.LBE42:
 3193              	.LBB43:
 731:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 3194              		.loc 1 731 13 is_stmt 1 view .LVU811
 731:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 3195              		.loc 1 731 24 is_stmt 0 view .LVU812
 3196 03ca 1A9A     		ldr	r2, [sp, #104]
 3197 03cc 111D     		adds	r1, r2, #4
 3198 03ce 1A91     		str	r1, [sp, #104]
 3199 03d0 1268     		ldr	r2, [r2]
 732:Core/Src/printf.c ****           }
 3200              		.loc 1 732 13 is_stmt 1 view .LVU813
 732:Core/Src/printf.c ****           }
 3201              		.loc 1 732 56 is_stmt 0 view .LVU814
 3202 03d2 82EAE271 		eor	r1, r2, r2, asr #31
 3203 03d6 A1EBE271 		sub	r1, r1, r2, asr #31
 732:Core/Src/printf.c ****           }
 3204              		.loc 1 732 19 view .LVU815
 3205 03da 0595     		str	r5, [sp, #20]
 3206 03dc CDF810B0 		str	fp, [sp, #16]
 3207 03e0 0B98     		ldr	r0, [sp, #44]
 3208 03e2 0390     		str	r0, [sp, #12]
 3209 03e4 0293     		str	r3, [sp, #8]
 3210 03e6 D20F     		lsrs	r2, r2, #31
 3211 03e8 0192     		str	r2, [sp, #4]
 3212 03ea 0091     		str	r1, [sp]
 3213 03ec 3B46     		mov	r3, r7
 3214              	.LVL362:
 732:Core/Src/printf.c ****           }
 3215              		.loc 1 732 19 view .LVU816
 3216 03ee 3246     		mov	r2, r6
 3217 03f0 4946     		mov	r1, r9
 3218 03f2 4046     		mov	r0, r8
 3219 03f4 FFF7FEFF 		bl	_ntoa_long
 3220              	.LVL363:
 732:Core/Src/printf.c ****           }
 3221              		.loc 1 732 19 view .LVU817
 3222 03f8 0646     		mov	r6, r0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 82


 3223              	.LVL364:
 732:Core/Src/printf.c ****           }
 3224              		.loc 1 732 19 view .LVU818
 3225              	.LBE43:
 3226 03fa BEE7     		b	.L248
 3227              	.LVL365:
 3228              	.L250:
 3229              	.LBB44:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3230              		.loc 1 735 129 discriminator 2 view .LVU819
 3231 03fc 15F0800F 		tst	r5, #128
 3232 0400 05D0     		beq	.L252
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3233              		.loc 1 735 113 view .LVU820
 3234 0402 1A9A     		ldr	r2, [sp, #104]
 3235 0404 111D     		adds	r1, r2, #4
 3236 0406 1A91     		str	r1, [sp, #104]
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3237              		.loc 1 735 102 view .LVU821
 3238 0408 B2F90020 		ldrsh	r2, [r2]
 3239 040c A1E7     		b	.L251
 3240              	.L252:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3241              		.loc 1 735 129 view .LVU822
 3242 040e 1A9A     		ldr	r2, [sp, #104]
 3243 0410 111D     		adds	r1, r2, #4
 3244 0412 1A91     		str	r1, [sp, #104]
 3245 0414 1268     		ldr	r2, [r2]
 3246 0416 9CE7     		b	.L251
 3247              	.L316:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3248              		.loc 1 735 129 view .LVU823
 3249              	.LBE44:
 743:Core/Src/printf.c **** #endif
 3250              		.loc 1 743 13 is_stmt 1 view .LVU824
 743:Core/Src/printf.c **** #endif
 3251              		.loc 1 743 19 is_stmt 0 view .LVU825
 3252 0418 1A9A     		ldr	r2, [sp, #104]
 3253 041a 0732     		adds	r2, r2, #7
 3254 041c 22F00702 		bic	r2, r2, #7
 3255 0420 02F10801 		add	r1, r2, #8
 3256 0424 1A91     		str	r1, [sp, #104]
 3257 0426 0895     		str	r5, [sp, #32]
 3258 0428 CDF81CB0 		str	fp, [sp, #28]
 3259 042c 0B99     		ldr	r1, [sp, #44]
 3260 042e 0691     		str	r1, [sp, #24]
 3261 0430 0021     		movs	r1, #0
 3262 0432 0493     		str	r3, [sp, #16]
 3263 0434 0591     		str	r1, [sp, #20]
 3264 0436 0291     		str	r1, [sp, #8]
 3265 0438 D2E90023 		ldrd	r2, [r2]
 3266 043c CDE90023 		strd	r2, [sp]
 3267 0440 3B46     		mov	r3, r7
 3268              	.LVL366:
 743:Core/Src/printf.c **** #endif
 3269              		.loc 1 743 19 view .LVU826
 3270 0442 3246     		mov	r2, r6
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 83


 3271 0444 4946     		mov	r1, r9
 3272 0446 4046     		mov	r0, r8
 3273 0448 FFF7FEFF 		bl	_ntoa_long_long
 3274              	.LVL367:
 743:Core/Src/printf.c **** #endif
 3275              		.loc 1 743 19 view .LVU827
 3276 044c 0646     		mov	r6, r0
 3277              	.LVL368:
 743:Core/Src/printf.c **** #endif
 3278              		.loc 1 743 19 view .LVU828
 3279 044e 94E7     		b	.L248
 3280              	.LVL369:
 3281              	.L317:
 747:Core/Src/printf.c ****           }
 3282              		.loc 1 747 13 is_stmt 1 view .LVU829
 747:Core/Src/printf.c ****           }
 3283              		.loc 1 747 19 is_stmt 0 view .LVU830
 3284 0450 1A9A     		ldr	r2, [sp, #104]
 3285 0452 111D     		adds	r1, r2, #4
 3286 0454 1A91     		str	r1, [sp, #104]
 3287 0456 0595     		str	r5, [sp, #20]
 3288 0458 CDF810B0 		str	fp, [sp, #16]
 3289 045c 0B99     		ldr	r1, [sp, #44]
 3290 045e 0391     		str	r1, [sp, #12]
 3291 0460 0293     		str	r3, [sp, #8]
 3292 0462 0023     		movs	r3, #0
 3293              	.LVL370:
 747:Core/Src/printf.c ****           }
 3294              		.loc 1 747 19 view .LVU831
 3295 0464 0193     		str	r3, [sp, #4]
 3296 0466 1368     		ldr	r3, [r2]
 3297 0468 0093     		str	r3, [sp]
 3298 046a 3B46     		mov	r3, r7
 3299 046c 3246     		mov	r2, r6
 3300 046e 4946     		mov	r1, r9
 3301 0470 4046     		mov	r0, r8
 3302 0472 FFF7FEFF 		bl	_ntoa_long
 3303              	.LVL371:
 747:Core/Src/printf.c ****           }
 3304              		.loc 1 747 19 view .LVU832
 3305 0476 0646     		mov	r6, r0
 3306              	.LVL372:
 747:Core/Src/printf.c ****           }
 3307              		.loc 1 747 19 view .LVU833
 3308 0478 7FE7     		b	.L248
 3309              	.LVL373:
 3310              	.L255:
 3311              	.LBB45:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3312              		.loc 1 750 174 discriminator 2 view .LVU834
 3313 047a 15F0800F 		tst	r5, #128
 3314 047e 04D0     		beq	.L257
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3315              		.loc 1 750 149 view .LVU835
 3316 0480 1A9A     		ldr	r2, [sp, #104]
 3317 0482 111D     		adds	r1, r2, #4
 3318 0484 1A91     		str	r1, [sp, #104]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 84


 3319 0486 1288     		ldrh	r2, [r2]
 3320 0488 3CE7     		b	.L256
 3321              	.L257:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3322              		.loc 1 750 174 view .LVU836
 3323 048a 1A9A     		ldr	r2, [sp, #104]
 3324 048c 111D     		adds	r1, r2, #4
 3325 048e 1A91     		str	r1, [sp, #104]
 3326 0490 1268     		ldr	r2, [r2]
 3327 0492 37E7     		b	.L256
 3328              	.LVL374:
 3329              	.L236:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3330              		.loc 1 750 174 view .LVU837
 3331              	.LBE45:
 3332              	.LBE38:
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3333              		.loc 1 760 9 is_stmt 1 view .LVU838
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3334              		.loc 1 760 12 is_stmt 0 view .LVU839
 3335 0494 4628     		cmp	r0, #70
 3336 0496 18D0     		beq	.L321
 3337              	.L258:
 761:Core/Src/printf.c ****         format++;
 3338              		.loc 1 761 9 is_stmt 1 view .LVU840
 761:Core/Src/printf.c ****         format++;
 3339              		.loc 1 761 15 is_stmt 0 view .LVU841
 3340 0498 1A9B     		ldr	r3, [sp, #104]
 3341 049a 0733     		adds	r3, r3, #7
 3342 049c 23F00703 		bic	r3, r3, #7
 3343 04a0 03F10802 		add	r2, r3, #8
 3344 04a4 1A92     		str	r2, [sp, #104]
 3345 04a6 93ED000B 		vldr.64	d0, [r3]
 3346 04aa 0295     		str	r5, [sp, #8]
 3347 04ac CDF804B0 		str	fp, [sp, #4]
 3348 04b0 0B9B     		ldr	r3, [sp, #44]
 3349 04b2 0093     		str	r3, [sp]
 3350 04b4 3B46     		mov	r3, r7
 3351 04b6 3246     		mov	r2, r6
 3352 04b8 4946     		mov	r1, r9
 3353 04ba 4046     		mov	r0, r8
 3354 04bc FFF7FEFF 		bl	_ftoa
 3355              	.LVL375:
 3356 04c0 0646     		mov	r6, r0
 3357              	.LVL376:
 762:Core/Src/printf.c ****         break;
 3358              		.loc 1 762 9 is_stmt 1 view .LVU842
 762:Core/Src/printf.c ****         break;
 3359              		.loc 1 762 15 is_stmt 0 view .LVU843
 3360 04c2 0F9B     		ldr	r3, [sp, #60]
 3361 04c4 0133     		adds	r3, r3, #1
 3362 04c6 0F93     		str	r3, [sp, #60]
 763:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 3363              		.loc 1 763 9 is_stmt 1 view .LVU844
 3364 04c8 A5E5     		b	.L284
 3365              	.LVL377:
 3366              	.L321:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 85


 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3367              		.loc 1 760 29 discriminator 1 view .LVU845
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3368              		.loc 1 760 35 is_stmt 0 discriminator 1 view .LVU846
 3369 04ca 45F02005 		orr	r5, r5, #32
 3370              	.LVL378:
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3371              		.loc 1 760 35 discriminator 1 view .LVU847
 3372 04ce E3E7     		b	.L258
 3373              	.L234:
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3374              		.loc 1 769 9 is_stmt 1 view .LVU848
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3375              		.loc 1 769 12 is_stmt 0 view .LVU849
 3376 04d0 6728     		cmp	r0, #103
 3377 04d2 01D0     		beq	.L259
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3378              		.loc 1 769 29 discriminator 2 view .LVU850
 3379 04d4 4728     		cmp	r0, #71
 3380 04d6 01D1     		bne	.L260
 3381              	.L259:
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3382              		.loc 1 769 49 is_stmt 1 discriminator 3 view .LVU851
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3383              		.loc 1 769 55 is_stmt 0 discriminator 3 view .LVU852
 3384 04d8 45F40065 		orr	r5, r5, #2048
 3385              	.LVL379:
 3386              	.L260:
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3387              		.loc 1 770 9 is_stmt 1 view .LVU853
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3388              		.loc 1 770 12 is_stmt 0 view .LVU854
 3389 04dc 4528     		cmp	r0, #69
 3390 04de 01D0     		beq	.L261
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3391              		.loc 1 770 29 discriminator 2 view .LVU855
 3392 04e0 4728     		cmp	r0, #71
 3393 04e2 01D1     		bne	.L262
 3394              	.L261:
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3395              		.loc 1 770 49 is_stmt 1 discriminator 3 view .LVU856
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3396              		.loc 1 770 55 is_stmt 0 discriminator 3 view .LVU857
 3397 04e4 45F02005 		orr	r5, r5, #32
 3398              	.LVL380:
 3399              	.L262:
 771:Core/Src/printf.c ****         format++;
 3400              		.loc 1 771 9 is_stmt 1 view .LVU858
 771:Core/Src/printf.c ****         format++;
 3401              		.loc 1 771 15 is_stmt 0 view .LVU859
 3402 04e8 1A9B     		ldr	r3, [sp, #104]
 3403 04ea 0733     		adds	r3, r3, #7
 3404 04ec 23F00703 		bic	r3, r3, #7
 3405 04f0 03F10802 		add	r2, r3, #8
 3406 04f4 1A92     		str	r2, [sp, #104]
 3407 04f6 93ED000B 		vldr.64	d0, [r3]
 3408 04fa 0295     		str	r5, [sp, #8]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 86


 3409 04fc CDF804B0 		str	fp, [sp, #4]
 3410 0500 0B9B     		ldr	r3, [sp, #44]
 3411 0502 0093     		str	r3, [sp]
 3412 0504 3B46     		mov	r3, r7
 3413 0506 3246     		mov	r2, r6
 3414 0508 4946     		mov	r1, r9
 3415 050a 4046     		mov	r0, r8
 3416 050c FFF7FEFF 		bl	_etoa
 3417              	.LVL381:
 3418 0510 0646     		mov	r6, r0
 3419              	.LVL382:
 772:Core/Src/printf.c ****         break;
 3420              		.loc 1 772 9 is_stmt 1 view .LVU860
 772:Core/Src/printf.c ****         break;
 3421              		.loc 1 772 15 is_stmt 0 view .LVU861
 3422 0512 0F9B     		ldr	r3, [sp, #60]
 3423 0514 0133     		adds	r3, r3, #1
 3424 0516 0F93     		str	r3, [sp, #60]
 773:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 3425              		.loc 1 773 9 is_stmt 1 view .LVU862
 3426 0518 7DE5     		b	.L284
 3427              	.LVL383:
 3428              	.L237:
 3429              	.LBB46:
 777:Core/Src/printf.c ****         // pre padding
 3430              		.loc 1 777 9 view .LVU863
 779:Core/Src/printf.c ****           while (l++ < width) {
 3431              		.loc 1 779 9 view .LVU864
 779:Core/Src/printf.c ****           while (l++ < width) {
 3432              		.loc 1 779 12 is_stmt 0 view .LVU865
 3433 051a 15F00205 		ands	r5, r5, #2
 3434              	.LVL384:
 779:Core/Src/printf.c ****           while (l++ < width) {
 3435              		.loc 1 779 12 view .LVU866
 3436 051e 1DD0     		beq	.L296
 777:Core/Src/printf.c ****         // pre padding
 3437              		.loc 1 777 22 view .LVU867
 3438 0520 0124     		movs	r4, #1
 3439              	.LVL385:
 3440              	.L264:
 785:Core/Src/printf.c ****         // post padding
 3441              		.loc 1 785 9 is_stmt 1 view .LVU868
 785:Core/Src/printf.c ****         // post padding
 3442              		.loc 1 785 19 is_stmt 0 view .LVU869
 3443 0522 1A98     		ldr	r0, [sp, #104]
 3444 0524 031D     		adds	r3, r0, #4
 3445 0526 1A93     		str	r3, [sp, #104]
 785:Core/Src/printf.c ****         // post padding
 3446              		.loc 1 785 9 view .LVU870
 3447 0528 06F1010A 		add	r10, r6, #1
 3448              	.LVL386:
 785:Core/Src/printf.c ****         // post padding
 3449              		.loc 1 785 9 view .LVU871
 3450 052c 3B46     		mov	r3, r7
 3451 052e 3246     		mov	r2, r6
 3452 0530 4946     		mov	r1, r9
 3453 0532 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 87


 3454 0534 C047     		blx	r8
 3455              	.LVL387:
 787:Core/Src/printf.c ****           while (l++ < width) {
 3456              		.loc 1 787 9 is_stmt 1 view .LVU872
 787:Core/Src/printf.c ****           while (l++ < width) {
 3457              		.loc 1 787 12 is_stmt 0 view .LVU873
 3458 0536 A5B9     		cbnz	r5, .L322
 3459              	.LVL388:
 3460              	.L267:
 792:Core/Src/printf.c ****         break;
 3461              		.loc 1 792 9 is_stmt 1 view .LVU874
 792:Core/Src/printf.c ****         break;
 3462              		.loc 1 792 15 is_stmt 0 view .LVU875
 3463 0538 0F9B     		ldr	r3, [sp, #60]
 3464 053a 0133     		adds	r3, r3, #1
 3465 053c 0F93     		str	r3, [sp, #60]
 793:Core/Src/printf.c ****       }
 3466              		.loc 1 793 9 is_stmt 1 view .LVU876
 3467 053e 5646     		mov	r6, r10
 3468 0540 69E5     		b	.L284
 3469              	.LVL389:
 3470              	.L265:
 781:Core/Src/printf.c ****           }
 3471              		.loc 1 781 13 view .LVU877
 3472 0542 02F1010A 		add	r10, r2, #1
 3473              	.LVL390:
 781:Core/Src/printf.c ****           }
 3474              		.loc 1 781 13 is_stmt 0 view .LVU878
 3475 0546 3B46     		mov	r3, r7
 3476 0548 4946     		mov	r1, r9
 3477 054a 2020     		movs	r0, #32
 3478 054c C047     		blx	r8
 3479              	.LVL391:
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3480              		.loc 1 780 19 view .LVU879
 3481 054e 2346     		mov	r3, r4
 781:Core/Src/printf.c ****           }
 3482              		.loc 1 781 13 view .LVU880
 3483 0550 5246     		mov	r2, r10
 3484              	.LVL392:
 3485              	.L263:
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3486              		.loc 1 780 22 is_stmt 1 view .LVU881
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3487              		.loc 1 780 19 is_stmt 0 view .LVU882
 3488 0552 5C1C     		adds	r4, r3, #1
 3489              	.LVL393:
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3490              		.loc 1 780 22 view .LVU883
 3491 0554 9B45     		cmp	fp, r3
 3492 0556 F4D8     		bhi	.L265
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3493              		.loc 1 780 22 view .LVU884
 3494 0558 1646     		mov	r6, r2
 3495 055a E2E7     		b	.L264
 3496              	.LVL394:
 3497              	.L296:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 88


 777:Core/Src/printf.c ****         // pre padding
 3498              		.loc 1 777 22 view .LVU885
 3499 055c 0123     		movs	r3, #1
 3500 055e 3246     		mov	r2, r6
 3501 0560 F7E7     		b	.L263
 3502              	.LVL395:
 3503              	.L322:
 777:Core/Src/printf.c ****         // pre padding
 3504              		.loc 1 777 22 view .LVU886
 3505 0562 5246     		mov	r2, r10
 3506 0564 06E0     		b	.L266
 3507              	.LVL396:
 3508              	.L268:
 789:Core/Src/printf.c ****           }
 3509              		.loc 1 789 13 is_stmt 1 view .LVU887
 3510 0566 561C     		adds	r6, r2, #1
 3511              	.LVL397:
 789:Core/Src/printf.c ****           }
 3512              		.loc 1 789 13 is_stmt 0 view .LVU888
 3513 0568 3B46     		mov	r3, r7
 3514 056a 4946     		mov	r1, r9
 3515 056c 2020     		movs	r0, #32
 3516 056e C047     		blx	r8
 3517              	.LVL398:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3518              		.loc 1 788 19 view .LVU889
 3519 0570 2C46     		mov	r4, r5
 789:Core/Src/printf.c ****           }
 3520              		.loc 1 789 13 view .LVU890
 3521 0572 3246     		mov	r2, r6
 3522              	.LVL399:
 3523              	.L266:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3524              		.loc 1 788 22 is_stmt 1 view .LVU891
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3525              		.loc 1 788 19 is_stmt 0 view .LVU892
 3526 0574 651C     		adds	r5, r4, #1
 3527              	.LVL400:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3528              		.loc 1 788 22 view .LVU893
 3529 0576 A345     		cmp	fp, r4
 3530 0578 F5D8     		bhi	.L268
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3531              		.loc 1 788 22 view .LVU894
 3532 057a 9246     		mov	r10, r2
 3533 057c DCE7     		b	.L267
 3534              	.LVL401:
 3535              	.L314:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3536              		.loc 1 788 22 view .LVU895
 3537              	.LBE46:
 3538              	.LBB47:
 797:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 3539              		.loc 1 797 9 is_stmt 1 view .LVU896
 797:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 3540              		.loc 1 797 21 is_stmt 0 view .LVU897
 3541 057e 1A9B     		ldr	r3, [sp, #104]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 89


 3542 0580 1A1D     		adds	r2, r3, #4
 3543 0582 1A92     		str	r2, [sp, #104]
 3544 0584 D3F800A0 		ldr	r10, [r3]
 798:Core/Src/printf.c ****         // pre padding
 3545              		.loc 1 798 9 is_stmt 1 view .LVU898
 798:Core/Src/printf.c ****         // pre padding
 3546              		.loc 1 798 26 is_stmt 0 view .LVU899
 3547 0588 0B9B     		ldr	r3, [sp, #44]
 3548 058a FBB9     		cbnz	r3, .L269
 3549 058c 4FF0FF32 		mov	r2, #-1
 3550              	.L270:
 3551 0590 5346     		mov	r3, r10
 3552 0592 01E0     		b	.L271
 3553              	.LVL402:
 3554              	.L273:
 3555              	.LBB48:
 3556              	.LBB49:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3557              		.loc 1 174 34 is_stmt 1 view .LVU900
 3558 0594 0133     		adds	r3, r3, #1
 3559              	.LVL403:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3560              		.loc 1 174 30 is_stmt 0 view .LVU901
 3561 0596 0A46     		mov	r2, r1
 3562              	.LVL404:
 3563              	.L271:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3564              		.loc 1 174 20 is_stmt 1 view .LVU902
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3565              		.loc 1 174 17 is_stmt 0 view .LVU903
 3566 0598 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3567              		.loc 1 174 20 view .LVU904
 3568 059a 11B1     		cbz	r1, .L272
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3569              		.loc 1 174 30 view .LVU905
 3570 059c 511E     		subs	r1, r2, #1
 3571              	.LVL405:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3572              		.loc 1 174 20 view .LVU906
 3573 059e 002A     		cmp	r2, #0
 3574 05a0 F8D1     		bne	.L273
 3575              	.LVL406:
 3576              	.L272:
 175:Core/Src/printf.c **** }
 3577              		.loc 1 175 3 is_stmt 1 view .LVU907
 175:Core/Src/printf.c **** }
 3578              		.loc 1 175 27 is_stmt 0 view .LVU908
 3579 05a2 A3EB0A03 		sub	r3, r3, r10
 3580              	.LVL407:
 175:Core/Src/printf.c **** }
 3581              		.loc 1 175 27 view .LVU909
 3582              	.LBE49:
 3583              	.LBE48:
 800:Core/Src/printf.c ****           l = (l < precision ? l : precision);
 3584              		.loc 1 800 9 is_stmt 1 view .LVU910
 800:Core/Src/printf.c ****           l = (l < precision ? l : precision);
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 90


 3585              		.loc 1 800 12 is_stmt 0 view .LVU911
 3586 05a6 15F48062 		ands	r2, r5, #1024
 3587 05aa 0C92     		str	r2, [sp, #48]
 3588 05ac 03D0     		beq	.L274
 801:Core/Src/printf.c ****         }
 3589              		.loc 1 801 11 is_stmt 1 view .LVU912
 801:Core/Src/printf.c ****         }
 3590              		.loc 1 801 13 is_stmt 0 view .LVU913
 3591 05ae 0B9A     		ldr	r2, [sp, #44]
 3592 05b0 9342     		cmp	r3, r2
 3593 05b2 28BF     		it	cs
 3594 05b4 1346     		movcs	r3, r2
 3595              	.LVL408:
 3596              	.L274:
 803:Core/Src/printf.c ****           while (l++ < width) {
 3597              		.loc 1 803 9 is_stmt 1 view .LVU914
 803:Core/Src/printf.c ****           while (l++ < width) {
 3598              		.loc 1 803 12 is_stmt 0 view .LVU915
 3599 05b6 15F00204 		ands	r4, r5, #2
 3600 05ba 09D0     		beq	.L323
 803:Core/Src/printf.c ****           while (l++ < width) {
 3601              		.loc 1 803 12 view .LVU916
 3602 05bc 0D94     		str	r4, [sp, #52]
 3603 05be CDF838B0 		str	fp, [sp, #56]
 3604 05c2 0B9D     		ldr	r5, [sp, #44]
 3605              	.LVL409:
 803:Core/Src/printf.c ****           while (l++ < width) {
 3606              		.loc 1 803 12 view .LVU917
 3607 05c4 3246     		mov	r2, r6
 3608 05c6 0C9E     		ldr	r6, [sp, #48]
 3609              	.LVL410:
 803:Core/Src/printf.c ****           while (l++ < width) {
 3610              		.loc 1 803 12 view .LVU918
 3611 05c8 9B46     		mov	fp, r3
 3612              	.LVL411:
 803:Core/Src/printf.c ****           while (l++ < width) {
 3613              		.loc 1 803 12 view .LVU919
 3614 05ca 1FE0     		b	.L278
 3615              	.LVL412:
 3616              	.L269:
 798:Core/Src/printf.c ****         // pre padding
 3617              		.loc 1 798 26 view .LVU920
 3618 05cc 0B9A     		ldr	r2, [sp, #44]
 3619 05ce DFE7     		b	.L270
 3620              	.LVL413:
 3621              	.L323:
 798:Core/Src/printf.c ****         // pre padding
 3622              		.loc 1 798 26 view .LVU921
 3623 05d0 3246     		mov	r2, r6
 3624 05d2 2646     		mov	r6, r4
 3625              	.LVL414:
 798:Core/Src/printf.c ****         // pre padding
 3626              		.loc 1 798 26 view .LVU922
 3627 05d4 06E0     		b	.L275
 3628              	.LVL415:
 3629              	.L277:
 805:Core/Src/printf.c ****           }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 91


 3630              		.loc 1 805 13 is_stmt 1 view .LVU923
 3631 05d6 541C     		adds	r4, r2, #1
 3632              	.LVL416:
 805:Core/Src/printf.c ****           }
 3633              		.loc 1 805 13 is_stmt 0 view .LVU924
 3634 05d8 3B46     		mov	r3, r7
 3635 05da 4946     		mov	r1, r9
 3636 05dc 2020     		movs	r0, #32
 3637 05de C047     		blx	r8
 3638              	.LVL417:
 804:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3639              		.loc 1 804 19 view .LVU925
 3640 05e0 2B46     		mov	r3, r5
 805:Core/Src/printf.c ****           }
 3641              		.loc 1 805 13 view .LVU926
 3642 05e2 2246     		mov	r2, r4
 3643              	.LVL418:
 3644              	.L275:
 804:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3645              		.loc 1 804 22 is_stmt 1 view .LVU927
 804:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3646              		.loc 1 804 19 is_stmt 0 view .LVU928
 3647 05e4 5D1C     		adds	r5, r3, #1
 3648              	.LVL419:
 804:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3649              		.loc 1 804 22 view .LVU929
 3650 05e6 9B45     		cmp	fp, r3
 3651 05e8 F5D8     		bhi	.L277
 804:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3652              		.loc 1 804 19 view .LVU930
 3653 05ea 3446     		mov	r4, r6
 3654 05ec 2B46     		mov	r3, r5
 3655 05ee 0D94     		str	r4, [sp, #52]
 3656 05f0 CDF838B0 		str	fp, [sp, #56]
 3657 05f4 0B9D     		ldr	r5, [sp, #44]
 3658              	.LVL420:
 804:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3659              		.loc 1 804 19 view .LVU931
 3660 05f6 0C9E     		ldr	r6, [sp, #48]
 3661 05f8 9B46     		mov	fp, r3
 3662              	.LVL421:
 804:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3663              		.loc 1 804 19 view .LVU932
 3664 05fa 07E0     		b	.L278
 3665              	.LVL422:
 3666              	.L297:
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3667              		.loc 1 809 69 view .LVU933
 3668 05fc 1D46     		mov	r5, r3
 3669              	.LVL423:
 3670              	.L280:
 810:Core/Src/printf.c ****         }
 3671              		.loc 1 810 11 is_stmt 1 view .LVU934
 810:Core/Src/printf.c ****         }
 3672              		.loc 1 810 18 is_stmt 0 view .LVU935
 3673 05fe 0AF1010A 		add	r10, r10, #1
 3674              	.LVL424:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 92


 810:Core/Src/printf.c ****         }
 3675              		.loc 1 810 11 view .LVU936
 3676 0602 541C     		adds	r4, r2, #1
 3677              	.LVL425:
 810:Core/Src/printf.c ****         }
 3678              		.loc 1 810 11 view .LVU937
 3679 0604 3B46     		mov	r3, r7
 3680 0606 4946     		mov	r1, r9
 3681 0608 C047     		blx	r8
 3682              	.LVL426:
 3683 060a 2246     		mov	r2, r4
 3684              	.LVL427:
 3685              	.L278:
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3686              		.loc 1 809 26 is_stmt 1 view .LVU938
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3687              		.loc 1 809 17 is_stmt 0 view .LVU939
 3688 060c 9AF80000 		ldrb	r0, [r10]	@ zero_extendqisi2
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3689              		.loc 1 809 26 view .LVU940
 3690 0610 20B1     		cbz	r0, .L279
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3691              		.loc 1 809 26 discriminator 1 view .LVU941
 3692 0612 002E     		cmp	r6, #0
 3693 0614 F3D0     		beq	.L280
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3694              		.loc 1 809 69 discriminator 2 view .LVU942
 3695 0616 6B1E     		subs	r3, r5, #1
 3696              	.LVL428:
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3697              		.loc 1 809 57 discriminator 2 view .LVU943
 3698 0618 002D     		cmp	r5, #0
 3699 061a EFD1     		bne	.L297
 3700              	.LVL429:
 3701              	.L279:
 813:Core/Src/printf.c ****           while (l++ < width) {
 3702              		.loc 1 813 12 view .LVU944
 3703 061c 0D9C     		ldr	r4, [sp, #52]
 3704 061e 1646     		mov	r6, r2
 3705 0620 5B46     		mov	r3, fp
 3706 0622 DDF838B0 		ldr	fp, [sp, #56]
 3707              	.LVL430:
 813:Core/Src/printf.c ****           while (l++ < width) {
 3708              		.loc 1 813 9 is_stmt 1 view .LVU945
 813:Core/Src/printf.c ****           while (l++ < width) {
 3709              		.loc 1 813 12 is_stmt 0 view .LVU946
 3710 0626 54B9     		cbnz	r4, .L281
 3711              	.LVL431:
 3712              	.L282:
 818:Core/Src/printf.c ****         break;
 3713              		.loc 1 818 9 is_stmt 1 view .LVU947
 818:Core/Src/printf.c ****         break;
 3714              		.loc 1 818 15 is_stmt 0 view .LVU948
 3715 0628 0F9B     		ldr	r3, [sp, #60]
 3716 062a 0133     		adds	r3, r3, #1
 3717 062c 0F93     		str	r3, [sp, #60]
 819:Core/Src/printf.c ****       }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 93


 3718              		.loc 1 819 9 is_stmt 1 view .LVU949
 3719 062e F2E4     		b	.L284
 3720              	.LVL432:
 3721              	.L283:
 815:Core/Src/printf.c ****           }
 3722              		.loc 1 815 13 view .LVU950
 3723 0630 551C     		adds	r5, r2, #1
 3724              	.LVL433:
 815:Core/Src/printf.c ****           }
 3725              		.loc 1 815 13 is_stmt 0 view .LVU951
 3726 0632 3B46     		mov	r3, r7
 3727 0634 4946     		mov	r1, r9
 3728 0636 2020     		movs	r0, #32
 3729 0638 C047     		blx	r8
 3730              	.LVL434:
 814:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3731              		.loc 1 814 19 view .LVU952
 3732 063a 2346     		mov	r3, r4
 815:Core/Src/printf.c ****           }
 3733              		.loc 1 815 13 view .LVU953
 3734 063c 2A46     		mov	r2, r5
 3735              	.LVL435:
 3736              	.L281:
 814:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3737              		.loc 1 814 22 is_stmt 1 view .LVU954
 814:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3738              		.loc 1 814 19 is_stmt 0 view .LVU955
 3739 063e 5C1C     		adds	r4, r3, #1
 3740              	.LVL436:
 814:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3741              		.loc 1 814 22 view .LVU956
 3742 0640 9B45     		cmp	fp, r3
 3743 0642 F5D8     		bhi	.L283
 814:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3744              		.loc 1 814 22 view .LVU957
 3745 0644 1646     		mov	r6, r2
 3746 0646 EFE7     		b	.L282
 3747              	.LVL437:
 3748              	.L232:
 814:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3749              		.loc 1 814 22 view .LVU958
 3750              	.LBE47:
 3751              	.LBB50:
 823:Core/Src/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 3752              		.loc 1 823 9 is_stmt 1 view .LVU959
 824:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3753              		.loc 1 824 9 view .LVU960
 824:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3754              		.loc 1 824 15 is_stmt 0 view .LVU961
 3755 0648 45F02105 		orr	r5, r5, #33
 3756              	.LVL438:
 826:Core/Src/printf.c ****         if (is_ll) {
 3757              		.loc 1 826 9 is_stmt 1 view .LVU962
 827:Core/Src/printf.c ****           idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U,
 3758              		.loc 1 827 9 view .LVU963
 832:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3759              		.loc 1 832 11 view .LVU964
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 94


 832:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3760              		.loc 1 832 81 is_stmt 0 view .LVU965
 3761 064c 1A9B     		ldr	r3, [sp, #104]
 3762 064e 1A1D     		adds	r2, r3, #4
 3763 0650 1A92     		str	r2, [sp, #104]
 3764 0652 1B68     		ldr	r3, [r3]
 832:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3765              		.loc 1 832 17 view .LVU966
 3766 0654 0595     		str	r5, [sp, #20]
 3767 0656 0822     		movs	r2, #8
 3768 0658 0492     		str	r2, [sp, #16]
 3769 065a 0B9A     		ldr	r2, [sp, #44]
 3770 065c 0392     		str	r2, [sp, #12]
 3771 065e 1022     		movs	r2, #16
 3772 0660 0292     		str	r2, [sp, #8]
 3773 0662 0022     		movs	r2, #0
 3774 0664 0192     		str	r2, [sp, #4]
 3775 0666 0093     		str	r3, [sp]
 3776 0668 3B46     		mov	r3, r7
 3777 066a 3246     		mov	r2, r6
 3778 066c 4946     		mov	r1, r9
 3779 066e 4046     		mov	r0, r8
 3780 0670 FFF7FEFF 		bl	_ntoa_long
 3781              	.LVL439:
 3782 0674 0646     		mov	r6, r0
 3783              	.LVL440:
 836:Core/Src/printf.c ****         break;
 3784              		.loc 1 836 9 is_stmt 1 view .LVU967
 836:Core/Src/printf.c ****         break;
 3785              		.loc 1 836 15 is_stmt 0 view .LVU968
 3786 0676 0F9B     		ldr	r3, [sp, #60]
 3787 0678 0133     		adds	r3, r3, #1
 3788 067a 0F93     		str	r3, [sp, #60]
 837:Core/Src/printf.c ****       }
 3789              		.loc 1 837 9 is_stmt 1 view .LVU969
 3790 067c CBE4     		b	.L284
 3791              	.LVL441:
 3792              	.L238:
 837:Core/Src/printf.c ****       }
 3793              		.loc 1 837 9 is_stmt 0 view .LVU970
 3794              	.LBE50:
 841:Core/Src/printf.c ****         format++;
 3795              		.loc 1 841 9 is_stmt 1 view .LVU971
 3796 067e 741C     		adds	r4, r6, #1
 3797              	.LVL442:
 841:Core/Src/printf.c ****         format++;
 3798              		.loc 1 841 9 is_stmt 0 view .LVU972
 3799 0680 3B46     		mov	r3, r7
 3800 0682 3246     		mov	r2, r6
 3801 0684 4946     		mov	r1, r9
 3802 0686 2520     		movs	r0, #37
 3803 0688 C047     		blx	r8
 3804              	.LVL443:
 842:Core/Src/printf.c ****         break;
 3805              		.loc 1 842 9 is_stmt 1 view .LVU973
 842:Core/Src/printf.c ****         break;
 3806              		.loc 1 842 15 is_stmt 0 view .LVU974
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 95


 3807 068a 0F9B     		ldr	r3, [sp, #60]
 3808 068c 0133     		adds	r3, r3, #1
 3809 068e 0F93     		str	r3, [sp, #60]
 843:Core/Src/printf.c **** 
 3810              		.loc 1 843 9 is_stmt 1 view .LVU975
 841:Core/Src/printf.c ****         format++;
 3811              		.loc 1 841 9 is_stmt 0 view .LVU976
 3812 0690 2646     		mov	r6, r4
 843:Core/Src/printf.c **** 
 3813              		.loc 1 843 9 view .LVU977
 3814 0692 C0E4     		b	.L284
 3815              	.LVL444:
 3816              	.L304:
 584:Core/Src/printf.c ****   }
 3817              		.loc 1 584 9 view .LVU978
 3818 0694 DFF81C80 		ldr	r8, .L324
 3819 0698 BCE4     		b	.L203
 3820              	.LVL445:
 3821              	.L305:
 849:Core/Src/printf.c ****     }
 850:Core/Src/printf.c ****   }
 851:Core/Src/printf.c **** 
 852:Core/Src/printf.c ****   // termination
 853:Core/Src/printf.c ****   out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 3822              		.loc 1 853 3 is_stmt 1 view .LVU979
 3823 069a BE42     		cmp	r6, r7
 3824 069c 08D3     		bcc	.L298
 3825              		.loc 1 853 3 is_stmt 0 discriminator 1 view .LVU980
 3826 069e 7A1E     		subs	r2, r7, #1
 3827              	.L286:
 3828              		.loc 1 853 3 discriminator 4 view .LVU981
 3829 06a0 3B46     		mov	r3, r7
 3830 06a2 4946     		mov	r1, r9
 3831 06a4 0020     		movs	r0, #0
 3832 06a6 C047     		blx	r8
 3833              	.LVL446:
 854:Core/Src/printf.c **** 
 855:Core/Src/printf.c ****   // return written chars without terminating \0
 856:Core/Src/printf.c ****   return (int)idx;
 3834              		.loc 1 856 3 is_stmt 1 discriminator 4 view .LVU982
 857:Core/Src/printf.c **** }
 3835              		.loc 1 857 1 is_stmt 0 discriminator 4 view .LVU983
 3836 06a8 3046     		mov	r0, r6
 3837 06aa 11B0     		add	sp, sp, #68
 3838              	.LCFI30:
 3839              		.cfi_remember_state
 3840              		.cfi_def_cfa_offset 36
 3841              		@ sp needed
 3842 06ac BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3843              	.LVL447:
 3844              	.L298:
 3845              	.LCFI31:
 3846              		.cfi_restore_state
 853:Core/Src/printf.c **** 
 3847              		.loc 1 853 3 view .LVU984
 3848 06b0 3246     		mov	r2, r6
 3849 06b2 F5E7     		b	.L286
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 96


 3850              	.L325:
 3851              		.align	2
 3852              	.L324:
 3853 06b4 00000000 		.word	_out_null
 3854              		.cfi_endproc
 3855              	.LFE13:
 3857              		.section	.text._out_char,"ax",%progbits
 3858              		.align	1
 3859              		.syntax unified
 3860              		.thumb
 3861              		.thumb_func
 3863              	_out_char:
 3864              	.LVL448:
 3865              	.LFB2:
 150:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 3866              		.loc 1 150 1 is_stmt 1 view -0
 3867              		.cfi_startproc
 3868              		@ args = 0, pretend = 0, frame = 0
 3869              		@ frame_needed = 0, uses_anonymous_args = 0
 151:Core/Src/printf.c ****   if (character) {
 3870              		.loc 1 151 3 view .LVU986
 151:Core/Src/printf.c ****   if (character) {
 3871              		.loc 1 151 17 view .LVU987
 151:Core/Src/printf.c ****   if (character) {
 3872              		.loc 1 151 28 view .LVU988
 152:Core/Src/printf.c ****     _putchar(character);
 3873              		.loc 1 152 3 view .LVU989
 152:Core/Src/printf.c ****     _putchar(character);
 3874              		.loc 1 152 6 is_stmt 0 view .LVU990
 3875 0000 00B9     		cbnz	r0, .L332
 3876 0002 7047     		bx	lr
 3877              	.L332:
 150:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 3878              		.loc 1 150 1 view .LVU991
 3879 0004 08B5     		push	{r3, lr}
 3880              	.LCFI32:
 3881              		.cfi_def_cfa_offset 8
 3882              		.cfi_offset 3, -8
 3883              		.cfi_offset 14, -4
 153:Core/Src/printf.c ****   }
 3884              		.loc 1 153 5 is_stmt 1 view .LVU992
 3885 0006 FFF7FEFF 		bl	_putchar
 3886              	.LVL449:
 155:Core/Src/printf.c **** 
 3887              		.loc 1 155 1 is_stmt 0 view .LVU993
 3888 000a 08BD     		pop	{r3, pc}
 3889              		.cfi_endproc
 3890              	.LFE2:
 3892              		.section	.text.printf_,"ax",%progbits
 3893              		.align	1
 3894              		.global	printf_
 3895              		.syntax unified
 3896              		.thumb
 3897              		.thumb_func
 3899              	printf_:
 3900              	.LVL450:
 3901              	.LFB14:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 97


 858:Core/Src/printf.c **** 
 859:Core/Src/printf.c **** 
 860:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
 861:Core/Src/printf.c **** 
 862:Core/Src/printf.c **** int printf_(const char* format, ...)
 863:Core/Src/printf.c **** {
 3902              		.loc 1 863 1 is_stmt 1 view -0
 3903              		.cfi_startproc
 3904              		@ args = 4, pretend = 16, frame = 8
 3905              		@ frame_needed = 0, uses_anonymous_args = 1
 3906              		.loc 1 863 1 is_stmt 0 view .LVU995
 3907 0000 0FB4     		push	{r0, r1, r2, r3}
 3908              	.LCFI33:
 3909              		.cfi_def_cfa_offset 16
 3910              		.cfi_offset 0, -16
 3911              		.cfi_offset 1, -12
 3912              		.cfi_offset 2, -8
 3913              		.cfi_offset 3, -4
 3914 0002 00B5     		push	{lr}
 3915              	.LCFI34:
 3916              		.cfi_def_cfa_offset 20
 3917              		.cfi_offset 14, -20
 3918 0004 85B0     		sub	sp, sp, #20
 3919              	.LCFI35:
 3920              		.cfi_def_cfa_offset 40
 3921 0006 06AA     		add	r2, sp, #24
 3922 0008 52F8043B 		ldr	r3, [r2], #4
 864:Core/Src/printf.c ****   va_list va;
 3923              		.loc 1 864 3 is_stmt 1 view .LVU996
 865:Core/Src/printf.c ****   va_start(va, format);
 3924              		.loc 1 865 3 view .LVU997
 3925 000c 0392     		str	r2, [sp, #12]
 866:Core/Src/printf.c ****   char buffer[1];
 3926              		.loc 1 866 3 view .LVU998
 867:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 3927              		.loc 1 867 3 view .LVU999
 3928              		.loc 1 867 19 is_stmt 0 view .LVU1000
 3929 000e 0092     		str	r2, [sp]
 3930 0010 4FF0FF32 		mov	r2, #-1
 3931 0014 02A9     		add	r1, sp, #8
 3932 0016 0448     		ldr	r0, .L335
 3933 0018 FFF7FEFF 		bl	_vsnprintf
 3934              	.LVL451:
 868:Core/Src/printf.c ****   va_end(va);
 3935              		.loc 1 868 3 is_stmt 1 view .LVU1001
 869:Core/Src/printf.c ****   return ret;
 3936              		.loc 1 869 3 view .LVU1002
 870:Core/Src/printf.c **** }
 3937              		.loc 1 870 1 is_stmt 0 view .LVU1003
 3938 001c 05B0     		add	sp, sp, #20
 3939              	.LCFI36:
 3940              		.cfi_def_cfa_offset 20
 3941              		@ sp needed
 3942 001e 5DF804EB 		ldr	lr, [sp], #4
 3943              	.LCFI37:
 3944              		.cfi_restore 14
 3945              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 98


 3946 0022 04B0     		add	sp, sp, #16
 3947              	.LCFI38:
 3948              		.cfi_restore 3
 3949              		.cfi_restore 2
 3950              		.cfi_restore 1
 3951              		.cfi_restore 0
 3952              		.cfi_def_cfa_offset 0
 3953 0024 7047     		bx	lr
 3954              	.L336:
 3955 0026 00BF     		.align	2
 3956              	.L335:
 3957 0028 00000000 		.word	_out_char
 3958              		.cfi_endproc
 3959              	.LFE14:
 3961              		.section	.text.sprintf_,"ax",%progbits
 3962              		.align	1
 3963              		.global	sprintf_
 3964              		.syntax unified
 3965              		.thumb
 3966              		.thumb_func
 3968              	sprintf_:
 3969              	.LVL452:
 3970              	.LFB15:
 871:Core/Src/printf.c **** 
 872:Core/Src/printf.c **** 
 873:Core/Src/printf.c **** int sprintf_(char* buffer, const char* format, ...)
 874:Core/Src/printf.c **** {
 3971              		.loc 1 874 1 is_stmt 1 view -0
 3972              		.cfi_startproc
 3973              		@ args = 4, pretend = 12, frame = 8
 3974              		@ frame_needed = 0, uses_anonymous_args = 1
 3975              		.loc 1 874 1 is_stmt 0 view .LVU1005
 3976 0000 0EB4     		push	{r1, r2, r3}
 3977              	.LCFI39:
 3978              		.cfi_def_cfa_offset 12
 3979              		.cfi_offset 1, -12
 3980              		.cfi_offset 2, -8
 3981              		.cfi_offset 3, -4
 3982 0002 00B5     		push	{lr}
 3983              	.LCFI40:
 3984              		.cfi_def_cfa_offset 16
 3985              		.cfi_offset 14, -16
 3986 0004 84B0     		sub	sp, sp, #16
 3987              	.LCFI41:
 3988              		.cfi_def_cfa_offset 32
 3989 0006 0146     		mov	r1, r0
 3990 0008 05AA     		add	r2, sp, #20
 3991 000a 52F8043B 		ldr	r3, [r2], #4
 875:Core/Src/printf.c ****   va_list va;
 3992              		.loc 1 875 3 is_stmt 1 view .LVU1006
 876:Core/Src/printf.c ****   va_start(va, format);
 3993              		.loc 1 876 3 view .LVU1007
 3994 000e 0392     		str	r2, [sp, #12]
 877:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
 3995              		.loc 1 877 3 view .LVU1008
 3996              		.loc 1 877 19 is_stmt 0 view .LVU1009
 3997 0010 0092     		str	r2, [sp]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 99


 3998 0012 4FF0FF32 		mov	r2, #-1
 3999 0016 0448     		ldr	r0, .L339
 4000              	.LVL453:
 4001              		.loc 1 877 19 view .LVU1010
 4002 0018 FFF7FEFF 		bl	_vsnprintf
 4003              	.LVL454:
 878:Core/Src/printf.c ****   va_end(va);
 4004              		.loc 1 878 3 is_stmt 1 view .LVU1011
 879:Core/Src/printf.c ****   return ret;
 4005              		.loc 1 879 3 view .LVU1012
 880:Core/Src/printf.c **** }
 4006              		.loc 1 880 1 is_stmt 0 view .LVU1013
 4007 001c 04B0     		add	sp, sp, #16
 4008              	.LCFI42:
 4009              		.cfi_def_cfa_offset 16
 4010              		@ sp needed
 4011 001e 5DF804EB 		ldr	lr, [sp], #4
 4012              	.LCFI43:
 4013              		.cfi_restore 14
 4014              		.cfi_def_cfa_offset 12
 4015 0022 03B0     		add	sp, sp, #12
 4016              	.LCFI44:
 4017              		.cfi_restore 3
 4018              		.cfi_restore 2
 4019              		.cfi_restore 1
 4020              		.cfi_def_cfa_offset 0
 4021 0024 7047     		bx	lr
 4022              	.L340:
 4023 0026 00BF     		.align	2
 4024              	.L339:
 4025 0028 00000000 		.word	_out_buffer
 4026              		.cfi_endproc
 4027              	.LFE15:
 4029              		.section	.text.snprintf_,"ax",%progbits
 4030              		.align	1
 4031              		.global	snprintf_
 4032              		.syntax unified
 4033              		.thumb
 4034              		.thumb_func
 4036              	snprintf_:
 4037              	.LVL455:
 4038              	.LFB16:
 881:Core/Src/printf.c **** 
 882:Core/Src/printf.c **** 
 883:Core/Src/printf.c **** int snprintf_(char* buffer, size_t count, const char* format, ...)
 884:Core/Src/printf.c **** {
 4039              		.loc 1 884 1 is_stmt 1 view -0
 4040              		.cfi_startproc
 4041              		@ args = 4, pretend = 8, frame = 8
 4042              		@ frame_needed = 0, uses_anonymous_args = 1
 4043              		.loc 1 884 1 is_stmt 0 view .LVU1015
 4044 0000 0CB4     		push	{r2, r3}
 4045              	.LCFI45:
 4046              		.cfi_def_cfa_offset 8
 4047              		.cfi_offset 2, -8
 4048              		.cfi_offset 3, -4
 4049 0002 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 100


 4050              	.LCFI46:
 4051              		.cfi_def_cfa_offset 16
 4052              		.cfi_offset 4, -16
 4053              		.cfi_offset 14, -12
 4054 0004 84B0     		sub	sp, sp, #16
 4055              	.LCFI47:
 4056              		.cfi_def_cfa_offset 32
 4057 0006 0A46     		mov	r2, r1
 4058 0008 06AC     		add	r4, sp, #24
 4059 000a 54F8043B 		ldr	r3, [r4], #4
 885:Core/Src/printf.c ****   va_list va;
 4060              		.loc 1 885 3 is_stmt 1 view .LVU1016
 886:Core/Src/printf.c ****   va_start(va, format);
 4061              		.loc 1 886 3 view .LVU1017
 4062 000e 0394     		str	r4, [sp, #12]
 887:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 4063              		.loc 1 887 3 view .LVU1018
 4064              		.loc 1 887 19 is_stmt 0 view .LVU1019
 4065 0010 0094     		str	r4, [sp]
 4066 0012 0146     		mov	r1, r0
 4067              	.LVL456:
 4068              		.loc 1 887 19 view .LVU1020
 4069 0014 0348     		ldr	r0, .L343
 4070              	.LVL457:
 4071              		.loc 1 887 19 view .LVU1021
 4072 0016 FFF7FEFF 		bl	_vsnprintf
 4073              	.LVL458:
 888:Core/Src/printf.c ****   va_end(va);
 4074              		.loc 1 888 3 is_stmt 1 view .LVU1022
 889:Core/Src/printf.c ****   return ret;
 4075              		.loc 1 889 3 view .LVU1023
 890:Core/Src/printf.c **** }
 4076              		.loc 1 890 1 is_stmt 0 view .LVU1024
 4077 001a 04B0     		add	sp, sp, #16
 4078              	.LCFI48:
 4079              		.cfi_def_cfa_offset 16
 4080              		@ sp needed
 4081 001c BDE81040 		pop	{r4, lr}
 4082              	.LCFI49:
 4083              		.cfi_restore 14
 4084              		.cfi_restore 4
 4085              		.cfi_def_cfa_offset 8
 4086 0020 02B0     		add	sp, sp, #8
 4087              	.LCFI50:
 4088              		.cfi_restore 3
 4089              		.cfi_restore 2
 4090              		.cfi_def_cfa_offset 0
 4091 0022 7047     		bx	lr
 4092              	.L344:
 4093              		.align	2
 4094              	.L343:
 4095 0024 00000000 		.word	_out_buffer
 4096              		.cfi_endproc
 4097              	.LFE16:
 4099              		.section	.text.vprintf_,"ax",%progbits
 4100              		.align	1
 4101              		.global	vprintf_
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 101


 4102              		.syntax unified
 4103              		.thumb
 4104              		.thumb_func
 4106              	vprintf_:
 4107              	.LVL459:
 4108              	.LFB17:
 891:Core/Src/printf.c **** 
 892:Core/Src/printf.c **** 
 893:Core/Src/printf.c **** int vprintf_(const char* format, va_list va)
 894:Core/Src/printf.c **** {
 4109              		.loc 1 894 1 is_stmt 1 view -0
 4110              		.cfi_startproc
 4111              		@ args = 0, pretend = 0, frame = 8
 4112              		@ frame_needed = 0, uses_anonymous_args = 0
 4113              		.loc 1 894 1 is_stmt 0 view .LVU1026
 4114 0000 00B5     		push	{lr}
 4115              	.LCFI51:
 4116              		.cfi_def_cfa_offset 4
 4117              		.cfi_offset 14, -4
 4118 0002 85B0     		sub	sp, sp, #20
 4119              	.LCFI52:
 4120              		.cfi_def_cfa_offset 24
 4121 0004 0346     		mov	r3, r0
 895:Core/Src/printf.c ****   char buffer[1];
 4122              		.loc 1 895 3 is_stmt 1 view .LVU1027
 896:Core/Src/printf.c ****   return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 4123              		.loc 1 896 3 view .LVU1028
 4124              		.loc 1 896 10 is_stmt 0 view .LVU1029
 4125 0006 0091     		str	r1, [sp]
 4126 0008 4FF0FF32 		mov	r2, #-1
 4127 000c 03A9     		add	r1, sp, #12
 4128              	.LVL460:
 4129              		.loc 1 896 10 view .LVU1030
 4130 000e 0348     		ldr	r0, .L347
 4131              	.LVL461:
 4132              		.loc 1 896 10 view .LVU1031
 4133 0010 FFF7FEFF 		bl	_vsnprintf
 4134              	.LVL462:
 897:Core/Src/printf.c **** }
 4135              		.loc 1 897 1 view .LVU1032
 4136 0014 05B0     		add	sp, sp, #20
 4137              	.LCFI53:
 4138              		.cfi_def_cfa_offset 4
 4139              		@ sp needed
 4140 0016 5DF804FB 		ldr	pc, [sp], #4
 4141              	.L348:
 4142 001a 00BF     		.align	2
 4143              	.L347:
 4144 001c 00000000 		.word	_out_char
 4145              		.cfi_endproc
 4146              	.LFE17:
 4148              		.section	.text.vsnprintf_,"ax",%progbits
 4149              		.align	1
 4150              		.global	vsnprintf_
 4151              		.syntax unified
 4152              		.thumb
 4153              		.thumb_func
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 102


 4155              	vsnprintf_:
 4156              	.LVL463:
 4157              	.LFB18:
 898:Core/Src/printf.c **** 
 899:Core/Src/printf.c **** 
 900:Core/Src/printf.c **** int vsnprintf_(char* buffer, size_t count, const char* format, va_list va)
 901:Core/Src/printf.c **** {
 4158              		.loc 1 901 1 is_stmt 1 view -0
 4159              		.cfi_startproc
 4160              		@ args = 0, pretend = 0, frame = 0
 4161              		@ frame_needed = 0, uses_anonymous_args = 0
 4162              		.loc 1 901 1 is_stmt 0 view .LVU1034
 4163 0000 00B5     		push	{lr}
 4164              	.LCFI54:
 4165              		.cfi_def_cfa_offset 4
 4166              		.cfi_offset 14, -4
 4167 0002 83B0     		sub	sp, sp, #12
 4168              	.LCFI55:
 4169              		.cfi_def_cfa_offset 16
 902:Core/Src/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 4170              		.loc 1 902 3 is_stmt 1 view .LVU1035
 4171              		.loc 1 902 10 is_stmt 0 view .LVU1036
 4172 0004 0093     		str	r3, [sp]
 4173 0006 1346     		mov	r3, r2
 4174              	.LVL464:
 4175              		.loc 1 902 10 view .LVU1037
 4176 0008 0A46     		mov	r2, r1
 4177              	.LVL465:
 4178              		.loc 1 902 10 view .LVU1038
 4179 000a 0146     		mov	r1, r0
 4180              	.LVL466:
 4181              		.loc 1 902 10 view .LVU1039
 4182 000c 0248     		ldr	r0, .L351
 4183              	.LVL467:
 4184              		.loc 1 902 10 view .LVU1040
 4185 000e FFF7FEFF 		bl	_vsnprintf
 4186              	.LVL468:
 903:Core/Src/printf.c **** }
 4187              		.loc 1 903 1 view .LVU1041
 4188 0012 03B0     		add	sp, sp, #12
 4189              	.LCFI56:
 4190              		.cfi_def_cfa_offset 4
 4191              		@ sp needed
 4192 0014 5DF804FB 		ldr	pc, [sp], #4
 4193              	.L352:
 4194              		.align	2
 4195              	.L351:
 4196 0018 00000000 		.word	_out_buffer
 4197              		.cfi_endproc
 4198              	.LFE18:
 4200              		.section	.text.fctprintf,"ax",%progbits
 4201              		.align	1
 4202              		.global	fctprintf
 4203              		.syntax unified
 4204              		.thumb
 4205              		.thumb_func
 4207              	fctprintf:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 103


 4208              	.LVL469:
 4209              	.LFB19:
 904:Core/Src/printf.c **** 
 905:Core/Src/printf.c **** 
 906:Core/Src/printf.c **** int fctprintf(void (*out)(char character, void* arg), void* arg, const char* format, ...)
 907:Core/Src/printf.c **** {
 4210              		.loc 1 907 1 is_stmt 1 view -0
 4211              		.cfi_startproc
 4212              		@ args = 4, pretend = 8, frame = 16
 4213              		@ frame_needed = 0, uses_anonymous_args = 1
 4214              		.loc 1 907 1 is_stmt 0 view .LVU1043
 4215 0000 0CB4     		push	{r2, r3}
 4216              	.LCFI57:
 4217              		.cfi_def_cfa_offset 8
 4218              		.cfi_offset 2, -8
 4219              		.cfi_offset 3, -4
 4220 0002 00B5     		push	{lr}
 4221              	.LCFI58:
 4222              		.cfi_def_cfa_offset 12
 4223              		.cfi_offset 14, -12
 4224 0004 87B0     		sub	sp, sp, #28
 4225              	.LCFI59:
 4226              		.cfi_def_cfa_offset 40
 4227 0006 08AA     		add	r2, sp, #32
 4228 0008 52F8043B 		ldr	r3, [r2], #4
 908:Core/Src/printf.c ****   va_list va;
 4229              		.loc 1 908 3 is_stmt 1 view .LVU1044
 909:Core/Src/printf.c ****   va_start(va, format);
 4230              		.loc 1 909 3 view .LVU1045
 4231 000c 0592     		str	r2, [sp, #20]
 910:Core/Src/printf.c ****   const out_fct_wrap_type out_fct_wrap = { out, arg };
 4232              		.loc 1 910 3 view .LVU1046
 4233              		.loc 1 910 27 is_stmt 0 view .LVU1047
 4234 000e 0390     		str	r0, [sp, #12]
 4235 0010 0491     		str	r1, [sp, #16]
 911:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 4236              		.loc 1 911 3 is_stmt 1 view .LVU1048
 4237              		.loc 1 911 19 is_stmt 0 view .LVU1049
 4238 0012 0092     		str	r2, [sp]
 4239 0014 4FF0FF32 		mov	r2, #-1
 4240 0018 03A9     		add	r1, sp, #12
 4241              	.LVL470:
 4242              		.loc 1 911 19 view .LVU1050
 4243 001a 0448     		ldr	r0, .L355
 4244              	.LVL471:
 4245              		.loc 1 911 19 view .LVU1051
 4246 001c FFF7FEFF 		bl	_vsnprintf
 4247              	.LVL472:
 912:Core/Src/printf.c ****   va_end(va);
 4248              		.loc 1 912 3 is_stmt 1 view .LVU1052
 913:Core/Src/printf.c ****   return ret;
 4249              		.loc 1 913 3 view .LVU1053
 914:Core/Src/printf.c **** }
 4250              		.loc 1 914 1 is_stmt 0 view .LVU1054
 4251 0020 07B0     		add	sp, sp, #28
 4252              	.LCFI60:
 4253              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 104


 4254              		@ sp needed
 4255 0022 5DF804EB 		ldr	lr, [sp], #4
 4256              	.LCFI61:
 4257              		.cfi_restore 14
 4258              		.cfi_def_cfa_offset 8
 4259 0026 02B0     		add	sp, sp, #8
 4260              	.LCFI62:
 4261              		.cfi_restore 3
 4262              		.cfi_restore 2
 4263              		.cfi_def_cfa_offset 0
 4264 0028 7047     		bx	lr
 4265              	.L356:
 4266 002a 00BF     		.align	2
 4267              	.L355:
 4268 002c 00000000 		.word	_out_fct
 4269              		.cfi_endproc
 4270              	.LFE19:
 4272              		.section	.rodata.pow10.0,"a"
 4273              		.align	3
 4276              	pow10.0:
 4277 0000 00000000 		.word	0
 4278 0004 0000F03F 		.word	1072693248
 4279 0008 00000000 		.word	0
 4280 000c 00002440 		.word	1076101120
 4281 0010 00000000 		.word	0
 4282 0014 00005940 		.word	1079574528
 4283 0018 00000000 		.word	0
 4284 001c 00408F40 		.word	1083129856
 4285 0020 00000000 		.word	0
 4286 0024 0088C340 		.word	1086556160
 4287 0028 00000000 		.word	0
 4288 002c 006AF840 		.word	1090021888
 4289 0030 00000000 		.word	0
 4290 0034 80842E41 		.word	1093567616
 4291 0038 00000000 		.word	0
 4292 003c D0126341 		.word	1097011920
 4293 0040 00000000 		.word	0
 4294 0044 84D79741 		.word	1100470148
 4295 0048 00000000 		.word	0
 4296 004c 65CDCD41 		.word	1104006501
 4297              		.text
 4298              	.Letext0:
 4299              		.file 2 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/12.3.1/..
 4300              		.file 3 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/12.3.1/..
 4301              		.file 4 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/12.3.1/in
 4302              		.file 5 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/12.3.1/in
 4303              		.file 6 "<built-in>"
 4304              		.file 7 "Core/Inc/printf.h"
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 105


DEFINED SYMBOLS
                            *ABS*:00000000 printf.c
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:21     .text._out_buffer:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:26     .text._out_buffer:00000000 _out_buffer
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:48     .text._out_null:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:53     .text._out_null:00000000 _out_null
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:71     .text._out_fct:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:76     .text._out_fct:00000000 _out_fct
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:118    .text._atoi:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:123    .text._atoi:00000000 _atoi
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:186    .text._out_rev:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:191    .text._out_rev:00000000 _out_rev
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:323    .text._ntoa_format:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:328    .text._ntoa_format:00000000 _ntoa_format
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:617    .text._ntoa_long:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:622    .text._ntoa_long:00000000 _ntoa_long
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:769    .text._ntoa_long_long:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:774    .text._ntoa_long_long:00000000 _ntoa_long_long
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:955    .text._etoa:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:960    .text._etoa:00000000 _etoa
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:1642   .text._ftoa:00000000 _ftoa
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:1444   .text._etoa:000002b0 $d
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:1472   .text._etoa:00000314 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:1621   .rodata._ftoa.str1.4:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:1637   .text._ftoa:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:2236   .text._ftoa:000002f8 $d
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:4276   .rodata.pow10.0:00000000 pow10.0
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:2255   .text._ftoa:0000032c $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:2341   .text._vsnprintf:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:2346   .text._vsnprintf:00000000 _vsnprintf
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:2536   .text._vsnprintf:00000090 $d
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:2554   .text._vsnprintf:000000d4 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:2610   .text._vsnprintf:00000102 $d
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:2828   .text._vsnprintf:000001d0 $d
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:2895   .text._vsnprintf:00000256 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:3853   .text._vsnprintf:000006b4 $d
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:3858   .text._out_char:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:3863   .text._out_char:00000000 _out_char
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:3893   .text.printf_:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:3899   .text.printf_:00000000 printf_
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:3957   .text.printf_:00000028 $d
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:3962   .text.sprintf_:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:3968   .text.sprintf_:00000000 sprintf_
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:4025   .text.sprintf_:00000028 $d
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:4030   .text.snprintf_:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:4036   .text.snprintf_:00000000 snprintf_
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:4095   .text.snprintf_:00000024 $d
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:4100   .text.vprintf_:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:4106   .text.vprintf_:00000000 vprintf_
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:4144   .text.vprintf_:0000001c $d
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:4149   .text.vsnprintf_:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:4155   .text.vsnprintf_:00000000 vsnprintf_
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:4196   .text.vsnprintf_:00000018 $d
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:4201   .text.fctprintf:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:4207   .text.fctprintf:00000000 fctprintf
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:4268   .text.fctprintf:0000002c $d
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:4273   .rodata.pow10.0:00000000 $d
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s 			page 106


C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:2630   .text._vsnprintf:00000115 $d
C:\Users\Lamp\AppData\Local\Temp\cc7JdpLR.s:2630   .text._vsnprintf:00000116 $t

UNDEFINED SYMBOLS
__aeabi_uldivmod
__aeabi_dcmpeq
__aeabi_dcmpgt
__aeabi_dcmplt
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_dsub
__aeabi_d2iz
__aeabi_ddiv
__aeabi_dcmpge
__aeabi_d2uiz
__aeabi_ui2d
__aeabi_dcmple
_putchar
