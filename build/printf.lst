ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"printf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/printf.c"
  20              		.section	.text._out_buffer,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_out_buffer:
  27              	.LVL0:
  28              	.LFB0:
   1:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
   2:Core/Src/printf.c **** // \author (c) Marco Paland (info@paland.com)
   3:Core/Src/printf.c **** //             2014-2019, PALANDesign Hannover, Germany
   4:Core/Src/printf.c **** //
   5:Core/Src/printf.c **** // \license The MIT License (MIT)
   6:Core/Src/printf.c **** //
   7:Core/Src/printf.c **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   8:Core/Src/printf.c **** // of this software and associated documentation files (the "Software"), to deal
   9:Core/Src/printf.c **** // in the Software without restriction, including without limitation the rights
  10:Core/Src/printf.c **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:Core/Src/printf.c **** // copies of the Software, and to permit persons to whom the Software is
  12:Core/Src/printf.c **** // furnished to do so, subject to the following conditions:
  13:Core/Src/printf.c **** //
  14:Core/Src/printf.c **** // The above copyright notice and this permission notice shall be included in
  15:Core/Src/printf.c **** // all copies or substantial portions of the Software.
  16:Core/Src/printf.c **** //
  17:Core/Src/printf.c **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Core/Src/printf.c **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:Core/Src/printf.c **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:Core/Src/printf.c **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:Core/Src/printf.c **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:Core/Src/printf.c **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  23:Core/Src/printf.c **** // THE SOFTWARE.
  24:Core/Src/printf.c **** //
  25:Core/Src/printf.c **** // \brief Tiny printf, sprintf and (v)snprintf implementation, optimized for speed on
  26:Core/Src/printf.c **** //        embedded systems with a very limited resources. These routines are thread
  27:Core/Src/printf.c **** //        safe and reentrant!
  28:Core/Src/printf.c **** //        Use this instead of the bloated standard/newlib printf cause these use
  29:Core/Src/printf.c **** //        malloc for printf (and may not be thread safe).
  30:Core/Src/printf.c **** //
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 2


  31:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  32:Core/Src/printf.c **** 
  33:Core/Src/printf.c **** #include <stdbool.h>
  34:Core/Src/printf.c **** #include <stdint.h>
  35:Core/Src/printf.c **** 
  36:Core/Src/printf.c **** #include "printf.h"
  37:Core/Src/printf.c **** 
  38:Core/Src/printf.c **** 
  39:Core/Src/printf.c **** // define this globally (e.g. gcc -DPRINTF_INCLUDE_CONFIG_H ...) to include the
  40:Core/Src/printf.c **** // printf_config.h header file
  41:Core/Src/printf.c **** // default: undefined
  42:Core/Src/printf.c **** #ifdef PRINTF_INCLUDE_CONFIG_H
  43:Core/Src/printf.c **** #include "printf_config.h"
  44:Core/Src/printf.c **** #endif
  45:Core/Src/printf.c **** 
  46:Core/Src/printf.c **** 
  47:Core/Src/printf.c **** // 'ntoa' conversion buffer size, this must be big enough to hold one converted
  48:Core/Src/printf.c **** // numeric number including padded zeros (dynamically created on stack)
  49:Core/Src/printf.c **** // default: 32 byte
  50:Core/Src/printf.c **** #ifndef PRINTF_NTOA_BUFFER_SIZE
  51:Core/Src/printf.c **** #define PRINTF_NTOA_BUFFER_SIZE    32U
  52:Core/Src/printf.c **** #endif
  53:Core/Src/printf.c **** 
  54:Core/Src/printf.c **** // 'ftoa' conversion buffer size, this must be big enough to hold one converted
  55:Core/Src/printf.c **** // float number including padded zeros (dynamically created on stack)
  56:Core/Src/printf.c **** // default: 32 byte
  57:Core/Src/printf.c **** #ifndef PRINTF_FTOA_BUFFER_SIZE
  58:Core/Src/printf.c **** #define PRINTF_FTOA_BUFFER_SIZE    32U
  59:Core/Src/printf.c **** #endif
  60:Core/Src/printf.c **** 
  61:Core/Src/printf.c **** // support for the floating point type (%f)
  62:Core/Src/printf.c **** // default: activated
  63:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_FLOAT
  64:Core/Src/printf.c **** #define PRINTF_SUPPORT_FLOAT
  65:Core/Src/printf.c **** #endif
  66:Core/Src/printf.c **** 
  67:Core/Src/printf.c **** // support for exponential floating point notation (%e/%g)
  68:Core/Src/printf.c **** // default: activated
  69:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_EXPONENTIAL
  70:Core/Src/printf.c **** #define PRINTF_SUPPORT_EXPONENTIAL
  71:Core/Src/printf.c **** #endif
  72:Core/Src/printf.c **** 
  73:Core/Src/printf.c **** // define the default floating point precision
  74:Core/Src/printf.c **** // default: 6 digits
  75:Core/Src/printf.c **** #ifndef PRINTF_DEFAULT_FLOAT_PRECISION
  76:Core/Src/printf.c **** #define PRINTF_DEFAULT_FLOAT_PRECISION  6U
  77:Core/Src/printf.c **** #endif
  78:Core/Src/printf.c **** 
  79:Core/Src/printf.c **** // define the largest float suitable to print with %f
  80:Core/Src/printf.c **** // default: 1e9
  81:Core/Src/printf.c **** #ifndef PRINTF_MAX_FLOAT
  82:Core/Src/printf.c **** #define PRINTF_MAX_FLOAT  1e9
  83:Core/Src/printf.c **** #endif
  84:Core/Src/printf.c **** 
  85:Core/Src/printf.c **** // support for the long long types (%llu or %p)
  86:Core/Src/printf.c **** // default: activated
  87:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_LONG_LONG
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 3


  88:Core/Src/printf.c **** #define PRINTF_SUPPORT_LONG_LONG
  89:Core/Src/printf.c **** #endif
  90:Core/Src/printf.c **** 
  91:Core/Src/printf.c **** // support for the ptrdiff_t type (%t)
  92:Core/Src/printf.c **** // ptrdiff_t is normally defined in <stddef.h> as long or long long type
  93:Core/Src/printf.c **** // default: activated
  94:Core/Src/printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_PTRDIFF_T
  95:Core/Src/printf.c **** #define PRINTF_SUPPORT_PTRDIFF_T
  96:Core/Src/printf.c **** #endif
  97:Core/Src/printf.c **** 
  98:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
  99:Core/Src/printf.c **** 
 100:Core/Src/printf.c **** // internal flag definitions
 101:Core/Src/printf.c **** #define FLAGS_ZEROPAD   (1U <<  0U)
 102:Core/Src/printf.c **** #define FLAGS_LEFT      (1U <<  1U)
 103:Core/Src/printf.c **** #define FLAGS_PLUS      (1U <<  2U)
 104:Core/Src/printf.c **** #define FLAGS_SPACE     (1U <<  3U)
 105:Core/Src/printf.c **** #define FLAGS_HASH      (1U <<  4U)
 106:Core/Src/printf.c **** #define FLAGS_UPPERCASE (1U <<  5U)
 107:Core/Src/printf.c **** #define FLAGS_CHAR      (1U <<  6U)
 108:Core/Src/printf.c **** #define FLAGS_SHORT     (1U <<  7U)
 109:Core/Src/printf.c **** #define FLAGS_LONG      (1U <<  8U)
 110:Core/Src/printf.c **** #define FLAGS_LONG_LONG (1U <<  9U)
 111:Core/Src/printf.c **** #define FLAGS_PRECISION (1U << 10U)
 112:Core/Src/printf.c **** #define FLAGS_ADAPT_EXP (1U << 11U)
 113:Core/Src/printf.c **** 
 114:Core/Src/printf.c **** 
 115:Core/Src/printf.c **** // import float.h for DBL_MAX
 116:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 117:Core/Src/printf.c **** #include <float.h>
 118:Core/Src/printf.c **** #endif
 119:Core/Src/printf.c **** 
 120:Core/Src/printf.c **** 
 121:Core/Src/printf.c **** // output function type
 122:Core/Src/printf.c **** typedef void (*out_fct_type)(char character, void* buffer, size_t idx, size_t maxlen);
 123:Core/Src/printf.c **** 
 124:Core/Src/printf.c **** 
 125:Core/Src/printf.c **** // wrapper (used as buffer) for output function type
 126:Core/Src/printf.c **** typedef struct {
 127:Core/Src/printf.c ****   void  (*fct)(char character, void* arg);
 128:Core/Src/printf.c ****   void* arg;
 129:Core/Src/printf.c **** } out_fct_wrap_type;
 130:Core/Src/printf.c **** 
 131:Core/Src/printf.c **** 
 132:Core/Src/printf.c **** // internal buffer output
 133:Core/Src/printf.c **** static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
 134:Core/Src/printf.c **** {
  29              		.loc 1 134 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 135:Core/Src/printf.c ****   if (idx < maxlen) {
  34              		.loc 1 135 3 view .LVU1
  35              		.loc 1 135 6 is_stmt 0 view .LVU2
  36 0000 9A42     		cmp	r2, r3
  37 0002 00D2     		bcs	.L1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 4


 136:Core/Src/printf.c ****     ((char*)buffer)[idx] = character;
  38              		.loc 1 136 5 is_stmt 1 view .LVU3
  39              		.loc 1 136 26 is_stmt 0 view .LVU4
  40 0004 8854     		strb	r0, [r1, r2]
  41              	.L1:
 137:Core/Src/printf.c ****   }
 138:Core/Src/printf.c **** }
  42              		.loc 1 138 1 view .LVU5
  43 0006 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE0:
  47              		.section	.text._out_null,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	_out_null:
  54              	.LVL1:
  55              	.LFB1:
 139:Core/Src/printf.c **** 
 140:Core/Src/printf.c **** 
 141:Core/Src/printf.c **** // internal null output
 142:Core/Src/printf.c **** static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
 143:Core/Src/printf.c **** {
  56              		.loc 1 143 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
 144:Core/Src/printf.c ****   (void)character; (void)buffer; (void)idx; (void)maxlen;
  61              		.loc 1 144 3 view .LVU7
  62              		.loc 1 144 20 view .LVU8
  63              		.loc 1 144 34 view .LVU9
  64              		.loc 1 144 45 view .LVU10
 145:Core/Src/printf.c **** }
  65              		.loc 1 145 1 is_stmt 0 view .LVU11
  66 0000 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE1:
  70              		.section	.text._out_fct,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	_out_fct:
  77              	.LVL2:
  78              	.LFB3:
 146:Core/Src/printf.c **** 
 147:Core/Src/printf.c **** 
 148:Core/Src/printf.c **** // internal _putchar wrapper
 149:Core/Src/printf.c **** static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
 150:Core/Src/printf.c **** {
 151:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 152:Core/Src/printf.c ****   if (character) {
 153:Core/Src/printf.c ****     _putchar(character);
 154:Core/Src/printf.c ****   }
 155:Core/Src/printf.c **** }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 5


 156:Core/Src/printf.c **** 
 157:Core/Src/printf.c **** 
 158:Core/Src/printf.c **** // internal output function wrapper
 159:Core/Src/printf.c **** static inline void _out_fct(char character, void* buffer, size_t idx, size_t maxlen)
 160:Core/Src/printf.c **** {
  79              		.loc 1 160 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
 161:Core/Src/printf.c ****   (void)idx; (void)maxlen;
  83              		.loc 1 161 3 view .LVU13
  84              		.loc 1 161 14 view .LVU14
 162:Core/Src/printf.c ****   if (character) {
  85              		.loc 1 162 3 view .LVU15
  86              		.loc 1 162 6 is_stmt 0 view .LVU16
  87 0000 20B1     		cbz	r0, .L7
 160:Core/Src/printf.c ****   (void)idx; (void)maxlen;
  88              		.loc 1 160 1 view .LVU17
  89 0002 08B5     		push	{r3, lr}
  90              	.LCFI0:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 3, -8
  93              		.cfi_offset 14, -4
 163:Core/Src/printf.c ****     // buffer is the output fct pointer
 164:Core/Src/printf.c ****     ((out_fct_wrap_type*)buffer)->fct(character, ((out_fct_wrap_type*)buffer)->arg);
  94              		.loc 1 164 5 is_stmt 1 view .LVU18
  95              		.loc 1 164 33 is_stmt 0 view .LVU19
  96 0004 0A68     		ldr	r2, [r1]
  97              	.LVL3:
  98              		.loc 1 164 6 view .LVU20
  99 0006 4968     		ldr	r1, [r1, #4]
 100              	.LVL4:
 101              		.loc 1 164 6 view .LVU21
 102 0008 9047     		blx	r2
 103              	.LVL5:
 165:Core/Src/printf.c ****   }
 166:Core/Src/printf.c **** }
 104              		.loc 1 166 1 view .LVU22
 105 000a 08BD     		pop	{r3, pc}
 106              	.LVL6:
 107              	.L7:
 108              	.LCFI1:
 109              		.cfi_def_cfa_offset 0
 110              		.cfi_restore 3
 111              		.cfi_restore 14
 112              		.loc 1 166 1 view .LVU23
 113 000c 7047     		bx	lr
 114              		.cfi_endproc
 115              	.LFE3:
 117              		.section	.text._atoi,"ax",%progbits
 118              		.align	1
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 123              	_atoi:
 124              	.LVL7:
 125              	.LFB6:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 6


 167:Core/Src/printf.c **** 
 168:Core/Src/printf.c **** 
 169:Core/Src/printf.c **** // internal secure strlen
 170:Core/Src/printf.c **** // \return The length of the string (excluding the terminating 0) limited by 'maxsize'
 171:Core/Src/printf.c **** static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
 172:Core/Src/printf.c **** {
 173:Core/Src/printf.c ****   const char* s;
 174:Core/Src/printf.c ****   for (s = str; *s && maxsize--; ++s);
 175:Core/Src/printf.c ****   return (unsigned int)(s - str);
 176:Core/Src/printf.c **** }
 177:Core/Src/printf.c **** 
 178:Core/Src/printf.c **** 
 179:Core/Src/printf.c **** // internal test if char is a digit (0-9)
 180:Core/Src/printf.c **** // \return true if char is a digit
 181:Core/Src/printf.c **** static inline bool _is_digit(char ch)
 182:Core/Src/printf.c **** {
 183:Core/Src/printf.c ****   return (ch >= '0') && (ch <= '9');
 184:Core/Src/printf.c **** }
 185:Core/Src/printf.c **** 
 186:Core/Src/printf.c **** 
 187:Core/Src/printf.c **** // internal ASCII string to unsigned int conversion
 188:Core/Src/printf.c **** static unsigned int _atoi(const char** str)
 189:Core/Src/printf.c **** {
 126              		.loc 1 189 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              		.loc 1 189 1 is_stmt 0 view .LVU25
 132 0000 0146     		mov	r1, r0
 190:Core/Src/printf.c ****   unsigned int i = 0U;
 133              		.loc 1 190 3 is_stmt 1 view .LVU26
 134              	.LVL8:
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 135              		.loc 1 191 3 view .LVU27
 190:Core/Src/printf.c ****   unsigned int i = 0U;
 136              		.loc 1 190 16 is_stmt 0 view .LVU28
 137 0002 0020     		movs	r0, #0
 138              	.LVL9:
 139              		.loc 1 191 9 view .LVU29
 140 0004 08E0     		b	.L11
 141              	.LVL10:
 142              	.L12:
 192:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 143              		.loc 1 192 5 is_stmt 1 view .LVU30
 144              		.loc 1 192 11 is_stmt 0 view .LVU31
 145 0006 00EB8000 		add	r0, r0, r0, lsl #2
 146              	.LVL11:
 147              		.loc 1 192 42 view .LVU32
 148 000a 531C     		adds	r3, r2, #1
 149 000c 0B60     		str	r3, [r1]
 150              		.loc 1 192 34 view .LVU33
 151 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 152              		.loc 1 192 17 view .LVU34
 153 0010 03EB4003 		add	r3, r3, r0, lsl #1
 154              		.loc 1 192 7 view .LVU35
 155 0014 A3F13000 		sub	r0, r3, #48
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 7


 156              	.LVL12:
 157              	.L11:
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 158              		.loc 1 191 10 is_stmt 1 view .LVU36
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 159              		.loc 1 191 21 is_stmt 0 view .LVU37
 160 0018 0A68     		ldr	r2, [r1]
 191:Core/Src/printf.c ****   while (_is_digit(**str)) {
 161              		.loc 1 191 10 view .LVU38
 162 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 163              	.LVL13:
 164              	.LBB20:
 165              	.LBI20:
 181:Core/Src/printf.c **** {
 166              		.loc 1 181 20 is_stmt 1 view .LVU39
 167              	.LBB21:
 183:Core/Src/printf.c **** }
 168              		.loc 1 183 3 view .LVU40
 183:Core/Src/printf.c **** }
 169              		.loc 1 183 22 is_stmt 0 view .LVU41
 170 001c 303B     		subs	r3, r3, #48
 171 001e DBB2     		uxtb	r3, r3
 172              	.LVL14:
 183:Core/Src/printf.c **** }
 173              		.loc 1 183 22 view .LVU42
 174              	.LBE21:
 175              	.LBE20:
 191:Core/Src/printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 176              		.loc 1 191 10 discriminator 1 view .LVU43
 177 0020 092B     		cmp	r3, #9
 178 0022 F0D9     		bls	.L12
 193:Core/Src/printf.c ****   }
 194:Core/Src/printf.c ****   return i;
 179              		.loc 1 194 3 is_stmt 1 view .LVU44
 195:Core/Src/printf.c **** }
 180              		.loc 1 195 1 is_stmt 0 view .LVU45
 181 0024 7047     		bx	lr
 182              		.cfi_endproc
 183              	.LFE6:
 185              		.section	.text._out_rev,"ax",%progbits
 186              		.align	1
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 191              	_out_rev:
 192              	.LVL15:
 193              	.LFB7:
 196:Core/Src/printf.c **** 
 197:Core/Src/printf.c **** 
 198:Core/Src/printf.c **** // output the specified string in reverse, taking care of any zero-padding
 199:Core/Src/printf.c **** static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, 
 200:Core/Src/printf.c **** {
 194              		.loc 1 200 1 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 16, pretend = 0, frame = 8
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		.loc 1 200 1 is_stmt 0 view .LVU47
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 8


 199 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 200              	.LCFI2:
 201              		.cfi_def_cfa_offset 36
 202              		.cfi_offset 4, -36
 203              		.cfi_offset 5, -32
 204              		.cfi_offset 6, -28
 205              		.cfi_offset 7, -24
 206              		.cfi_offset 8, -20
 207              		.cfi_offset 9, -16
 208              		.cfi_offset 10, -12
 209              		.cfi_offset 11, -8
 210              		.cfi_offset 14, -4
 211 0004 83B0     		sub	sp, sp, #12
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 48
 214 0006 0546     		mov	r5, r0
 215 0008 0E46     		mov	r6, r1
 216 000a 9346     		mov	fp, r2
 217 000c 1F46     		mov	r7, r3
 218 000e DDF830A0 		ldr	r10, [sp, #48]
 219 0012 0D9C     		ldr	r4, [sp, #52]
 220 0014 DDF83890 		ldr	r9, [sp, #56]
 201:Core/Src/printf.c ****   const size_t start_idx = idx;
 221              		.loc 1 201 3 is_stmt 1 view .LVU48
 222              	.LVL16:
 202:Core/Src/printf.c **** 
 203:Core/Src/printf.c ****   // pad spaces up to given width
 204:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 223              		.loc 1 204 3 view .LVU49
 224              		.loc 1 204 6 is_stmt 0 view .LVU50
 225 0018 0F9B     		ldr	r3, [sp, #60]
 226              	.LVL17:
 227              		.loc 1 204 6 view .LVU51
 228 001a 13F0030F 		tst	r3, #3
 229 001e 19D1     		bne	.L15
 230              	.LBB22:
 205:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 231              		.loc 1 205 17 view .LVU52
 232 0020 A046     		mov	r8, r4
 233              	.LBE22:
 234 0022 0192     		str	r2, [sp, #4]
 235              	.LVL18:
 236              	.L14:
 237              	.LBB23:
 238              		.loc 1 205 28 is_stmt 1 discriminator 1 view .LVU53
 239 0024 C845     		cmp	r8, r9
 240 0026 09D2     		bcs	.L25
 206:Core/Src/printf.c ****       out(' ', buffer, idx++, maxlen);
 241              		.loc 1 206 7 view .LVU54
 242 0028 02F1010B 		add	fp, r2, #1
 243              	.LVL19:
 244              		.loc 1 206 7 is_stmt 0 view .LVU55
 245 002c 3B46     		mov	r3, r7
 246 002e 3146     		mov	r1, r6
 247 0030 2020     		movs	r0, #32
 248 0032 A847     		blx	r5
 249              	.LVL20:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 9


 205:Core/Src/printf.c ****     for (size_t i = len; i < width; i++) {
 250              		.loc 1 205 38 is_stmt 1 discriminator 3 view .LVU56
 251 0034 08F10108 		add	r8, r8, #1
 252              	.LVL21:
 253              		.loc 1 206 7 is_stmt 0 view .LVU57
 254 0038 5A46     		mov	r2, fp
 255 003a F3E7     		b	.L14
 256              	.LVL22:
 257              	.L25:
 258              		.loc 1 206 7 view .LVU58
 259 003c DDF804B0 		ldr	fp, [sp, #4]
 260 0040 08E0     		b	.L15
 261              	.LVL23:
 262              	.L18:
 263              		.loc 1 206 7 view .LVU59
 264              	.LBE23:
 207:Core/Src/printf.c ****     }
 208:Core/Src/printf.c ****   }
 209:Core/Src/printf.c **** 
 210:Core/Src/printf.c ****   // reverse string
 211:Core/Src/printf.c ****   while (len) {
 212:Core/Src/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 265              		.loc 1 212 5 is_stmt 1 view .LVU60
 266 0042 013C     		subs	r4, r4, #1
 267              	.LVL24:
 268              		.loc 1 212 5 is_stmt 0 view .LVU61
 269 0044 02F10108 		add	r8, r2, #1
 270              	.LVL25:
 271              		.loc 1 212 5 view .LVU62
 272 0048 3B46     		mov	r3, r7
 273 004a 3146     		mov	r1, r6
 274 004c 1AF80400 		ldrb	r0, [r10, r4]	@ zero_extendqisi2
 275 0050 A847     		blx	r5
 276              	.LVL26:
 277 0052 4246     		mov	r2, r8
 278              	.LVL27:
 279              	.L15:
 211:Core/Src/printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 280              		.loc 1 211 10 is_stmt 1 view .LVU63
 281 0054 002C     		cmp	r4, #0
 282 0056 F4D1     		bne	.L18
 213:Core/Src/printf.c ****   }
 214:Core/Src/printf.c **** 
 215:Core/Src/printf.c ****   // append pad spaces up to given width
 216:Core/Src/printf.c ****   if (flags & FLAGS_LEFT) {
 283              		.loc 1 216 3 view .LVU64
 284              		.loc 1 216 6 is_stmt 0 view .LVU65
 285 0058 0F9B     		ldr	r3, [sp, #60]
 286 005a 13F0020F 		tst	r3, #2
 287 005e 03D1     		bne	.L19
 288              	.LVL28:
 289              	.L13:
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 218:Core/Src/printf.c ****       out(' ', buffer, idx++, maxlen);
 219:Core/Src/printf.c ****     }
 220:Core/Src/printf.c ****   }
 221:Core/Src/printf.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 10


 222:Core/Src/printf.c ****   return idx;
 223:Core/Src/printf.c **** }
 290              		.loc 1 223 1 view .LVU66
 291 0060 1046     		mov	r0, r2
 292 0062 03B0     		add	sp, sp, #12
 293              	.LCFI4:
 294              		.cfi_remember_state
 295              		.cfi_def_cfa_offset 36
 296              		@ sp needed
 297 0064 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 298              	.LVL29:
 299              	.L19:
 300              	.LCFI5:
 301              		.cfi_restore_state
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 302              		.loc 1 217 28 is_stmt 1 view .LVU67
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 303              		.loc 1 217 16 is_stmt 0 view .LVU68
 304 0068 A2EB0B03 		sub	r3, r2, fp
 217:Core/Src/printf.c ****     while (idx - start_idx < width) {
 305              		.loc 1 217 28 view .LVU69
 306 006c 4B45     		cmp	r3, r9
 307 006e F7D2     		bcs	.L13
 218:Core/Src/printf.c ****     }
 308              		.loc 1 218 7 is_stmt 1 view .LVU70
 309 0070 541C     		adds	r4, r2, #1
 310              	.LVL30:
 218:Core/Src/printf.c ****     }
 311              		.loc 1 218 7 is_stmt 0 view .LVU71
 312 0072 3B46     		mov	r3, r7
 313 0074 3146     		mov	r1, r6
 314 0076 2020     		movs	r0, #32
 315 0078 A847     		blx	r5
 316              	.LVL31:
 317 007a 2246     		mov	r2, r4
 318 007c F4E7     		b	.L19
 319              		.cfi_endproc
 320              	.LFE7:
 322              		.section	.text._ntoa_format,"ax",%progbits
 323              		.align	1
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 328              	_ntoa_format:
 329              	.LVL32:
 330              	.LFB8:
 224:Core/Src/printf.c **** 
 225:Core/Src/printf.c **** 
 226:Core/Src/printf.c **** // internal itoa format
 227:Core/Src/printf.c **** static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, si
 228:Core/Src/printf.c **** {
 331              		.loc 1 228 1 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 28, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		.loc 1 228 1 is_stmt 0 view .LVU73
 336 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 11


 337              	.LCFI6:
 338              		.cfi_def_cfa_offset 28
 339              		.cfi_offset 4, -28
 340              		.cfi_offset 5, -24
 341              		.cfi_offset 6, -20
 342              		.cfi_offset 7, -16
 343              		.cfi_offset 8, -12
 344              		.cfi_offset 9, -8
 345              		.cfi_offset 14, -4
 346 0004 85B0     		sub	sp, sp, #20
 347              	.LCFI7:
 348              		.cfi_def_cfa_offset 48
 349 0006 9946     		mov	r9, r3
 350 0008 0C9D     		ldr	r5, [sp, #48]
 351 000a 0D9C     		ldr	r4, [sp, #52]
 352 000c 9DF83880 		ldrb	r8, [sp, #56]	@ zero_extendqisi2
 353 0010 DDF840E0 		ldr	lr, [sp, #64]
 354 0014 119F     		ldr	r7, [sp, #68]
 355 0016 129E     		ldr	r6, [sp, #72]
 229:Core/Src/printf.c ****   // pad leading zeros
 230:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT)) {
 356              		.loc 1 230 3 is_stmt 1 view .LVU74
 357              		.loc 1 230 6 is_stmt 0 view .LVU75
 358 0018 16F0020F 		tst	r6, #2
 359 001c 21D1     		bne	.L27
 231:Core/Src/printf.c ****     if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 360              		.loc 1 231 5 is_stmt 1 view .LVU76
 361              		.loc 1 231 8 is_stmt 0 view .LVU77
 362 001e 7FB1     		cbz	r7, .L30
 363              		.loc 1 231 15 discriminator 1 view .LVU78
 364 0020 16F0010F 		tst	r6, #1
 365 0024 0CD0     		beq	.L30
 366              		.loc 1 231 42 discriminator 2 view .LVU79
 367 0026 B8F1000F 		cmp	r8, #0
 368 002a 02D1     		bne	.L29
 369              		.loc 1 231 55 discriminator 3 view .LVU80
 370 002c 16F00C0F 		tst	r6, #12
 371 0030 06D0     		beq	.L30
 372              	.L29:
 232:Core/Src/printf.c ****       width--;
 373              		.loc 1 232 7 is_stmt 1 view .LVU81
 374              		.loc 1 232 12 is_stmt 0 view .LVU82
 375 0032 013F     		subs	r7, r7, #1
 376              	.LVL33:
 377              		.loc 1 232 12 view .LVU83
 378 0034 04E0     		b	.L30
 379              	.LVL34:
 380              	.L32:
 233:Core/Src/printf.c ****     }
 234:Core/Src/printf.c ****     while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 235:Core/Src/printf.c ****       buf[len++] = '0';
 381              		.loc 1 235 7 is_stmt 1 view .LVU84
 382              		.loc 1 235 18 is_stmt 0 view .LVU85
 383 0036 4FF0300C 		mov	ip, #48
 384 003a 05F804C0 		strb	ip, [r5, r4]
 385              		.loc 1 235 14 view .LVU86
 386 003e 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 12


 387              	.LVL35:
 388              	.L30:
 234:Core/Src/printf.c ****       buf[len++] = '0';
 389              		.loc 1 234 25 is_stmt 1 view .LVU87
 390 0040 7445     		cmp	r4, lr
 391 0042 01D2     		bcs	.L33
 234:Core/Src/printf.c ****       buf[len++] = '0';
 392              		.loc 1 234 25 is_stmt 0 discriminator 1 view .LVU88
 393 0044 1F2C     		cmp	r4, #31
 394 0046 F6D9     		bls	.L32
 395              	.L33:
 236:Core/Src/printf.c ****     }
 237:Core/Src/printf.c ****     while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 396              		.loc 1 237 53 is_stmt 1 view .LVU89
 397 0048 16F0010F 		tst	r6, #1
 398 004c 09D0     		beq	.L27
 399              		.loc 1 237 36 is_stmt 0 discriminator 1 view .LVU90
 400 004e BC42     		cmp	r4, r7
 401 0050 07D2     		bcs	.L27
 402              		.loc 1 237 53 discriminator 2 view .LVU91
 403 0052 1F2C     		cmp	r4, #31
 404 0054 05D8     		bhi	.L27
 238:Core/Src/printf.c ****       buf[len++] = '0';
 405              		.loc 1 238 7 is_stmt 1 view .LVU92
 406              	.LVL36:
 407              		.loc 1 238 18 is_stmt 0 view .LVU93
 408 0056 4FF0300C 		mov	ip, #48
 409 005a 05F804C0 		strb	ip, [r5, r4]
 410              		.loc 1 238 14 view .LVU94
 411 005e 0134     		adds	r4, r4, #1
 412              	.LVL37:
 413              		.loc 1 238 14 view .LVU95
 414 0060 F2E7     		b	.L33
 415              	.LVL38:
 416              	.L27:
 239:Core/Src/printf.c ****     }
 240:Core/Src/printf.c ****   }
 241:Core/Src/printf.c **** 
 242:Core/Src/printf.c ****   // handle hash
 243:Core/Src/printf.c ****   if (flags & FLAGS_HASH) {
 417              		.loc 1 243 3 is_stmt 1 view .LVU96
 418              		.loc 1 243 6 is_stmt 0 view .LVU97
 419 0062 16F0100F 		tst	r6, #16
 420 0066 14D0     		beq	.L35
 244:Core/Src/printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 421              		.loc 1 244 5 is_stmt 1 view .LVU98
 422              		.loc 1 244 8 is_stmt 0 view .LVU99
 423 0068 16F4806F 		tst	r6, #1024
 424 006c 04D1     		bne	.L36
 425              		.loc 1 244 36 discriminator 1 view .LVU100
 426 006e 1CB1     		cbz	r4, .L36
 427              		.loc 1 244 43 discriminator 2 view .LVU101
 428 0070 7445     		cmp	r4, lr
 429 0072 22D0     		beq	.L37
 430              		.loc 1 244 61 discriminator 3 view .LVU102
 431 0074 BC42     		cmp	r4, r7
 432 0076 20D0     		beq	.L37
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 13


 433              	.LVL39:
 434              	.L36:
 245:Core/Src/printf.c ****       len--;
 246:Core/Src/printf.c ****       if (len && (base == 16U)) {
 247:Core/Src/printf.c ****         len--;
 248:Core/Src/printf.c ****       }
 249:Core/Src/printf.c ****     }
 250:Core/Src/printf.c ****     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 435              		.loc 1 250 5 is_stmt 1 view .LVU103
 436              		.loc 1 250 8 is_stmt 0 view .LVU104
 437 0078 0F9B     		ldr	r3, [sp, #60]
 438 007a 102B     		cmp	r3, #16
 439 007c 36D0     		beq	.L47
 440              	.LVL40:
 441              	.L39:
 251:Core/Src/printf.c ****       buf[len++] = 'x';
 252:Core/Src/printf.c ****     }
 253:Core/Src/printf.c ****     else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 254:Core/Src/printf.c ****       buf[len++] = 'X';
 255:Core/Src/printf.c ****     }
 256:Core/Src/printf.c ****     else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 442              		.loc 1 256 10 is_stmt 1 view .LVU105
 443              		.loc 1 256 13 is_stmt 0 view .LVU106
 444 007e 0F9B     		ldr	r3, [sp, #60]
 445 0080 022B     		cmp	r3, #2
 446 0082 3ED0     		beq	.L48
 447              	.L40:
 448              	.LVL41:
 257:Core/Src/printf.c ****       buf[len++] = 'b';
 258:Core/Src/printf.c ****     }
 259:Core/Src/printf.c ****     if (len < PRINTF_NTOA_BUFFER_SIZE) {
 449              		.loc 1 259 5 is_stmt 1 view .LVU107
 450              		.loc 1 259 8 is_stmt 0 view .LVU108
 451 0084 1F2C     		cmp	r4, #31
 452 0086 0ED8     		bhi	.L41
 260:Core/Src/printf.c ****       buf[len++] = '0';
 453              		.loc 1 260 7 is_stmt 1 view .LVU109
 454              	.LVL42:
 455              		.loc 1 260 18 is_stmt 0 view .LVU110
 456 0088 4FF0300C 		mov	ip, #48
 457 008c 05F804C0 		strb	ip, [r5, r4]
 458              		.loc 1 260 14 view .LVU111
 459 0090 0134     		adds	r4, r4, #1
 460              	.LVL43:
 461              	.L35:
 261:Core/Src/printf.c ****     }
 262:Core/Src/printf.c ****   }
 263:Core/Src/printf.c **** 
 264:Core/Src/printf.c ****   if (len < PRINTF_NTOA_BUFFER_SIZE) {
 462              		.loc 1 264 3 is_stmt 1 view .LVU112
 463              		.loc 1 264 6 is_stmt 0 view .LVU113
 464 0092 1F2C     		cmp	r4, #31
 465 0094 07D8     		bhi	.L41
 265:Core/Src/printf.c ****     if (negative) {
 466              		.loc 1 265 5 is_stmt 1 view .LVU114
 467              		.loc 1 265 8 is_stmt 0 view .LVU115
 468 0096 B8F1000F 		cmp	r8, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 14


 469 009a 3AD0     		beq	.L42
 266:Core/Src/printf.c ****       buf[len++] = '-';
 470              		.loc 1 266 7 is_stmt 1 view .LVU116
 471              	.LVL44:
 472              		.loc 1 266 18 is_stmt 0 view .LVU117
 473 009c 4FF02D0C 		mov	ip, #45
 474 00a0 05F804C0 		strb	ip, [r5, r4]
 475              		.loc 1 266 14 view .LVU118
 476 00a4 0134     		adds	r4, r4, #1
 477              	.LVL45:
 478              	.L41:
 267:Core/Src/printf.c ****     }
 268:Core/Src/printf.c ****     else if (flags & FLAGS_PLUS) {
 269:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 270:Core/Src/printf.c ****     }
 271:Core/Src/printf.c ****     else if (flags & FLAGS_SPACE) {
 272:Core/Src/printf.c ****       buf[len++] = ' ';
 273:Core/Src/printf.c ****     }
 274:Core/Src/printf.c ****   }
 275:Core/Src/printf.c **** 
 276:Core/Src/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 479              		.loc 1 276 3 is_stmt 1 view .LVU119
 480              		.loc 1 276 10 is_stmt 0 view .LVU120
 481 00a6 0396     		str	r6, [sp, #12]
 482 00a8 0297     		str	r7, [sp, #8]
 483 00aa 0194     		str	r4, [sp, #4]
 484 00ac 0095     		str	r5, [sp]
 485 00ae 4B46     		mov	r3, r9
 486 00b0 FFF7FEFF 		bl	_out_rev
 487              	.LVL46:
 277:Core/Src/printf.c **** }
 488              		.loc 1 277 1 view .LVU121
 489 00b4 05B0     		add	sp, sp, #20
 490              	.LCFI8:
 491              		.cfi_remember_state
 492              		.cfi_def_cfa_offset 28
 493              		@ sp needed
 494 00b6 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 495              	.LVL47:
 496              	.L37:
 497              	.LCFI9:
 498              		.cfi_restore_state
 245:Core/Src/printf.c ****       if (len && (base == 16U)) {
 499              		.loc 1 245 7 is_stmt 1 view .LVU122
 246:Core/Src/printf.c ****         len--;
 500              		.loc 1 246 7 view .LVU123
 246:Core/Src/printf.c ****         len--;
 501              		.loc 1 246 10 is_stmt 0 view .LVU124
 502 00ba B4F1010C 		subs	ip, r4, #1
 503              	.LVL48:
 246:Core/Src/printf.c ****         len--;
 504              		.loc 1 246 10 view .LVU125
 505 00be 13D0     		beq	.L44
 246:Core/Src/printf.c ****         len--;
 506              		.loc 1 246 15 discriminator 1 view .LVU126
 507 00c0 0F9B     		ldr	r3, [sp, #60]
 508              	.LVL49:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 15


 246:Core/Src/printf.c ****         len--;
 509              		.loc 1 246 15 discriminator 1 view .LVU127
 510 00c2 102B     		cmp	r3, #16
 511 00c4 0ED0     		beq	.L49
 245:Core/Src/printf.c ****       if (len && (base == 16U)) {
 512              		.loc 1 245 10 view .LVU128
 513 00c6 6446     		mov	r4, ip
 514              	.LVL50:
 515              	.L38:
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 516              		.loc 1 253 10 is_stmt 1 view .LVU129
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 517              		.loc 1 253 13 is_stmt 0 view .LVU130
 518 00c8 0F9B     		ldr	r3, [sp, #60]
 519 00ca 102B     		cmp	r3, #16
 520 00cc D7D1     		bne	.L39
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 521              		.loc 1 253 28 discriminator 1 view .LVU131
 522 00ce 16F0200F 		tst	r6, #32
 523 00d2 D4D0     		beq	.L39
 253:Core/Src/printf.c ****       buf[len++] = 'X';
 524              		.loc 1 253 57 discriminator 2 view .LVU132
 525 00d4 1F2C     		cmp	r4, #31
 526 00d6 D2D8     		bhi	.L39
 254:Core/Src/printf.c ****     }
 527              		.loc 1 254 7 is_stmt 1 view .LVU133
 528              	.LVL51:
 254:Core/Src/printf.c ****     }
 529              		.loc 1 254 18 is_stmt 0 view .LVU134
 530 00d8 4FF0580C 		mov	ip, #88
 531 00dc 05F804C0 		strb	ip, [r5, r4]
 254:Core/Src/printf.c ****     }
 532              		.loc 1 254 14 view .LVU135
 533 00e0 0134     		adds	r4, r4, #1
 534              	.LVL52:
 254:Core/Src/printf.c ****     }
 535              		.loc 1 254 18 view .LVU136
 536 00e2 CFE7     		b	.L40
 537              	.LVL53:
 538              	.L49:
 247:Core/Src/printf.c ****       }
 539              		.loc 1 247 9 is_stmt 1 view .LVU137
 247:Core/Src/printf.c ****       }
 540              		.loc 1 247 12 is_stmt 0 view .LVU138
 541 00e4 023C     		subs	r4, r4, #2
 542              	.LVL54:
 247:Core/Src/printf.c ****       }
 543              		.loc 1 247 12 view .LVU139
 544 00e6 C7E7     		b	.L36
 545              	.LVL55:
 546              	.L44:
 245:Core/Src/printf.c ****       if (len && (base == 16U)) {
 547              		.loc 1 245 10 view .LVU140
 548 00e8 6446     		mov	r4, ip
 549 00ea C5E7     		b	.L36
 550              	.LVL56:
 551              	.L47:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 16


 250:Core/Src/printf.c ****       buf[len++] = 'x';
 552              		.loc 1 250 23 discriminator 1 view .LVU141
 553 00ec 16F0200F 		tst	r6, #32
 554 00f0 EAD1     		bne	.L38
 250:Core/Src/printf.c ****       buf[len++] = 'x';
 555              		.loc 1 250 53 discriminator 2 view .LVU142
 556 00f2 1F2C     		cmp	r4, #31
 557 00f4 E8D8     		bhi	.L38
 251:Core/Src/printf.c ****     }
 558              		.loc 1 251 7 is_stmt 1 view .LVU143
 559              	.LVL57:
 251:Core/Src/printf.c ****     }
 560              		.loc 1 251 18 is_stmt 0 view .LVU144
 561 00f6 4FF0780C 		mov	ip, #120
 562 00fa 05F804C0 		strb	ip, [r5, r4]
 251:Core/Src/printf.c ****     }
 563              		.loc 1 251 14 view .LVU145
 564 00fe 0134     		adds	r4, r4, #1
 565              	.LVL58:
 251:Core/Src/printf.c ****     }
 566              		.loc 1 251 18 view .LVU146
 567 0100 C0E7     		b	.L40
 568              	.LVL59:
 569              	.L48:
 256:Core/Src/printf.c ****       buf[len++] = 'b';
 570              		.loc 1 256 27 discriminator 1 view .LVU147
 571 0102 1F2C     		cmp	r4, #31
 572 0104 CFD8     		bhi	.L41
 257:Core/Src/printf.c ****     }
 573              		.loc 1 257 7 is_stmt 1 view .LVU148
 574              	.LVL60:
 257:Core/Src/printf.c ****     }
 575              		.loc 1 257 18 is_stmt 0 view .LVU149
 576 0106 4FF0620C 		mov	ip, #98
 577 010a 05F804C0 		strb	ip, [r5, r4]
 257:Core/Src/printf.c ****     }
 578              		.loc 1 257 14 view .LVU150
 579 010e 0134     		adds	r4, r4, #1
 580              	.LVL61:
 257:Core/Src/printf.c ****     }
 581              		.loc 1 257 14 view .LVU151
 582 0110 B8E7     		b	.L40
 583              	.L42:
 268:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 584              		.loc 1 268 10 is_stmt 1 view .LVU152
 268:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 585              		.loc 1 268 13 is_stmt 0 view .LVU153
 586 0112 16F0040F 		tst	r6, #4
 587 0116 05D0     		beq	.L43
 269:Core/Src/printf.c ****     }
 588              		.loc 1 269 7 is_stmt 1 view .LVU154
 589              	.LVL62:
 269:Core/Src/printf.c ****     }
 590              		.loc 1 269 18 is_stmt 0 view .LVU155
 591 0118 4FF02B0C 		mov	ip, #43
 592 011c 05F804C0 		strb	ip, [r5, r4]
 269:Core/Src/printf.c ****     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 17


 593              		.loc 1 269 14 view .LVU156
 594 0120 0134     		adds	r4, r4, #1
 595              	.LVL63:
 269:Core/Src/printf.c ****     }
 596              		.loc 1 269 14 view .LVU157
 597 0122 C0E7     		b	.L41
 598              	.L43:
 271:Core/Src/printf.c ****       buf[len++] = ' ';
 599              		.loc 1 271 10 is_stmt 1 view .LVU158
 271:Core/Src/printf.c ****       buf[len++] = ' ';
 600              		.loc 1 271 13 is_stmt 0 view .LVU159
 601 0124 16F0080F 		tst	r6, #8
 602 0128 BDD0     		beq	.L41
 272:Core/Src/printf.c ****     }
 603              		.loc 1 272 7 is_stmt 1 view .LVU160
 604              	.LVL64:
 272:Core/Src/printf.c ****     }
 605              		.loc 1 272 18 is_stmt 0 view .LVU161
 606 012a 4FF0200C 		mov	ip, #32
 607 012e 05F804C0 		strb	ip, [r5, r4]
 272:Core/Src/printf.c ****     }
 608              		.loc 1 272 14 view .LVU162
 609 0132 0134     		adds	r4, r4, #1
 610              	.LVL65:
 272:Core/Src/printf.c ****     }
 611              		.loc 1 272 14 view .LVU163
 612 0134 B7E7     		b	.L41
 613              		.cfi_endproc
 614              	.LFE8:
 616              		.section	.text._ntoa_long,"ax",%progbits
 617              		.align	1
 618              		.syntax unified
 619              		.thumb
 620              		.thumb_func
 622              	_ntoa_long:
 623              	.LVL66:
 624              	.LFB9:
 278:Core/Src/printf.c **** 
 279:Core/Src/printf.c **** 
 280:Core/Src/printf.c **** // internal itoa for 'long' type
 281:Core/Src/printf.c **** static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long v
 282:Core/Src/printf.c **** {
 625              		.loc 1 282 1 is_stmt 1 view -0
 626              		.cfi_startproc
 627              		@ args = 24, pretend = 0, frame = 32
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              		.loc 1 282 1 is_stmt 0 view .LVU165
 630 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 631              	.LCFI10:
 632              		.cfi_def_cfa_offset 20
 633              		.cfi_offset 4, -20
 634              		.cfi_offset 5, -16
 635              		.cfi_offset 6, -12
 636              		.cfi_offset 7, -8
 637              		.cfi_offset 14, -4
 638 0002 91B0     		sub	sp, sp, #68
 639              	.LCFI11:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 18


 640              		.cfi_def_cfa_offset 88
 641 0004 169C     		ldr	r4, [sp, #88]
 642 0006 189D     		ldr	r5, [sp, #96]
 643 0008 1B9E     		ldr	r6, [sp, #108]
 283:Core/Src/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 644              		.loc 1 283 3 is_stmt 1 view .LVU166
 284:Core/Src/printf.c ****   size_t len = 0U;
 645              		.loc 1 284 3 view .LVU167
 646              	.LVL67:
 285:Core/Src/printf.c **** 
 286:Core/Src/printf.c ****   // no hash for 0 values
 287:Core/Src/printf.c ****   if (!value) {
 647              		.loc 1 287 3 view .LVU168
 648              		.loc 1 287 6 is_stmt 0 view .LVU169
 649 000a 0CB9     		cbnz	r4, .L51
 288:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 650              		.loc 1 288 5 is_stmt 1 view .LVU170
 651              		.loc 1 288 11 is_stmt 0 view .LVU171
 652 000c 26F01006 		bic	r6, r6, #16
 653              	.LVL68:
 654              	.L51:
 289:Core/Src/printf.c ****   }
 290:Core/Src/printf.c **** 
 291:Core/Src/printf.c ****   // write if precision != 0 and value is != 0
 292:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 655              		.loc 1 292 3 is_stmt 1 view .LVU172
 656              		.loc 1 292 6 is_stmt 0 view .LVU173
 657 0010 16F4806E 		ands	lr, r6, #1024
 658 0014 16D0     		beq	.L57
 659              		.loc 1 292 34 discriminator 1 view .LVU174
 660 0016 64B3     		cbz	r4, .L58
 661 0018 4FF0000E 		mov	lr, #0
 662 001c 12E0     		b	.L57
 663              	.LVL69:
 664              	.L62:
 665              	.LBB24:
 293:Core/Src/printf.c ****     do {
 294:Core/Src/printf.c ****       const char digit = (char)(value % base);
 295:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 666              		.loc 1 295 18 discriminator 1 view .LVU175
 667 001e 0CF1300C 		add	ip, ip, #48
 668              	.LVL70:
 669              		.loc 1 295 18 discriminator 1 view .LVU176
 670 0022 5FFA8CFC 		uxtb	ip, ip
 671              	.LVL71:
 672              	.L55:
 673              		.loc 1 295 14 discriminator 8 view .LVU177
 674 0026 0EF10107 		add	r7, lr, #1
 675              	.LVL72:
 676              		.loc 1 295 18 discriminator 8 view .LVU178
 677 002a 0EF1400E 		add	lr, lr, #64
 678 002e EE44     		add	lr, sp, lr
 679 0030 0EF820CC 		strb	ip, [lr, #-32]
 296:Core/Src/printf.c ****       value /= base;
 680              		.loc 1 296 7 is_stmt 1 view .LVU179
 681              		.loc 1 296 13 is_stmt 0 view .LVU180
 682 0034 B4FBF5FC 		udiv	ip, r4, r5
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 19


 683              	.LVL73:
 684              		.loc 1 296 13 view .LVU181
 685              	.LBE24:
 297:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 686              		.loc 1 297 20 is_stmt 1 view .LVU182
 687 0038 AC42     		cmp	r4, r5
 688 003a 1BD3     		bcc	.L53
 689              		.loc 1 297 20 is_stmt 0 discriminator 1 view .LVU183
 690 003c 1F2F     		cmp	r7, #31
 691 003e 19D8     		bhi	.L53
 692              	.LBB25:
 295:Core/Src/printf.c ****       value /= base;
 693              		.loc 1 295 14 discriminator 8 view .LVU184
 694 0040 BE46     		mov	lr, r7
 296:Core/Src/printf.c ****       value /= base;
 695              		.loc 1 296 13 view .LVU185
 696 0042 6446     		mov	r4, ip
 697              	.LVL74:
 698              	.L57:
 296:Core/Src/printf.c ****       value /= base;
 699              		.loc 1 296 13 view .LVU186
 700              	.LBE25:
 293:Core/Src/printf.c ****       const char digit = (char)(value % base);
 701              		.loc 1 293 5 is_stmt 1 view .LVU187
 702              	.LBB26:
 294:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 703              		.loc 1 294 7 view .LVU188
 294:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 704              		.loc 1 294 39 is_stmt 0 view .LVU189
 705 0044 B4FBF5FC 		udiv	ip, r4, r5
 706 0048 05FB1C4C 		mls	ip, r5, ip, r4
 294:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 707              		.loc 1 294 18 view .LVU190
 708 004c 5FFA8CFC 		uxtb	ip, ip
 709              	.LVL75:
 295:Core/Src/printf.c ****       value /= base;
 710              		.loc 1 295 7 is_stmt 1 view .LVU191
 295:Core/Src/printf.c ****       value /= base;
 711              		.loc 1 295 18 is_stmt 0 view .LVU192
 712 0050 BCF1090F 		cmp	ip, #9
 713 0054 E3D9     		bls	.L62
 295:Core/Src/printf.c ****       value /= base;
 714              		.loc 1 295 85 discriminator 2 view .LVU193
 715 0056 16F0200F 		tst	r6, #32
 716 005a 08D0     		beq	.L59
 295:Core/Src/printf.c ****       value /= base;
 717              		.loc 1 295 85 discriminator 4 view .LVU194
 718 005c 4127     		movs	r7, #65
 719              	.L56:
 295:Core/Src/printf.c ****       value /= base;
 720              		.loc 1 295 85 discriminator 7 view .LVU195
 721 005e BC44     		add	ip, ip, r7
 722              	.LVL76:
 295:Core/Src/printf.c ****       value /= base;
 723              		.loc 1 295 85 discriminator 7 view .LVU196
 724 0060 5FFA8CFC 		uxtb	ip, ip
 295:Core/Src/printf.c ****       value /= base;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 20


 725              		.loc 1 295 18 discriminator 7 view .LVU197
 726 0064 ACF10A0C 		sub	ip, ip, #10
 727 0068 5FFA8CFC 		uxtb	ip, ip
 728 006c DBE7     		b	.L55
 729              	.LVL77:
 730              	.L59:
 295:Core/Src/printf.c ****       value /= base;
 731              		.loc 1 295 85 discriminator 5 view .LVU198
 732 006e 6127     		movs	r7, #97
 733 0070 F5E7     		b	.L56
 734              	.LVL78:
 735              	.L58:
 295:Core/Src/printf.c ****       value /= base;
 736              		.loc 1 295 85 discriminator 5 view .LVU199
 737              	.LBE26:
 284:Core/Src/printf.c **** 
 738              		.loc 1 284 10 view .LVU200
 739 0072 2746     		mov	r7, r4
 740              	.LVL79:
 741              	.L53:
 298:Core/Src/printf.c ****   }
 299:Core/Src/printf.c **** 
 300:Core/Src/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 742              		.loc 1 300 3 is_stmt 1 view .LVU201
 743              		.loc 1 300 10 is_stmt 0 view .LVU202
 744 0074 0696     		str	r6, [sp, #24]
 745 0076 1A9C     		ldr	r4, [sp, #104]
 746 0078 0594     		str	r4, [sp, #20]
 747 007a 199C     		ldr	r4, [sp, #100]
 748 007c 0494     		str	r4, [sp, #16]
 749 007e 0395     		str	r5, [sp, #12]
 750 0080 9DF85C40 		ldrb	r4, [sp, #92]	@ zero_extendqisi2
 751 0084 0294     		str	r4, [sp, #8]
 752 0086 0197     		str	r7, [sp, #4]
 753 0088 08AC     		add	r4, sp, #32
 754 008a 0094     		str	r4, [sp]
 755 008c FFF7FEFF 		bl	_ntoa_format
 756              	.LVL80:
 301:Core/Src/printf.c **** }
 757              		.loc 1 301 1 view .LVU203
 758 0090 11B0     		add	sp, sp, #68
 759              	.LCFI12:
 760              		.cfi_def_cfa_offset 20
 761              		@ sp needed
 762 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 763              		.loc 1 301 1 view .LVU204
 764              		.cfi_endproc
 765              	.LFE9:
 767              		.global	__aeabi_uldivmod
 768              		.section	.text._ntoa_long_long,"ax",%progbits
 769              		.align	1
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 774              	_ntoa_long_long:
 775              	.LVL81:
 776              	.LFB10:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 21


 302:Core/Src/printf.c **** 
 303:Core/Src/printf.c **** 
 304:Core/Src/printf.c **** // internal itoa for 'long long' type
 305:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 306:Core/Src/printf.c **** static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned l
 307:Core/Src/printf.c **** {
 777              		.loc 1 307 1 is_stmt 1 view -0
 778              		.cfi_startproc
 779              		@ args = 36, pretend = 0, frame = 48
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              		.loc 1 307 1 is_stmt 0 view .LVU206
 782 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 783              	.LCFI13:
 784              		.cfi_def_cfa_offset 36
 785              		.cfi_offset 4, -36
 786              		.cfi_offset 5, -32
 787              		.cfi_offset 6, -28
 788              		.cfi_offset 7, -24
 789              		.cfi_offset 8, -20
 790              		.cfi_offset 9, -16
 791              		.cfi_offset 10, -12
 792              		.cfi_offset 11, -8
 793              		.cfi_offset 14, -4
 794 0004 95B0     		sub	sp, sp, #84
 795              	.LCFI14:
 796              		.cfi_def_cfa_offset 120
 797 0006 0990     		str	r0, [sp, #36]
 798 0008 0A91     		str	r1, [sp, #40]
 799 000a 0B92     		str	r2, [sp, #44]
 800 000c 9846     		mov	r8, r3
 801 000e DDF878B0 		ldr	fp, [sp, #120]
 802 0012 DDF87C90 		ldr	r9, [sp, #124]
 803 0016 229D     		ldr	r5, [sp, #136]
 804 0018 239F     		ldr	r7, [sp, #140]
 805 001a 269E     		ldr	r6, [sp, #152]
 308:Core/Src/printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 806              		.loc 1 308 3 is_stmt 1 view .LVU207
 309:Core/Src/printf.c ****   size_t len = 0U;
 807              		.loc 1 309 3 view .LVU208
 808              	.LVL82:
 310:Core/Src/printf.c **** 
 311:Core/Src/printf.c ****   // no hash for 0 values
 312:Core/Src/printf.c ****   if (!value) {
 809              		.loc 1 312 3 view .LVU209
 810              		.loc 1 312 6 is_stmt 0 view .LVU210
 811 001c 5BEA0902 		orrs	r2, fp, r9
 812              	.LVL83:
 813              		.loc 1 312 6 view .LVU211
 814 0020 01D1     		bne	.L64
 313:Core/Src/printf.c ****     flags &= ~FLAGS_HASH;
 815              		.loc 1 313 5 is_stmt 1 view .LVU212
 816              		.loc 1 313 11 is_stmt 0 view .LVU213
 817 0022 26F01006 		bic	r6, r6, #16
 818              	.LVL84:
 819              	.L64:
 314:Core/Src/printf.c ****   }
 315:Core/Src/printf.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 22


 316:Core/Src/printf.c ****   // write if precision != 0 and value is != 0
 317:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 820              		.loc 1 317 3 is_stmt 1 view .LVU214
 821              		.loc 1 317 6 is_stmt 0 view .LVU215
 822 0026 16F48064 		ands	r4, r6, #1024
 823 002a 1ED0     		beq	.L70
 824              		.loc 1 317 34 discriminator 1 view .LVU216
 825 002c 5BEA0902 		orrs	r2, fp, r9
 826 0030 2FD0     		beq	.L71
 827 0032 0024     		movs	r4, #0
 828 0034 19E0     		b	.L70
 829              	.LVL85:
 830              	.L77:
 831              	.LBB27:
 318:Core/Src/printf.c ****     do {
 319:Core/Src/printf.c ****       const char digit = (char)(value % base);
 320:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 832              		.loc 1 320 18 discriminator 1 view .LVU217
 833 0036 3032     		adds	r2, r2, #48
 834              	.LVL86:
 835              		.loc 1 320 18 discriminator 1 view .LVU218
 836 0038 D3B2     		uxtb	r3, r2
 837              	.LVL87:
 838              	.L68:
 839              		.loc 1 320 14 discriminator 8 view .LVU219
 840 003a 04F1010A 		add	r10, r4, #1
 841              	.LVL88:
 842              		.loc 1 320 18 discriminator 8 view .LVU220
 843 003e 04F15002 		add	r2, r4, #80
 844 0042 0DEB0204 		add	r4, sp, r2
 845 0046 04F8203C 		strb	r3, [r4, #-32]
 321:Core/Src/printf.c ****       value /= base;
 846              		.loc 1 321 7 is_stmt 1 view .LVU221
 847              		.loc 1 321 13 is_stmt 0 view .LVU222
 848 004a 2A46     		mov	r2, r5
 849 004c 3B46     		mov	r3, r7
 850 004e 5846     		mov	r0, fp
 851 0050 4946     		mov	r1, r9
 852 0052 FFF7FEFF 		bl	__aeabi_uldivmod
 853              	.LVL89:
 854              		.loc 1 321 13 view .LVU223
 855              	.LBE27:
 322:Core/Src/printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 856              		.loc 1 322 20 is_stmt 1 view .LVU224
 857 0056 AB45     		cmp	fp, r5
 858 0058 79EB0709 		sbcs	r9, r9, r7
 859 005c 1BD3     		bcc	.L66
 860              		.loc 1 322 20 is_stmt 0 discriminator 1 view .LVU225
 861 005e BAF11F0F 		cmp	r10, #31
 862 0062 18D8     		bhi	.L66
 863              	.LBB28:
 320:Core/Src/printf.c ****       value /= base;
 864              		.loc 1 320 14 discriminator 8 view .LVU226
 865 0064 5446     		mov	r4, r10
 321:Core/Src/printf.c ****       value /= base;
 866              		.loc 1 321 13 view .LVU227
 867 0066 8346     		mov	fp, r0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 23


 868 0068 8946     		mov	r9, r1
 869              	.LVL90:
 870              	.L70:
 321:Core/Src/printf.c ****       value /= base;
 871              		.loc 1 321 13 view .LVU228
 872              	.LBE28:
 318:Core/Src/printf.c ****       const char digit = (char)(value % base);
 873              		.loc 1 318 5 is_stmt 1 view .LVU229
 874              	.LBB29:
 319:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 875              		.loc 1 319 7 view .LVU230
 319:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 876              		.loc 1 319 39 is_stmt 0 view .LVU231
 877 006a 2A46     		mov	r2, r5
 878 006c 3B46     		mov	r3, r7
 879 006e 5846     		mov	r0, fp
 880 0070 4946     		mov	r1, r9
 881 0072 FFF7FEFF 		bl	__aeabi_uldivmod
 882              	.LVL91:
 319:Core/Src/printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 883              		.loc 1 319 18 view .LVU232
 884 0076 D2B2     		uxtb	r2, r2
 885              	.LVL92:
 320:Core/Src/printf.c ****       value /= base;
 886              		.loc 1 320 7 is_stmt 1 view .LVU233
 320:Core/Src/printf.c ****       value /= base;
 887              		.loc 1 320 18 is_stmt 0 view .LVU234
 888 0078 092A     		cmp	r2, #9
 889 007a DCD9     		bls	.L77
 320:Core/Src/printf.c ****       value /= base;
 890              		.loc 1 320 85 discriminator 2 view .LVU235
 891 007c 16F0200F 		tst	r6, #32
 892 0080 05D0     		beq	.L72
 320:Core/Src/printf.c ****       value /= base;
 893              		.loc 1 320 85 discriminator 4 view .LVU236
 894 0082 4123     		movs	r3, #65
 895              	.L69:
 320:Core/Src/printf.c ****       value /= base;
 896              		.loc 1 320 85 discriminator 7 view .LVU237
 897 0084 1344     		add	r3, r3, r2
 898 0086 DBB2     		uxtb	r3, r3
 320:Core/Src/printf.c ****       value /= base;
 899              		.loc 1 320 18 discriminator 7 view .LVU238
 900 0088 0A3B     		subs	r3, r3, #10
 901 008a DBB2     		uxtb	r3, r3
 902 008c D5E7     		b	.L68
 903              	.L72:
 320:Core/Src/printf.c ****       value /= base;
 904              		.loc 1 320 85 discriminator 5 view .LVU239
 905 008e 6123     		movs	r3, #97
 906 0090 F8E7     		b	.L69
 907              	.LVL93:
 908              	.L71:
 320:Core/Src/printf.c ****       value /= base;
 909              		.loc 1 320 85 discriminator 5 view .LVU240
 910              	.LBE29:
 309:Core/Src/printf.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 24


 911              		.loc 1 309 10 view .LVU241
 912 0092 4FF0000A 		mov	r10, #0
 913              	.LVL94:
 914              	.L66:
 323:Core/Src/printf.c ****   }
 324:Core/Src/printf.c **** 
 325:Core/Src/printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 915              		.loc 1 325 3 is_stmt 1 view .LVU242
 916              		.loc 1 325 10 is_stmt 0 view .LVU243
 917 0096 0696     		str	r6, [sp, #24]
 918 0098 259B     		ldr	r3, [sp, #148]
 919 009a 0593     		str	r3, [sp, #20]
 920 009c 249B     		ldr	r3, [sp, #144]
 921 009e 0493     		str	r3, [sp, #16]
 922 00a0 0395     		str	r5, [sp, #12]
 923 00a2 9DF88030 		ldrb	r3, [sp, #128]	@ zero_extendqisi2
 924 00a6 0293     		str	r3, [sp, #8]
 925 00a8 CDF804A0 		str	r10, [sp, #4]
 926 00ac 0CAB     		add	r3, sp, #48
 927 00ae 0093     		str	r3, [sp]
 928 00b0 4346     		mov	r3, r8
 929 00b2 0B9A     		ldr	r2, [sp, #44]
 930 00b4 0A99     		ldr	r1, [sp, #40]
 931 00b6 0998     		ldr	r0, [sp, #36]
 932 00b8 FFF7FEFF 		bl	_ntoa_format
 933              	.LVL95:
 326:Core/Src/printf.c **** }
 934              		.loc 1 326 1 view .LVU244
 935 00bc 15B0     		add	sp, sp, #84
 936              	.LCFI15:
 937              		.cfi_def_cfa_offset 36
 938              		@ sp needed
 939 00be BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 940              		.loc 1 326 1 view .LVU245
 941              		.cfi_endproc
 942              	.LFE10:
 944              		.global	__aeabi_dcmpeq
 945              		.global	__aeabi_dcmpgt
 946              		.global	__aeabi_dcmplt
 947              		.global	__aeabi_i2d
 948              		.global	__aeabi_dmul
 949              		.global	__aeabi_dadd
 950              		.global	__aeabi_dsub
 951              		.global	__aeabi_d2iz
 952              		.global	__aeabi_ddiv
 953              		.global	__aeabi_dcmpge
 954              		.section	.text._etoa,"ax",%progbits
 955              		.align	1
 956              		.syntax unified
 957              		.thumb
 958              		.thumb_func
 960              	_etoa:
 961              	.LVL96:
 962              	.LFB12:
 327:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_LONG_LONG
 328:Core/Src/printf.c **** 
 329:Core/Src/printf.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 25


 330:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 331:Core/Src/printf.c **** 
 332:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 333:Core/Src/printf.c **** // forward declaration so that _ftoa can switch to exp notation for values > PRINTF_MAX_FLOAT
 334:Core/Src/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 335:Core/Src/printf.c **** #endif
 336:Core/Src/printf.c **** 
 337:Core/Src/printf.c **** 
 338:Core/Src/printf.c **** // internal ftoa for fixed decimal floating point
 339:Core/Src/printf.c **** static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 340:Core/Src/printf.c **** {
 341:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 342:Core/Src/printf.c ****   size_t len  = 0U;
 343:Core/Src/printf.c ****   double diff = 0.0;
 344:Core/Src/printf.c **** 
 345:Core/Src/printf.c ****   // powers of 10
 346:Core/Src/printf.c ****   static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 10
 347:Core/Src/printf.c **** 
 348:Core/Src/printf.c ****   // test for special values
 349:Core/Src/printf.c ****   if (value != value)
 350:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 351:Core/Src/printf.c ****   if (value < -DBL_MAX)
 352:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 353:Core/Src/printf.c ****   if (value > DBL_MAX)
 354:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 355:Core/Src/printf.c **** 
 356:Core/Src/printf.c ****   // test for very large values
 357:Core/Src/printf.c ****   // standard printf behavior is to print EVERY whole number digit -- which could be 100s of charac
 358:Core/Src/printf.c ****   if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 359:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 360:Core/Src/printf.c ****     return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 361:Core/Src/printf.c **** #else
 362:Core/Src/printf.c ****     return 0U;
 363:Core/Src/printf.c **** #endif
 364:Core/Src/printf.c ****   }
 365:Core/Src/printf.c **** 
 366:Core/Src/printf.c ****   // test for negative
 367:Core/Src/printf.c ****   bool negative = false;
 368:Core/Src/printf.c ****   if (value < 0) {
 369:Core/Src/printf.c ****     negative = true;
 370:Core/Src/printf.c ****     value = 0 - value;
 371:Core/Src/printf.c ****   }
 372:Core/Src/printf.c **** 
 373:Core/Src/printf.c ****   // set default precision, if not set explicitly
 374:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 375:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 376:Core/Src/printf.c ****   }
 377:Core/Src/printf.c ****   // limit precision to 9, cause a prec >= 10 can lead to overflow errors
 378:Core/Src/printf.c ****   while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 379:Core/Src/printf.c ****     buf[len++] = '0';
 380:Core/Src/printf.c ****     prec--;
 381:Core/Src/printf.c ****   }
 382:Core/Src/printf.c **** 
 383:Core/Src/printf.c ****   int whole = (int)value;
 384:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 385:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 386:Core/Src/printf.c ****   diff = tmp - frac;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 26


 387:Core/Src/printf.c **** 
 388:Core/Src/printf.c ****   if (diff > 0.5) {
 389:Core/Src/printf.c ****     ++frac;
 390:Core/Src/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 391:Core/Src/printf.c ****     if (frac >= pow10[prec]) {
 392:Core/Src/printf.c ****       frac = 0;
 393:Core/Src/printf.c ****       ++whole;
 394:Core/Src/printf.c ****     }
 395:Core/Src/printf.c ****   }
 396:Core/Src/printf.c ****   else if (diff < 0.5) {
 397:Core/Src/printf.c ****   }
 398:Core/Src/printf.c ****   else if ((frac == 0U) || (frac & 1U)) {
 399:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 400:Core/Src/printf.c ****     ++frac;
 401:Core/Src/printf.c ****   }
 402:Core/Src/printf.c **** 
 403:Core/Src/printf.c ****   if (prec == 0U) {
 404:Core/Src/printf.c ****     diff = value - (double)whole;
 405:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 406:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 407:Core/Src/printf.c ****       // 1.5 -> 2, but 2.5 -> 2
 408:Core/Src/printf.c ****       ++whole;
 409:Core/Src/printf.c ****     }
 410:Core/Src/printf.c ****   }
 411:Core/Src/printf.c ****   else {
 412:Core/Src/printf.c ****     unsigned int count = prec;
 413:Core/Src/printf.c ****     // now do fractional part, as an unsigned number
 414:Core/Src/printf.c ****     while (len < PRINTF_FTOA_BUFFER_SIZE) {
 415:Core/Src/printf.c ****       --count;
 416:Core/Src/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 417:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 418:Core/Src/printf.c ****         break;
 419:Core/Src/printf.c ****       }
 420:Core/Src/printf.c ****     }
 421:Core/Src/printf.c ****     // add extra 0s
 422:Core/Src/printf.c ****     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 423:Core/Src/printf.c ****       buf[len++] = '0';
 424:Core/Src/printf.c ****     }
 425:Core/Src/printf.c ****     if (len < PRINTF_FTOA_BUFFER_SIZE) {
 426:Core/Src/printf.c ****       // add decimal
 427:Core/Src/printf.c ****       buf[len++] = '.';
 428:Core/Src/printf.c ****     }
 429:Core/Src/printf.c ****   }
 430:Core/Src/printf.c **** 
 431:Core/Src/printf.c ****   // do whole part, number is reversed
 432:Core/Src/printf.c ****   while (len < PRINTF_FTOA_BUFFER_SIZE) {
 433:Core/Src/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 434:Core/Src/printf.c ****     if (!(whole /= 10)) {
 435:Core/Src/printf.c ****       break;
 436:Core/Src/printf.c ****     }
 437:Core/Src/printf.c ****   }
 438:Core/Src/printf.c **** 
 439:Core/Src/printf.c ****   // pad leading zeros
 440:Core/Src/printf.c ****   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 441:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 442:Core/Src/printf.c ****       width--;
 443:Core/Src/printf.c ****     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 27


 444:Core/Src/printf.c ****     while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 445:Core/Src/printf.c ****       buf[len++] = '0';
 446:Core/Src/printf.c ****     }
 447:Core/Src/printf.c ****   }
 448:Core/Src/printf.c **** 
 449:Core/Src/printf.c ****   if (len < PRINTF_FTOA_BUFFER_SIZE) {
 450:Core/Src/printf.c ****     if (negative) {
 451:Core/Src/printf.c ****       buf[len++] = '-';
 452:Core/Src/printf.c ****     }
 453:Core/Src/printf.c ****     else if (flags & FLAGS_PLUS) {
 454:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 455:Core/Src/printf.c ****     }
 456:Core/Src/printf.c ****     else if (flags & FLAGS_SPACE) {
 457:Core/Src/printf.c ****       buf[len++] = ' ';
 458:Core/Src/printf.c ****     }
 459:Core/Src/printf.c ****   }
 460:Core/Src/printf.c **** 
 461:Core/Src/printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 462:Core/Src/printf.c **** }
 463:Core/Src/printf.c **** 
 464:Core/Src/printf.c **** 
 465:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 466:Core/Src/printf.c **** // internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.ja
 467:Core/Src/printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 468:Core/Src/printf.c **** {
 963              		.loc 1 468 1 is_stmt 1 view -0
 964              		.cfi_startproc
 965              		@ args = 12, pretend = 0, frame = 48
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              		.loc 1 468 1 is_stmt 0 view .LVU247
 968 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 969              	.LCFI16:
 970              		.cfi_def_cfa_offset 36
 971              		.cfi_offset 4, -36
 972              		.cfi_offset 5, -32
 973              		.cfi_offset 6, -28
 974              		.cfi_offset 7, -24
 975              		.cfi_offset 8, -20
 976              		.cfi_offset 9, -16
 977              		.cfi_offset 10, -12
 978              		.cfi_offset 11, -8
 979              		.cfi_offset 14, -4
 980 0004 2DED028B 		vpush.64	{d8}
 981              	.LCFI17:
 982              		.cfi_def_cfa_offset 44
 983              		.cfi_offset 80, -44
 984              		.cfi_offset 81, -40
 985 0008 93B0     		sub	sp, sp, #76
 986              	.LCFI18:
 987              		.cfi_def_cfa_offset 120
 988 000a 8246     		mov	r10, r0
 989 000c 0C46     		mov	r4, r1
 990 000e 9346     		mov	fp, r2
 991 0010 1D46     		mov	r5, r3
 992 0012 57EC106B 		vmov	r6, r7, d0
 993 0016 8DED080B 		vstr.64	d0, [sp, #32]
 469:Core/Src/printf.c ****   // check for NaN and special values
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 28


 470:Core/Src/printf.c ****   if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 994              		.loc 1 470 3 is_stmt 1 view .LVU248
 995              		.loc 1 470 6 is_stmt 0 view .LVU249
 996 001a 3246     		mov	r2, r6
 997              	.LVL97:
 998              		.loc 1 470 6 view .LVU250
 999 001c 3B46     		mov	r3, r7
 1000              	.LVL98:
 1001              		.loc 1 470 6 view .LVU251
 1002 001e 3046     		mov	r0, r6
 1003              	.LVL99:
 1004              		.loc 1 470 6 view .LVU252
 1005 0020 3946     		mov	r1, r7
 1006              	.LVL100:
 1007              		.loc 1 470 6 view .LVU253
 1008 0022 FFF7FEFF 		bl	__aeabi_dcmpeq
 1009              	.LVL101:
 1010              		.loc 1 470 6 view .LVU254
 1011 0026 0028     		cmp	r0, #0
 1012 0028 00F00981 		beq	.L79
 1013              		.loc 1 470 24 discriminator 1 view .LVU255
 1014 002c 4FF0FF32 		mov	r2, #-1
 1015 0030 B14B     		ldr	r3, .L120+72
 1016 0032 3046     		mov	r0, r6
 1017 0034 3946     		mov	r1, r7
 1018 0036 FFF7FEFF 		bl	__aeabi_dcmpgt
 1019              	.LVL102:
 1020 003a 0028     		cmp	r0, #0
 1021 003c 40F0FF80 		bne	.L79
 1022              		.loc 1 470 45 discriminator 2 view .LVU256
 1023 0040 4FF0FF32 		mov	r2, #-1
 1024 0044 6FF48013 		mvn	r3, #1048576
 1025 0048 3046     		mov	r0, r6
 1026 004a 3946     		mov	r1, r7
 1027 004c FFF7FEFF 		bl	__aeabi_dcmplt
 1028              	.LVL103:
 1029 0050 0028     		cmp	r0, #0
 1030 0052 40F0F480 		bne	.L79
 471:Core/Src/printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 472:Core/Src/printf.c ****   }
 473:Core/Src/printf.c **** 
 474:Core/Src/printf.c ****   // determine the sign
 475:Core/Src/printf.c ****   const bool negative = value < 0;
 1031              		.loc 1 475 3 is_stmt 1 view .LVU257
 1032              	.LVL104:
 476:Core/Src/printf.c ****   if (negative) {
 1033              		.loc 1 476 3 view .LVU258
 1034              		.loc 1 476 6 is_stmt 0 view .LVU259
 1035 0056 0022     		movs	r2, #0
 1036 0058 0023     		movs	r3, #0
 1037 005a DDE90867 		ldrd	r6, [sp, #32]
 1038              		.loc 1 476 6 view .LVU260
 1039 005e 3046     		mov	r0, r6
 1040 0060 3946     		mov	r1, r7
 1041 0062 FFF7FEFF 		bl	__aeabi_dcmplt
 1042              	.LVL105:
 1043 0066 0028     		cmp	r0, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 29


 1044 0068 40F0FC80 		bne	.L118
 1045 006c 9DED087B 		vldr.64	d7, [sp, #32]
 1046 0070 8DED067B 		vstr.64	d7, [sp, #24]
 1047              	.LVL106:
 1048              	.L83:
 477:Core/Src/printf.c ****     value = -value;
 478:Core/Src/printf.c ****   }
 479:Core/Src/printf.c **** 
 480:Core/Src/printf.c ****   // default precision
 481:Core/Src/printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 1049              		.loc 1 481 3 is_stmt 1 view .LVU261
 1050              		.loc 1 481 6 is_stmt 0 view .LVU262
 1051 0074 209B     		ldr	r3, [sp, #128]
 1052 0076 13F48063 		ands	r3, r3, #1024
 1053 007a 1193     		str	r3, [sp, #68]
 1054 007c 01D1     		bne	.L85
 482:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1055              		.loc 1 482 10 view .LVU263
 1056 007e 0623     		movs	r3, #6
 1057 0080 1E93     		str	r3, [sp, #120]
 1058              	.LVL107:
 1059              	.L85:
 483:Core/Src/printf.c ****   }
 484:Core/Src/printf.c **** 
 485:Core/Src/printf.c ****   // determine the decimal exponent
 486:Core/Src/printf.c ****   // based on the algorithm by David Gay (https://www.ampl.com/netlib/fp/dtoa.c)
 487:Core/Src/printf.c ****   union {
 1060              		.loc 1 487 3 is_stmt 1 view .LVU264
 488:Core/Src/printf.c ****     uint64_t U;
 489:Core/Src/printf.c ****     double   F;
 490:Core/Src/printf.c ****   } conv;
 491:Core/Src/printf.c **** 
 492:Core/Src/printf.c ****   conv.F = value;
 1061              		.loc 1 492 3 view .LVU265
 493:Core/Src/printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
 1062              		.loc 1 493 3 view .LVU266
 1063 0082 DDE90601 		ldrd	r0, [sp, #24]
 1064 0086 0246     		mov	r2, r0
 1065              		.loc 1 493 14 is_stmt 0 view .LVU267
 1066 0088 C1F30A50 		ubfx	r0, r1, #20, #11
 1067              	.LVL108:
 494:Core/Src/printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is n
 1068              		.loc 1 494 3 is_stmt 1 view .LVU268
 1069              		.loc 1 494 20 is_stmt 0 view .LVU269
 1070 008c C1F31303 		ubfx	r3, r1, #0, #20
 1071              		.loc 1 494 44 view .LVU270
 1072 0090 9046     		mov	r8, r2
 1073 0092 43F07F59 		orr	r9, r3, #1069547520
 1074 0096 49F44019 		orr	r9, r9, #3145728
 495:Core/Src/printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 496:Core/Src/printf.c ****   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.28952965460216
 1075              		.loc 1 496 3 is_stmt 1 view .LVU271
 1076              		.loc 1 496 45 is_stmt 0 view .LVU272
 1077 009a A0F2FF30 		subw	r0, r0, #1023
 1078              	.LVL109:
 1079              		.loc 1 496 45 view .LVU273
 1080 009e FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 30


 1081              	.LVL110:
 1082              		.loc 1 496 45 view .LVU274
 1083 00a2 83A3     		adr	r3, .L120
 1084 00a4 D3E90023 		ldrd	r2, [r3]
 1085 00a8 FFF7FEFF 		bl	__aeabi_dmul
 1086              	.LVL111:
 1087              		.loc 1 496 38 view .LVU275
 1088 00ac 82A3     		adr	r3, .L120+8
 1089 00ae D3E90023 		ldrd	r2, [r3]
 1090 00b2 FFF7FEFF 		bl	__aeabi_dadd
 1091              	.LVL112:
 1092 00b6 0646     		mov	r6, r0
 1093              	.LVL113:
 1094              		.loc 1 496 38 view .LVU276
 1095 00b8 0F46     		mov	r7, r1
 1096              		.loc 1 496 75 view .LVU277
 1097 00ba 0022     		movs	r2, #0
 1098 00bc 8F4B     		ldr	r3, .L120+76
 1099 00be 4046     		mov	r0, r8
 1100 00c0 4946     		mov	r1, r9
 1101 00c2 FFF7FEFF 		bl	__aeabi_dsub
 1102              	.LVL114:
 1103              		.loc 1 496 82 view .LVU278
 1104 00c6 7EA3     		adr	r3, .L120+16
 1105 00c8 D3E90023 		ldrd	r2, [r3]
 1106 00cc FFF7FEFF 		bl	__aeabi_dmul
 1107              	.LVL115:
 1108 00d0 0246     		mov	r2, r0
 1109 00d2 0B46     		mov	r3, r1
 1110              		.loc 1 496 65 view .LVU279
 1111 00d4 3046     		mov	r0, r6
 1112 00d6 3946     		mov	r1, r7
 1113 00d8 FFF7FEFF 		bl	__aeabi_dadd
 1114              	.LVL116:
 1115              		.loc 1 496 7 view .LVU280
 1116 00dc FFF7FEFF 		bl	__aeabi_d2iz
 1117              	.LVL117:
 1118 00e0 0646     		mov	r6, r0
 1119              	.LVL118:
 497:Core/Src/printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 498:Core/Src/printf.c ****   exp2 = (int)(expval * 3.321928094887362 + 0.5);
 1120              		.loc 1 498 3 is_stmt 1 view .LVU281
 1121              		.loc 1 498 23 is_stmt 0 view .LVU282
 1122 00e2 FFF7FEFF 		bl	__aeabi_i2d
 1123              	.LVL119:
 1124              		.loc 1 498 23 view .LVU283
 1125 00e6 8046     		mov	r8, r0
 1126 00e8 8946     		mov	r9, r1
 1127 00ea 77A3     		adr	r3, .L120+24
 1128 00ec D3E90023 		ldrd	r2, [r3]
 1129 00f0 FFF7FEFF 		bl	__aeabi_dmul
 1130              	.LVL120:
 1131              		.loc 1 498 43 view .LVU284
 1132 00f4 0022     		movs	r2, #0
 1133 00f6 824B     		ldr	r3, .L120+80
 1134 00f8 FFF7FEFF 		bl	__aeabi_dadd
 1135              	.LVL121:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 31


 1136              		.loc 1 498 8 view .LVU285
 1137 00fc FFF7FEFF 		bl	__aeabi_d2iz
 1138              	.LVL122:
 1139 0100 0746     		mov	r7, r0
 1140              	.LVL123:
 499:Core/Src/printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 1141              		.loc 1 499 3 is_stmt 1 view .LVU286
 1142              		.loc 1 499 28 is_stmt 0 view .LVU287
 1143 0102 73A3     		adr	r3, .L120+32
 1144 0104 D3E90023 		ldrd	r2, [r3]
 1145 0108 4046     		mov	r0, r8
 1146              	.LVL124:
 1147              		.loc 1 499 28 view .LVU288
 1148 010a 4946     		mov	r1, r9
 1149 010c FFF7FEFF 		bl	__aeabi_dmul
 1150              	.LVL125:
 1151 0110 8046     		mov	r8, r0
 1152 0112 8946     		mov	r9, r1
 1153              		.loc 1 499 55 view .LVU289
 1154 0114 3846     		mov	r0, r7
 1155 0116 FFF7FEFF 		bl	__aeabi_i2d
 1156              	.LVL126:
 1157 011a 6FA3     		adr	r3, .L120+40
 1158 011c D3E90023 		ldrd	r2, [r3]
 1159 0120 FFF7FEFF 		bl	__aeabi_dmul
 1160              	.LVL127:
 1161 0124 0246     		mov	r2, r0
 1162 0126 0B46     		mov	r3, r1
 1163              		.loc 1 499 16 view .LVU290
 1164 0128 4046     		mov	r0, r8
 1165 012a 4946     		mov	r1, r9
 1166 012c FFF7FEFF 		bl	__aeabi_dsub
 1167              	.LVL128:
 1168 0130 8046     		mov	r8, r0
 1169 0132 8946     		mov	r9, r1
 1170              	.LVL129:
 500:Core/Src/printf.c ****   const double z2 = z * z;
 1171              		.loc 1 500 3 is_stmt 1 view .LVU291
 1172              		.loc 1 500 16 is_stmt 0 view .LVU292
 1173 0134 0246     		mov	r2, r0
 1174 0136 0B46     		mov	r3, r1
 1175 0138 FFF7FEFF 		bl	__aeabi_dmul
 1176              	.LVL130:
 1177 013c CDE90C01 		strd	r0, [sp, #48]
 1178              	.LVL131:
 501:Core/Src/printf.c ****   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 1179              		.loc 1 501 3 is_stmt 1 view .LVU293
 1180              		.loc 1 501 28 is_stmt 0 view .LVU294
 1181 0140 07F2FF37 		addw	r7, r7, #1023
 1182              	.LVL132:
 1183              		.loc 1 501 36 view .LVU295
 1184 0144 0021     		movs	r1, #0
 1185 0146 0022     		movs	r2, #0
 1186 0148 CDE90A12 		strd	r1, [sp, #40]
 1187 014c 3B05     		lsls	r3, r7, #20
 1188 014e 0B93     		str	r3, [sp, #44]
 1189 0150 0023     		movs	r3, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 32


 1190 0152 0A93     		str	r3, [sp, #40]
 502:Core/Src/printf.c ****   // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_functi
 503:Core/Src/printf.c ****   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1191              		.loc 1 503 3 is_stmt 1 view .LVU296
 1192              		.loc 1 503 19 is_stmt 0 view .LVU297
 1193 0154 4246     		mov	r2, r8
 1194 0156 4B46     		mov	r3, r9
 1195 0158 4046     		mov	r0, r8
 1196              	.LVL133:
 1197              		.loc 1 503 19 view .LVU298
 1198 015a 4946     		mov	r1, r9
 1199 015c FFF7FEFF 		bl	__aeabi_dadd
 1200              	.LVL134:
 1201 0160 CDE90E01 		strd	r0, [sp, #56]
 1202              		.loc 1 503 28 view .LVU299
 1203 0164 4246     		mov	r2, r8
 1204 0166 4B46     		mov	r3, r9
 1205 0168 0020     		movs	r0, #0
 1206 016a 4FF08041 		mov	r1, #1073741824
 1207 016e FFF7FEFF 		bl	__aeabi_dsub
 1208              	.LVL135:
 1209 0172 8046     		mov	r8, r0
 1210              	.LVL136:
 1211              		.loc 1 503 28 view .LVU300
 1212 0174 8946     		mov	r9, r1
 1213              		.loc 1 503 60 view .LVU301
 1214 0176 0022     		movs	r2, #0
 1215 0178 624B     		ldr	r3, .L120+84
 1216 017a DDE90C01 		ldrd	r0, [sp, #48]
 1217 017e FFF7FEFF 		bl	__aeabi_ddiv
 1218              	.LVL137:
 1219              		.loc 1 503 55 view .LVU302
 1220 0182 0022     		movs	r2, #0
 1221 0184 604B     		ldr	r3, .L120+88
 1222 0186 FFF7FEFF 		bl	__aeabi_dadd
 1223              	.LVL138:
 1224 018a 0246     		mov	r2, r0
 1225 018c 0B46     		mov	r3, r1
 1226              		.loc 1 503 49 view .LVU303
 1227 018e DDE90C01 		ldrd	r0, [sp, #48]
 1228 0192 FFF7FEFF 		bl	__aeabi_ddiv
 1229              	.LVL139:
 1230              		.loc 1 503 43 view .LVU304
 1231 0196 0022     		movs	r2, #0
 1232 0198 5C4B     		ldr	r3, .L120+92
 1233 019a FFF7FEFF 		bl	__aeabi_dadd
 1234              	.LVL140:
 1235 019e 0246     		mov	r2, r0
 1236 01a0 0B46     		mov	r3, r1
 1237              		.loc 1 503 38 view .LVU305
 1238 01a2 DDE90C01 		ldrd	r0, [sp, #48]
 1239 01a6 FFF7FEFF 		bl	__aeabi_ddiv
 1240              	.LVL141:
 1241 01aa 0246     		mov	r2, r0
 1242 01ac 0B46     		mov	r3, r1
 1243              		.loc 1 503 32 view .LVU306
 1244 01ae 4046     		mov	r0, r8
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 33


 1245 01b0 4946     		mov	r1, r9
 1246 01b2 FFF7FEFF 		bl	__aeabi_dadd
 1247              	.LVL142:
 1248 01b6 0246     		mov	r2, r0
 1249 01b8 0B46     		mov	r3, r1
 1250              		.loc 1 503 23 view .LVU307
 1251 01ba DDE90E01 		ldrd	r0, [sp, #56]
 1252 01be FFF7FEFF 		bl	__aeabi_ddiv
 1253              	.LVL143:
 1254              		.loc 1 503 15 view .LVU308
 1255 01c2 0022     		movs	r2, #0
 1256 01c4 524B     		ldr	r3, .L120+96
 1257 01c6 FFF7FEFF 		bl	__aeabi_dadd
 1258              	.LVL144:
 1259              		.loc 1 503 10 view .LVU309
 1260 01ca DDE90A23 		ldrd	r2, [sp, #40]
 1261 01ce FFF7FEFF 		bl	__aeabi_dmul
 1262              	.LVL145:
 1263 01d2 8046     		mov	r8, r0
 1264 01d4 8946     		mov	r9, r1
 1265 01d6 49EC188B 		vmov	d8, r8, r9	@ int
 1266              	.LVL146:
 504:Core/Src/printf.c ****   // correct for rounding errors
 505:Core/Src/printf.c ****   if (value < conv.F) {
 1267              		.loc 1 505 3 is_stmt 1 view .LVU310
 1268              		.loc 1 505 6 is_stmt 0 view .LVU311
 1269 01da DDE90623 		ldrd	r2, [sp, #24]
 1270 01de FFF7FEFF 		bl	__aeabi_dcmpgt
 1271              	.LVL147:
 1272 01e2 40B1     		cbz	r0, .L86
 506:Core/Src/printf.c ****     expval--;
 1273              		.loc 1 506 5 is_stmt 1 view .LVU312
 1274              		.loc 1 506 11 is_stmt 0 view .LVU313
 1275 01e4 013E     		subs	r6, r6, #1
 1276              	.LVL148:
 507:Core/Src/printf.c ****     conv.F /= 10;
 1277              		.loc 1 507 5 is_stmt 1 view .LVU314
 1278              		.loc 1 507 12 is_stmt 0 view .LVU315
 1279 01e6 0022     		movs	r2, #0
 1280 01e8 474B     		ldr	r3, .L120+88
 1281 01ea 4046     		mov	r0, r8
 1282 01ec 4946     		mov	r1, r9
 1283 01ee FFF7FEFF 		bl	__aeabi_ddiv
 1284              	.LVL149:
 1285 01f2 41EC180B 		vmov	d8, r0, r1	@ int
 1286              	.L86:
 508:Core/Src/printf.c ****   }
 509:Core/Src/printf.c **** 
 510:Core/Src/printf.c ****   // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
 511:Core/Src/printf.c ****   unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
 1287              		.loc 1 511 3 is_stmt 1 view .LVU316
 1288              		.loc 1 511 43 is_stmt 0 view .LVU317
 1289 01f6 06F16303 		add	r3, r6, #99
 1290              		.loc 1 511 68 view .LVU318
 1291 01fa C62B     		cmp	r3, #198
 1292 01fc 3BD8     		bhi	.L104
 1293              		.loc 1 511 68 discriminator 1 view .LVU319
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 34


 1294 01fe 0427     		movs	r7, #4
 1295              	.LVL150:
 1296              	.L88:
 512:Core/Src/printf.c **** 
 513:Core/Src/printf.c ****   // in "%g" mode, "prec" is the number of *significant figures* not decimals
 514:Core/Src/printf.c ****   if (flags & FLAGS_ADAPT_EXP) {
 1297              		.loc 1 514 3 is_stmt 1 view .LVU320
 1298              		.loc 1 514 6 is_stmt 0 view .LVU321
 1299 0200 209B     		ldr	r3, [sp, #128]
 1300 0202 13F4006F 		tst	r3, #2048
 1301 0206 40D0     		beq	.L89
 515:Core/Src/printf.c ****     // do we want to fall-back to "%f" mode?
 516:Core/Src/printf.c ****     if ((value >= 1e-4) && (value < 1e6)) {
 1302              		.loc 1 516 5 is_stmt 1 view .LVU322
 1303              		.loc 1 516 8 is_stmt 0 view .LVU323
 1304 0208 35A3     		adr	r3, .L120+48
 1305 020a D3E90023 		ldrd	r2, [r3]
 1306 020e DDE90689 		ldrd	r8, [sp, #24]
 1307 0212 4046     		mov	r0, r8
 1308 0214 4946     		mov	r1, r9
 1309 0216 FFF7FEFF 		bl	__aeabi_dcmpge
 1310              	.LVL151:
 1311 021a 0028     		cmp	r0, #0
 1312 021c 3BD0     		beq	.L90
 1313              		.loc 1 516 25 discriminator 1 view .LVU324
 1314 021e 32A3     		adr	r3, .L120+56
 1315 0220 D3E90023 		ldrd	r2, [r3]
 1316 0224 4046     		mov	r0, r8
 1317 0226 4946     		mov	r1, r9
 1318 0228 FFF7FEFF 		bl	__aeabi_dcmplt
 1319              	.LVL152:
 1320 022c 0028     		cmp	r0, #0
 1321 022e 32D0     		beq	.L90
 517:Core/Src/printf.c ****       if ((int)prec > expval) {
 1322              		.loc 1 517 7 is_stmt 1 view .LVU325
 1323              		.loc 1 517 10 is_stmt 0 view .LVU326
 1324 0230 1E9B     		ldr	r3, [sp, #120]
 1325 0232 B342     		cmp	r3, r6
 1326 0234 21DD     		ble	.L105
 518:Core/Src/printf.c ****         prec = (unsigned)((int)prec - expval - 1);
 1327              		.loc 1 518 9 is_stmt 1 view .LVU327
 1328              		.loc 1 518 37 is_stmt 0 view .LVU328
 1329 0236 9E1B     		subs	r6, r3, r6
 1330              	.LVL153:
 1331              		.loc 1 518 46 view .LVU329
 1332 0238 731E     		subs	r3, r6, #1
 1333 023a 1E93     		str	r3, [sp, #120]
 1334              	.LVL154:
 1335              		.loc 1 518 46 view .LVU330
 1336 023c 1FE0     		b	.L93
 1337              	.LVL155:
 1338              	.L79:
 471:Core/Src/printf.c ****   }
 1339              		.loc 1 471 5 is_stmt 1 view .LVU331
 471:Core/Src/printf.c ****   }
 1340              		.loc 1 471 12 is_stmt 0 view .LVU332
 1341 023e 209B     		ldr	r3, [sp, #128]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 35


 1342 0240 0293     		str	r3, [sp, #8]
 1343 0242 1F9B     		ldr	r3, [sp, #124]
 1344 0244 0193     		str	r3, [sp, #4]
 1345 0246 1E9B     		ldr	r3, [sp, #120]
 1346 0248 0093     		str	r3, [sp]
 1347 024a 9DED080B 		vldr.64	d0, [sp, #32]
 1348 024e 2B46     		mov	r3, r5
 1349 0250 5A46     		mov	r2, fp
 1350 0252 2146     		mov	r1, r4
 1351 0254 5046     		mov	r0, r10
 1352 0256 FFF7FEFF 		bl	_ftoa
 1353              	.LVL156:
 1354              	.L82:
 519:Core/Src/printf.c ****       }
 520:Core/Src/printf.c ****       else {
 521:Core/Src/printf.c ****         prec = 0;
 522:Core/Src/printf.c ****       }
 523:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
 524:Core/Src/printf.c ****       // no characters in exponent
 525:Core/Src/printf.c ****       minwidth = 0U;
 526:Core/Src/printf.c ****       expval   = 0;
 527:Core/Src/printf.c ****     }
 528:Core/Src/printf.c ****     else {
 529:Core/Src/printf.c ****       // we use one sigfig for the whole part
 530:Core/Src/printf.c ****       if ((prec > 0) && (flags & FLAGS_PRECISION)) {
 531:Core/Src/printf.c ****         --prec;
 532:Core/Src/printf.c ****       }
 533:Core/Src/printf.c ****     }
 534:Core/Src/printf.c ****   }
 535:Core/Src/printf.c **** 
 536:Core/Src/printf.c ****   // will everything fit?
 537:Core/Src/printf.c ****   unsigned int fwidth = width;
 538:Core/Src/printf.c ****   if (width > minwidth) {
 539:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 540:Core/Src/printf.c ****     fwidth -= minwidth;
 541:Core/Src/printf.c ****   } else {
 542:Core/Src/printf.c ****     // not enough characters, so go back to default sizing
 543:Core/Src/printf.c ****     fwidth = 0U;
 544:Core/Src/printf.c ****   }
 545:Core/Src/printf.c ****   if ((flags & FLAGS_LEFT) && minwidth) {
 546:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 547:Core/Src/printf.c ****     fwidth = 0U;
 548:Core/Src/printf.c ****   }
 549:Core/Src/printf.c **** 
 550:Core/Src/printf.c ****   // rescale the float value
 551:Core/Src/printf.c ****   if (expval) {
 552:Core/Src/printf.c ****     value /= conv.F;
 553:Core/Src/printf.c ****   }
 554:Core/Src/printf.c **** 
 555:Core/Src/printf.c ****   // output the floating part
 556:Core/Src/printf.c ****   const size_t start_idx = idx;
 557:Core/Src/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 558:Core/Src/printf.c **** 
 559:Core/Src/printf.c ****   // output the exponent part
 560:Core/Src/printf.c ****   if (minwidth) {
 561:Core/Src/printf.c ****     // output the exponential symbol
 562:Core/Src/printf.c ****     out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 36


 563:Core/Src/printf.c ****     // output the exponent value
 564:Core/Src/printf.c ****     idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, 
 565:Core/Src/printf.c ****     // might need to right-pad spaces
 566:Core/Src/printf.c ****     if (flags & FLAGS_LEFT) {
 567:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 568:Core/Src/printf.c ****     }
 569:Core/Src/printf.c ****   }
 570:Core/Src/printf.c ****   return idx;
 571:Core/Src/printf.c **** }
 1355              		.loc 1 571 1 view .LVU333
 1356 025a 13B0     		add	sp, sp, #76
 1357              	.LCFI19:
 1358              		.cfi_remember_state
 1359              		.cfi_def_cfa_offset 44
 1360              		@ sp needed
 1361 025c BDEC028B 		vldm	sp!, {d8}
 1362              	.LCFI20:
 1363              		.cfi_restore 80
 1364              		.cfi_restore 81
 1365              		.cfi_def_cfa_offset 36
 1366              	.LVL157:
 1367              		.loc 1 571 1 view .LVU334
 1368 0260 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1369              	.LVL158:
 1370              	.L118:
 1371              	.LCFI21:
 1372              		.cfi_restore_state
 477:Core/Src/printf.c ****   }
 1373              		.loc 1 477 5 is_stmt 1 view .LVU335
 477:Core/Src/printf.c ****   }
 1374              		.loc 1 477 11 is_stmt 0 view .LVU336
 1375 0264 9FED227B 		vldr.64	d7, .L120+64
 1376 0268 8DED067B 		vstr.64	d7, [sp, #24]
 1377 026c 0696     		str	r6, [sp, #24]
 1378 026e 07F10043 		add	r3, r7, #-2147483648
 1379 0272 0793     		str	r3, [sp, #28]
 1380              	.LVL159:
 477:Core/Src/printf.c ****   }
 1381              		.loc 1 477 11 view .LVU337
 1382 0274 FEE6     		b	.L83
 1383              	.LVL160:
 1384              	.L104:
 511:Core/Src/printf.c **** 
 1385              		.loc 1 511 68 discriminator 2 view .LVU338
 1386 0276 0527     		movs	r7, #5
 1387              	.LVL161:
 511:Core/Src/printf.c **** 
 1388              		.loc 1 511 68 discriminator 2 view .LVU339
 1389 0278 C2E7     		b	.L88
 1390              	.LVL162:
 1391              	.L105:
 521:Core/Src/printf.c ****       }
 1392              		.loc 1 521 14 view .LVU340
 1393 027a 0023     		movs	r3, #0
 1394 027c 1E93     		str	r3, [sp, #120]
 1395              	.LVL163:
 1396              	.L93:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 37


 523:Core/Src/printf.c ****       // no characters in exponent
 1397              		.loc 1 523 7 is_stmt 1 view .LVU341
 523:Core/Src/printf.c ****       // no characters in exponent
 1398              		.loc 1 523 13 is_stmt 0 view .LVU342
 1399 027e 209B     		ldr	r3, [sp, #128]
 1400 0280 43F48063 		orr	r3, r3, #1024
 1401 0284 2093     		str	r3, [sp, #128]
 1402              	.LVL164:
 525:Core/Src/printf.c ****       expval   = 0;
 1403              		.loc 1 525 7 is_stmt 1 view .LVU343
 526:Core/Src/printf.c ****     }
 1404              		.loc 1 526 7 view .LVU344
 525:Core/Src/printf.c ****       expval   = 0;
 1405              		.loc 1 525 16 is_stmt 0 view .LVU345
 1406 0286 0027     		movs	r7, #0
 526:Core/Src/printf.c ****     }
 1407              		.loc 1 526 16 view .LVU346
 1408 0288 3E46     		mov	r6, r7
 1409              	.LVL165:
 1410              	.L89:
 537:Core/Src/printf.c ****   if (width > minwidth) {
 1411              		.loc 1 537 3 is_stmt 1 view .LVU347
 538:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 1412              		.loc 1 538 3 view .LVU348
 538:Core/Src/printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 1413              		.loc 1 538 6 is_stmt 0 view .LVU349
 1414 028a 1F9B     		ldr	r3, [sp, #124]
 1415 028c 9F42     		cmp	r7, r3
 1416 028e 41D2     		bcs	.L106
 540:Core/Src/printf.c ****   } else {
 1417              		.loc 1 540 5 is_stmt 1 view .LVU350
 540:Core/Src/printf.c ****   } else {
 1418              		.loc 1 540 12 is_stmt 0 view .LVU351
 1419 0290 A3EB0708 		sub	r8, r3, r7
 1420              	.LVL166:
 540:Core/Src/printf.c ****   } else {
 1421              		.loc 1 540 12 view .LVU352
 1422 0294 40E0     		b	.L94
 1423              	.LVL167:
 1424              	.L90:
 530:Core/Src/printf.c ****         --prec;
 1425              		.loc 1 530 7 is_stmt 1 view .LVU353
 530:Core/Src/printf.c ****         --prec;
 1426              		.loc 1 530 10 is_stmt 0 view .LVU354
 1427 0296 1E9B     		ldr	r3, [sp, #120]
 1428 0298 002B     		cmp	r3, #0
 1429 029a F6D0     		beq	.L89
 530:Core/Src/printf.c ****         --prec;
 1430              		.loc 1 530 22 discriminator 1 view .LVU355
 1431 029c 119B     		ldr	r3, [sp, #68]
 1432 029e 002B     		cmp	r3, #0
 1433 02a0 F3D0     		beq	.L89
 531:Core/Src/printf.c ****       }
 1434              		.loc 1 531 9 is_stmt 1 view .LVU356
 1435 02a2 1E9B     		ldr	r3, [sp, #120]
 1436 02a4 013B     		subs	r3, r3, #1
 1437 02a6 1E93     		str	r3, [sp, #120]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 38


 1438              	.LVL168:
 531:Core/Src/printf.c ****       }
 1439              		.loc 1 531 9 is_stmt 0 view .LVU357
 1440 02a8 EFE7     		b	.L89
 1441              	.L121:
 1442 02aa 00BFAFF3 		.align	3
 1442      0080
 1443              	.L120:
 1444 02b0 FB799F50 		.word	1352628731
 1445 02b4 1344D33F 		.word	1070810131
 1446 02b8 B3C8608B 		.word	-1956591437
 1447 02bc 288AC63F 		.word	1069976104
 1448 02c0 61436F63 		.word	1668236129
 1449 02c4 A787D23F 		.word	1070761895
 1450 02c8 71A37909 		.word	158966641
 1451 02cc 4F930A40 		.word	1074434895
 1452 02d0 1655B5BB 		.word	-1145744106
 1453 02d4 B16B0240 		.word	1073900465
 1454 02d8 EF39FAFE 		.word	-17155601
 1455 02dc 422EE63F 		.word	1072049730
 1456 02e0 2D431CEB 		.word	-350469331
 1457 02e4 E2361A3F 		.word	1058682594
 1458 02e8 00000000 		.word	0
 1459 02ec 80842E41 		.word	1093567616
 1460 02f0 00000000 		.word	0
 1461 02f4 00000000 		.word	0
 1462 02f8 FFFFEF7F 		.word	2146435071
 1463 02fc 0000F83F 		.word	1073217536
 1464 0300 0000E03F 		.word	1071644672
 1465 0304 00002C40 		.word	1076625408
 1466 0308 00002440 		.word	1076101120
 1467 030c 00001840 		.word	1075314688
 1468 0310 0000F03F 		.word	1072693248
 1469              	.LVL169:
 1470              	.L106:
 543:Core/Src/printf.c ****   }
 1471              		.loc 1 543 12 view .LVU358
 1472 0314 4FF00008 		mov	r8, #0
 1473              	.LVL170:
 1474              	.L94:
 545:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1475              		.loc 1 545 3 is_stmt 1 view .LVU359
 545:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1476              		.loc 1 545 6 is_stmt 0 view .LVU360
 1477 0318 209B     		ldr	r3, [sp, #128]
 1478 031a 13F00209 		ands	r9, r3, #2
 1479 031e 02D0     		beq	.L95
 545:Core/Src/printf.c ****     // if we're padding on the right, DON'T pad the floating part
 1480              		.loc 1 545 28 discriminator 1 view .LVU361
 1481 0320 0FB1     		cbz	r7, .L95
 547:Core/Src/printf.c ****   }
 1482              		.loc 1 547 12 view .LVU362
 1483 0322 4FF00008 		mov	r8, #0
 1484              	.LVL171:
 1485              	.L95:
 551:Core/Src/printf.c ****     value /= conv.F;
 1486              		.loc 1 551 3 is_stmt 1 view .LVU363
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 39


 551:Core/Src/printf.c ****     value /= conv.F;
 1487              		.loc 1 551 6 is_stmt 0 view .LVU364
 1488 0326 3EB1     		cbz	r6, .L96
 552:Core/Src/printf.c ****   }
 1489              		.loc 1 552 5 is_stmt 1 view .LVU365
 1490              	.LVL172:
 552:Core/Src/printf.c ****   }
 1491              		.loc 1 552 18 is_stmt 0 view .LVU366
 1492 0328 53EC182B 		vmov	r2, r3, d8
 552:Core/Src/printf.c ****   }
 1493              		.loc 1 552 11 view .LVU367
 1494 032c DDE90601 		ldrd	r0, [sp, #24]
 1495 0330 FFF7FEFF 		bl	__aeabi_ddiv
 1496              	.LVL173:
 1497 0334 CDE90601 		strd	r0, [sp, #24]
 1498              	.LVL174:
 1499              	.L96:
 556:Core/Src/printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 1500              		.loc 1 556 3 is_stmt 1 view .LVU368
 557:Core/Src/printf.c **** 
 1501              		.loc 1 557 3 view .LVU369
 557:Core/Src/printf.c **** 
 1502              		.loc 1 557 9 is_stmt 0 view .LVU370
 1503 0338 0022     		movs	r2, #0
 1504 033a 0023     		movs	r3, #0
 1505 033c DDE90801 		ldrd	r0, [sp, #32]
 1506 0340 FFF7FEFF 		bl	__aeabi_dcmplt
 1507              	.LVL175:
 1508 0344 0028     		cmp	r0, #0
 1509 0346 3BD1     		bne	.L119
 1510              	.LVL176:
 1511              	.L97:
 557:Core/Src/printf.c **** 
 1512              		.loc 1 557 9 discriminator 4 view .LVU371
 1513 0348 209B     		ldr	r3, [sp, #128]
 1514 034a 23F40063 		bic	r3, r3, #2048
 1515 034e 0293     		str	r3, [sp, #8]
 1516 0350 CDF80480 		str	r8, [sp, #4]
 1517 0354 1E9B     		ldr	r3, [sp, #120]
 1518 0356 0093     		str	r3, [sp]
 1519 0358 9DED060B 		vldr.64	d0, [sp, #24]
 1520 035c 2B46     		mov	r3, r5
 1521 035e 5A46     		mov	r2, fp
 1522 0360 2146     		mov	r1, r4
 1523 0362 5046     		mov	r0, r10
 1524 0364 FFF7FEFF 		bl	_ftoa
 1525              	.LVL177:
 560:Core/Src/printf.c ****     // output the exponential symbol
 1526              		.loc 1 560 3 is_stmt 1 view .LVU372
 560:Core/Src/printf.c ****     // output the exponential symbol
 1527              		.loc 1 560 6 is_stmt 0 view .LVU373
 1528 0368 002F     		cmp	r7, #0
 1529 036a 3FF476AF 		beq	.L82
 562:Core/Src/printf.c ****     // output the exponent value
 1530              		.loc 1 562 5 is_stmt 1 view .LVU374
 1531 036e 209B     		ldr	r3, [sp, #128]
 1532 0370 13F0200F 		tst	r3, #32
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 40


 1533 0374 2CD0     		beq	.L108
 562:Core/Src/printf.c ****     // output the exponent value
 1534              		.loc 1 562 5 is_stmt 0 discriminator 1 view .LVU375
 1535 0376 4FF0450C 		mov	ip, #69
 1536              	.L99:
 562:Core/Src/printf.c ****     // output the exponent value
 1537              		.loc 1 562 5 discriminator 4 view .LVU376
 1538 037a 00F10108 		add	r8, r0, #1
 1539              	.LVL178:
 562:Core/Src/printf.c ****     // output the exponent value
 1540              		.loc 1 562 5 discriminator 4 view .LVU377
 1541 037e 2B46     		mov	r3, r5
 1542 0380 0246     		mov	r2, r0
 1543 0382 2146     		mov	r1, r4
 1544 0384 6046     		mov	r0, ip
 1545 0386 D047     		blx	r10
 1546              	.LVL179:
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1547              		.loc 1 564 5 is_stmt 1 view .LVU378
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1548              		.loc 1 564 71 is_stmt 0 view .LVU379
 1549 0388 86EAE672 		eor	r2, r6, r6, asr #31
 1550 038c A2EBE672 		sub	r2, r2, r6, asr #31
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1551              		.loc 1 564 11 view .LVU380
 1552 0390 0523     		movs	r3, #5
 1553 0392 0593     		str	r3, [sp, #20]
 1554 0394 013F     		subs	r7, r7, #1
 1555              	.LVL180:
 564:Core/Src/printf.c ****     // might need to right-pad spaces
 1556              		.loc 1 564 11 view .LVU381
 1557 0396 0497     		str	r7, [sp, #16]
 1558 0398 0023     		movs	r3, #0
 1559 039a 0393     		str	r3, [sp, #12]
 1560 039c 0A23     		movs	r3, #10
 1561 039e 0293     		str	r3, [sp, #8]
 1562 03a0 F30F     		lsrs	r3, r6, #31
 1563 03a2 0193     		str	r3, [sp, #4]
 1564 03a4 0092     		str	r2, [sp]
 1565 03a6 2B46     		mov	r3, r5
 1566 03a8 4246     		mov	r2, r8
 1567 03aa 2146     		mov	r1, r4
 1568 03ac 5046     		mov	r0, r10
 1569 03ae FFF7FEFF 		bl	_ntoa_long
 1570              	.LVL181:
 566:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1571              		.loc 1 566 5 is_stmt 1 view .LVU382
 566:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1572              		.loc 1 566 8 is_stmt 0 view .LVU383
 1573 03b2 B9F1000F 		cmp	r9, #0
 1574 03b6 3FF450AF 		beq	.L82
 1575 03ba 0246     		mov	r2, r0
 1576 03bc 1F9F     		ldr	r7, [sp, #124]
 1577              	.LVL182:
 566:Core/Src/printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 1578              		.loc 1 566 8 view .LVU384
 1579 03be 10E0     		b	.L100
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 41


 1580              	.LVL183:
 1581              	.L119:
 557:Core/Src/printf.c **** 
 1582              		.loc 1 557 9 discriminator 1 view .LVU385
 1583 03c0 DDE90601 		ldrd	r0, [sp, #24]
 1584 03c4 0246     		mov	r2, r0
 1585 03c6 01F10043 		add	r3, r1, #-2147483648
 1586 03ca CDE90623 		strd	r2, [sp, #24]
 1587              	.LVL184:
 557:Core/Src/printf.c **** 
 1588              		.loc 1 557 9 discriminator 1 view .LVU386
 1589 03ce BBE7     		b	.L97
 1590              	.LVL185:
 1591              	.L108:
 562:Core/Src/printf.c ****     // output the exponent value
 1592              		.loc 1 562 5 discriminator 2 view .LVU387
 1593 03d0 4FF0650C 		mov	ip, #101
 1594 03d4 D1E7     		b	.L99
 1595              	.LVL186:
 1596              	.L101:
 567:Core/Src/printf.c ****     }
 1597              		.loc 1 567 39 is_stmt 1 discriminator 2 view .LVU388
 1598 03d6 561C     		adds	r6, r2, #1
 1599              	.LVL187:
 567:Core/Src/printf.c ****     }
 1600              		.loc 1 567 39 is_stmt 0 discriminator 2 view .LVU389
 1601 03d8 2B46     		mov	r3, r5
 1602 03da 2146     		mov	r1, r4
 1603 03dc 2020     		movs	r0, #32
 1604 03de D047     		blx	r10
 1605              	.LVL188:
 1606 03e0 3246     		mov	r2, r6
 1607              	.LVL189:
 1608              	.L100:
 567:Core/Src/printf.c ****     }
 1609              		.loc 1 567 30 is_stmt 1 discriminator 1 view .LVU390
 567:Core/Src/printf.c ****     }
 1610              		.loc 1 567 18 is_stmt 0 discriminator 1 view .LVU391
 1611 03e2 A2EB0B03 		sub	r3, r2, fp
 567:Core/Src/printf.c ****     }
 1612              		.loc 1 567 30 discriminator 1 view .LVU392
 1613 03e6 BB42     		cmp	r3, r7
 1614 03e8 F5D3     		bcc	.L101
 567:Core/Src/printf.c ****     }
 1615              		.loc 1 567 30 discriminator 1 view .LVU393
 1616 03ea 1046     		mov	r0, r2
 1617 03ec 35E7     		b	.L82
 1618              		.cfi_endproc
 1619              	.LFE12:
 1621 03ee 00BF     		.section	.rodata._ftoa.str1.4,"aMS",%progbits,1
 1622              		.align	2
 1623              	.LC0:
 1624 0000 666E692B 		.ascii	"fni+\000"
 1624      00
 1625 0005 000000   		.align	2
 1626              	.LC1:
 1627 0008 666E6900 		.ascii	"fni\000"
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 42


 1628              		.align	2
 1629              	.LC2:
 1630 000c 6E616E00 		.ascii	"nan\000"
 1631              		.align	2
 1632              	.LC3:
 1633 0010 666E692D 		.ascii	"fni-\000"
 1633      00
 1634              		.global	__aeabi_d2uiz
 1635              		.global	__aeabi_ui2d
 1636              		.global	__aeabi_dcmple
 1637              		.section	.text._ftoa,"ax",%progbits
 1638              		.align	1
 1639              		.syntax unified
 1640              		.thumb
 1641              		.thumb_func
 1643              	_ftoa:
 1644              	.LVL190:
 1645              	.LFB11:
 340:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1646              		.loc 1 340 1 is_stmt 1 view -0
 1647              		.cfi_startproc
 1648              		@ args = 12, pretend = 0, frame = 56
 1649              		@ frame_needed = 0, uses_anonymous_args = 0
 340:Core/Src/printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 1650              		.loc 1 340 1 is_stmt 0 view .LVU395
 1651 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1652              	.LCFI22:
 1653              		.cfi_def_cfa_offset 36
 1654              		.cfi_offset 4, -36
 1655              		.cfi_offset 5, -32
 1656              		.cfi_offset 6, -28
 1657              		.cfi_offset 7, -24
 1658              		.cfi_offset 8, -20
 1659              		.cfi_offset 9, -16
 1660              		.cfi_offset 10, -12
 1661              		.cfi_offset 11, -8
 1662              		.cfi_offset 14, -4
 1663 0004 2DED028B 		vpush.64	{d8}
 1664              	.LCFI23:
 1665              		.cfi_def_cfa_offset 44
 1666              		.cfi_offset 80, -44
 1667              		.cfi_offset 81, -40
 1668 0008 93B0     		sub	sp, sp, #76
 1669              	.LCFI24:
 1670              		.cfi_def_cfa_offset 120
 1671 000a 0590     		str	r0, [sp, #20]
 1672 000c 0891     		str	r1, [sp, #32]
 1673 000e 9246     		mov	r10, r2
 1674 0010 9B46     		mov	fp, r3
 1675 0012 59EC108B 		vmov	r8, r9, d0
 1676 0016 1E9D     		ldr	r5, [sp, #120]
 341:Core/Src/printf.c ****   size_t len  = 0U;
 1677              		.loc 1 341 3 is_stmt 1 view .LVU396
 342:Core/Src/printf.c ****   double diff = 0.0;
 1678              		.loc 1 342 3 view .LVU397
 1679              	.LVL191:
 343:Core/Src/printf.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 43


 1680              		.loc 1 343 3 view .LVU398
 346:Core/Src/printf.c **** 
 1681              		.loc 1 346 3 view .LVU399
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1682              		.loc 1 349 3 view .LVU400
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1683              		.loc 1 349 6 is_stmt 0 view .LVU401
 1684 0018 4246     		mov	r2, r8
 1685              	.LVL192:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1686              		.loc 1 349 6 view .LVU402
 1687 001a 4B46     		mov	r3, r9
 1688              	.LVL193:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1689              		.loc 1 349 6 view .LVU403
 1690 001c 4046     		mov	r0, r8
 1691              	.LVL194:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1692              		.loc 1 349 6 view .LVU404
 1693 001e 4946     		mov	r1, r9
 1694              	.LVL195:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1695              		.loc 1 349 6 view .LVU405
 1696 0020 FFF7FEFF 		bl	__aeabi_dcmpeq
 1697              	.LVL196:
 349:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1698              		.loc 1 349 6 view .LVU406
 1699 0024 0028     		cmp	r0, #0
 1700 0026 40D0     		beq	.L191
 351:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 1701              		.loc 1 351 3 is_stmt 1 view .LVU407
 351:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 1702              		.loc 1 351 6 is_stmt 0 view .LVU408
 1703 0028 4FF0FF32 		mov	r2, #-1
 1704 002c 6FF48013 		mvn	r3, #1048576
 1705 0030 4046     		mov	r0, r8
 1706 0032 4946     		mov	r1, r9
 1707 0034 FFF7FEFF 		bl	__aeabi_dcmplt
 1708              	.LVL197:
 1709 0038 0028     		cmp	r0, #0
 1710 003a 45D1     		bne	.L192
 353:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 1711              		.loc 1 353 3 is_stmt 1 view .LVU409
 353:Core/Src/printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 1712              		.loc 1 353 6 is_stmt 0 view .LVU410
 1713 003c 4FF0FF32 		mov	r2, #-1
 1714 0040 AD4B     		ldr	r3, .L196+16
 1715 0042 4046     		mov	r0, r8
 1716 0044 4946     		mov	r1, r9
 1717 0046 FFF7FEFF 		bl	__aeabi_dcmpgt
 1718              	.LVL198:
 1719 004a 0028     		cmp	r0, #0
 1720 004c 4BD1     		bne	.L193
 358:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1721              		.loc 1 358 3 is_stmt 1 view .LVU411
 358:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1722              		.loc 1 358 6 is_stmt 0 view .LVU412
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 44


 1723 004e A6A3     		adr	r3, .L196
 1724 0050 D3E90023 		ldrd	r2, [r3]
 1725 0054 4046     		mov	r0, r8
 1726 0056 4946     		mov	r1, r9
 1727 0058 FFF7FEFF 		bl	__aeabi_dcmpgt
 1728              	.LVL199:
 1729 005c 0028     		cmp	r0, #0
 1730 005e 5AD1     		bne	.L132
 358:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 1731              		.loc 1 358 34 discriminator 1 view .LVU413
 1732 0060 A3A3     		adr	r3, .L196+8
 1733 0062 D3E90023 		ldrd	r2, [r3]
 1734 0066 4046     		mov	r0, r8
 1735 0068 4946     		mov	r1, r9
 1736 006a FFF7FEFF 		bl	__aeabi_dcmplt
 1737              	.LVL200:
 1738 006e 0028     		cmp	r0, #0
 1739 0070 51D1     		bne	.L132
 367:Core/Src/printf.c ****   if (value < 0) {
 1740              		.loc 1 367 3 is_stmt 1 view .LVU414
 1741              	.LVL201:
 368:Core/Src/printf.c ****     negative = true;
 1742              		.loc 1 368 3 view .LVU415
 368:Core/Src/printf.c ****     negative = true;
 1743              		.loc 1 368 6 is_stmt 0 view .LVU416
 1744 0072 0022     		movs	r2, #0
 1745 0074 0023     		movs	r3, #0
 1746 0076 4046     		mov	r0, r8
 1747 0078 4946     		mov	r1, r9
 1748 007a FFF7FEFF 		bl	__aeabi_dcmplt
 1749              	.LVL202:
 1750 007e 0028     		cmp	r0, #0
 1751 0080 57D1     		bne	.L194
 367:Core/Src/printf.c ****   if (value < 0) {
 1752              		.loc 1 367 8 view .LVU417
 1753 0082 0023     		movs	r3, #0
 1754 0084 0993     		str	r3, [sp, #36]
 1755              	.LVL203:
 1756              	.L135:
 374:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1757              		.loc 1 374 3 is_stmt 1 view .LVU418
 374:Core/Src/printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1758              		.loc 1 374 6 is_stmt 0 view .LVU419
 1759 0086 209B     		ldr	r3, [sp, #128]
 1760 0088 13F4806F 		tst	r3, #1024
 1761 008c 5CD0     		beq	.L168
 1762              	.L137:
 1763              	.LVL204:
 375:Core/Src/printf.c ****   }
 1764              		.loc 1 375 10 view .LVU420
 1765 008e 0024     		movs	r4, #0
 1766              	.LVL205:
 1767              	.L139:
 378:Core/Src/printf.c ****     buf[len++] = '0';
 1768              		.loc 1 378 42 is_stmt 1 view .LVU421
 1769 0090 1F2C     		cmp	r4, #31
 1770 0092 5BD8     		bhi	.L140
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 45


 378:Core/Src/printf.c ****     buf[len++] = '0';
 1771              		.loc 1 378 42 is_stmt 0 discriminator 1 view .LVU422
 1772 0094 092D     		cmp	r5, #9
 1773 0096 59D9     		bls	.L140
 379:Core/Src/printf.c ****     prec--;
 1774              		.loc 1 379 5 is_stmt 1 view .LVU423
 1775              	.LVL206:
 379:Core/Src/printf.c ****     prec--;
 1776              		.loc 1 379 16 is_stmt 0 view .LVU424
 1777 0098 04F14803 		add	r3, r4, #72
 1778 009c 6B44     		add	r3, sp, r3
 1779 009e 3022     		movs	r2, #48
 1780 00a0 03F8202C 		strb	r2, [r3, #-32]
 380:Core/Src/printf.c ****   }
 1781              		.loc 1 380 5 is_stmt 1 view .LVU425
 380:Core/Src/printf.c ****   }
 1782              		.loc 1 380 9 is_stmt 0 view .LVU426
 1783 00a4 013D     		subs	r5, r5, #1
 1784              	.LVL207:
 379:Core/Src/printf.c ****     prec--;
 1785              		.loc 1 379 12 view .LVU427
 1786 00a6 0134     		adds	r4, r4, #1
 1787              	.LVL208:
 379:Core/Src/printf.c ****     prec--;
 1788              		.loc 1 379 12 view .LVU428
 1789 00a8 F2E7     		b	.L139
 1790              	.LVL209:
 1791              	.L191:
 350:Core/Src/printf.c ****   if (value < -DBL_MAX)
 1792              		.loc 1 350 5 is_stmt 1 view .LVU429
 350:Core/Src/printf.c ****   if (value < -DBL_MAX)
 1793              		.loc 1 350 12 is_stmt 0 view .LVU430
 1794 00aa 209B     		ldr	r3, [sp, #128]
 1795 00ac 0393     		str	r3, [sp, #12]
 1796 00ae 1F9B     		ldr	r3, [sp, #124]
 1797 00b0 0293     		str	r3, [sp, #8]
 1798 00b2 0323     		movs	r3, #3
 1799 00b4 0193     		str	r3, [sp, #4]
 1800 00b6 914B     		ldr	r3, .L196+20
 1801 00b8 0093     		str	r3, [sp]
 1802 00ba 5B46     		mov	r3, fp
 1803 00bc 5246     		mov	r2, r10
 1804 00be 0899     		ldr	r1, [sp, #32]
 1805 00c0 0598     		ldr	r0, [sp, #20]
 1806 00c2 FFF7FEFF 		bl	_out_rev
 1807              	.LVL210:
 1808 00c6 07E1     		b	.L122
 1809              	.L192:
 352:Core/Src/printf.c ****   if (value > DBL_MAX)
 1810              		.loc 1 352 5 is_stmt 1 view .LVU431
 352:Core/Src/printf.c ****   if (value > DBL_MAX)
 1811              		.loc 1 352 12 is_stmt 0 view .LVU432
 1812 00c8 209B     		ldr	r3, [sp, #128]
 1813 00ca 0393     		str	r3, [sp, #12]
 1814 00cc 1F9B     		ldr	r3, [sp, #124]
 1815 00ce 0293     		str	r3, [sp, #8]
 1816 00d0 0423     		movs	r3, #4
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 46


 1817 00d2 0193     		str	r3, [sp, #4]
 1818 00d4 8A4B     		ldr	r3, .L196+24
 1819 00d6 0093     		str	r3, [sp]
 1820 00d8 5B46     		mov	r3, fp
 1821 00da 5246     		mov	r2, r10
 1822 00dc 0899     		ldr	r1, [sp, #32]
 1823 00de 0598     		ldr	r0, [sp, #20]
 1824 00e0 FFF7FEFF 		bl	_out_rev
 1825              	.LVL211:
 1826 00e4 F8E0     		b	.L122
 1827              	.L193:
 354:Core/Src/printf.c **** 
 1828              		.loc 1 354 5 is_stmt 1 view .LVU433
 354:Core/Src/printf.c **** 
 1829              		.loc 1 354 12 is_stmt 0 view .LVU434
 1830 00e6 209B     		ldr	r3, [sp, #128]
 1831 00e8 13F00403 		ands	r3, r3, #4
 1832 00ec 0FD0     		beq	.L165
 354:Core/Src/printf.c **** 
 1833              		.loc 1 354 12 discriminator 1 view .LVU435
 1834 00ee 854A     		ldr	r2, .L196+28
 1835              	.L130:
 354:Core/Src/printf.c **** 
 1836              		.loc 1 354 12 discriminator 4 view .LVU436
 1837 00f0 7BB1     		cbz	r3, .L166
 354:Core/Src/printf.c **** 
 1838              		.loc 1 354 12 discriminator 5 view .LVU437
 1839 00f2 0423     		movs	r3, #4
 1840              	.L131:
 354:Core/Src/printf.c **** 
 1841              		.loc 1 354 12 discriminator 8 view .LVU438
 1842 00f4 2099     		ldr	r1, [sp, #128]
 1843 00f6 0391     		str	r1, [sp, #12]
 1844 00f8 1F99     		ldr	r1, [sp, #124]
 1845 00fa 0291     		str	r1, [sp, #8]
 1846 00fc 0193     		str	r3, [sp, #4]
 1847 00fe 0092     		str	r2, [sp]
 1848 0100 5B46     		mov	r3, fp
 1849 0102 5246     		mov	r2, r10
 1850 0104 0899     		ldr	r1, [sp, #32]
 1851 0106 0598     		ldr	r0, [sp, #20]
 1852 0108 FFF7FEFF 		bl	_out_rev
 1853              	.LVL212:
 354:Core/Src/printf.c **** 
 1854              		.loc 1 354 12 view .LVU439
 1855 010c E4E0     		b	.L122
 1856              	.L165:
 354:Core/Src/printf.c **** 
 1857              		.loc 1 354 12 discriminator 2 view .LVU440
 1858 010e 7E4A     		ldr	r2, .L196+32
 1859 0110 EEE7     		b	.L130
 1860              	.L166:
 354:Core/Src/printf.c **** 
 1861              		.loc 1 354 12 discriminator 6 view .LVU441
 1862 0112 0323     		movs	r3, #3
 1863 0114 EEE7     		b	.L131
 1864              	.L132:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 47


 360:Core/Src/printf.c **** #else
 1865              		.loc 1 360 5 is_stmt 1 view .LVU442
 360:Core/Src/printf.c **** #else
 1866              		.loc 1 360 12 is_stmt 0 view .LVU443
 1867 0116 209B     		ldr	r3, [sp, #128]
 1868 0118 0293     		str	r3, [sp, #8]
 1869 011a 1F9B     		ldr	r3, [sp, #124]
 1870 011c 0193     		str	r3, [sp, #4]
 1871 011e 0095     		str	r5, [sp]
 1872 0120 49EC108B 		vmov	d0, r8, r9
 1873 0124 5B46     		mov	r3, fp
 1874 0126 5246     		mov	r2, r10
 1875 0128 0899     		ldr	r1, [sp, #32]
 1876 012a 0598     		ldr	r0, [sp, #20]
 1877 012c FFF7FEFF 		bl	_etoa
 1878              	.LVL213:
 1879 0130 D2E0     		b	.L122
 1880              	.LVL214:
 1881              	.L194:
 369:Core/Src/printf.c ****     value = 0 - value;
 1882              		.loc 1 369 5 is_stmt 1 view .LVU444
 370:Core/Src/printf.c ****   }
 1883              		.loc 1 370 5 view .LVU445
 370:Core/Src/printf.c ****   }
 1884              		.loc 1 370 11 is_stmt 0 view .LVU446
 1885 0132 4246     		mov	r2, r8
 1886 0134 4B46     		mov	r3, r9
 1887 0136 0020     		movs	r0, #0
 1888 0138 0021     		movs	r1, #0
 1889 013a FFF7FEFF 		bl	__aeabi_dsub
 1890              	.LVL215:
 1891 013e 8046     		mov	r8, r0
 1892              	.LVL216:
 370:Core/Src/printf.c ****   }
 1893              		.loc 1 370 11 view .LVU447
 1894 0140 8946     		mov	r9, r1
 1895              	.LVL217:
 369:Core/Src/printf.c ****     value = 0 - value;
 1896              		.loc 1 369 14 view .LVU448
 1897 0142 0123     		movs	r3, #1
 1898 0144 0993     		str	r3, [sp, #36]
 1899 0146 9EE7     		b	.L135
 1900              	.LVL218:
 1901              	.L168:
 375:Core/Src/printf.c ****   }
 1902              		.loc 1 375 10 view .LVU449
 1903 0148 0625     		movs	r5, #6
 1904 014a A0E7     		b	.L137
 1905              	.LVL219:
 1906              	.L140:
 383:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 1907              		.loc 1 383 3 is_stmt 1 view .LVU450
 383:Core/Src/printf.c ****   double tmp = (value - whole) * pow10[prec];
 1908              		.loc 1 383 7 is_stmt 0 view .LVU451
 1909 014c 4046     		mov	r0, r8
 1910 014e 4946     		mov	r1, r9
 1911 0150 FFF7FEFF 		bl	__aeabi_d2iz
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 48


 1912              	.LVL220:
 1913 0154 0646     		mov	r6, r0
 1914              	.LVL221:
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1915              		.loc 1 384 3 is_stmt 1 view .LVU452
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1916              		.loc 1 384 23 is_stmt 0 view .LVU453
 1917 0156 FFF7FEFF 		bl	__aeabi_i2d
 1918              	.LVL222:
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1919              		.loc 1 384 23 view .LVU454
 1920 015a 0246     		mov	r2, r0
 1921 015c 0B46     		mov	r3, r1
 1922 015e 4046     		mov	r0, r8
 1923 0160 4946     		mov	r1, r9
 1924 0162 FFF7FEFF 		bl	__aeabi_dsub
 1925              	.LVL223:
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1926              		.loc 1 384 39 view .LVU455
 1927 0166 694B     		ldr	r3, .L196+36
 1928 0168 03EBC503 		add	r3, r3, r5, lsl #3
 1929 016c 93ED008B 		vldr.64	d8, [r3]
 384:Core/Src/printf.c ****   unsigned long frac = (unsigned long)tmp;
 1930              		.loc 1 384 10 view .LVU456
 1931 0170 53EC182B 		vmov	r2, r3, d8
 1932 0174 FFF7FEFF 		bl	__aeabi_dmul
 1933              	.LVL224:
 1934 0178 0246     		mov	r2, r0
 1935 017a 0B46     		mov	r3, r1
 1936 017c CDE90623 		strd	r2, [sp, #24]
 1937              	.LVL225:
 385:Core/Src/printf.c ****   diff = tmp - frac;
 1938              		.loc 1 385 3 is_stmt 1 view .LVU457
 385:Core/Src/printf.c ****   diff = tmp - frac;
 1939              		.loc 1 385 17 is_stmt 0 view .LVU458
 1940 0180 FFF7FEFF 		bl	__aeabi_d2uiz
 1941              	.LVL226:
 385:Core/Src/printf.c ****   diff = tmp - frac;
 1942              		.loc 1 385 17 view .LVU459
 1943 0184 0746     		mov	r7, r0
 1944              	.LVL227:
 386:Core/Src/printf.c **** 
 1945              		.loc 1 386 3 is_stmt 1 view .LVU460
 386:Core/Src/printf.c **** 
 1946              		.loc 1 386 14 is_stmt 0 view .LVU461
 1947 0186 FFF7FEFF 		bl	__aeabi_ui2d
 1948              	.LVL228:
 386:Core/Src/printf.c **** 
 1949              		.loc 1 386 14 view .LVU462
 1950 018a 0246     		mov	r2, r0
 1951 018c 0B46     		mov	r3, r1
 386:Core/Src/printf.c **** 
 1952              		.loc 1 386 8 view .LVU463
 1953 018e DDE90601 		ldrd	r0, [sp, #24]
 1954 0192 FFF7FEFF 		bl	__aeabi_dsub
 1955              	.LVL229:
 1956 0196 0246     		mov	r2, r0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 49


 1957 0198 0B46     		mov	r3, r1
 1958 019a CDE90623 		strd	r2, [sp, #24]
 1959              	.LVL230:
 388:Core/Src/printf.c ****     ++frac;
 1960              		.loc 1 388 3 is_stmt 1 view .LVU464
 388:Core/Src/printf.c ****     ++frac;
 1961              		.loc 1 388 6 is_stmt 0 view .LVU465
 1962 019e 0022     		movs	r2, #0
 1963              	.LVL231:
 388:Core/Src/printf.c ****     ++frac;
 1964              		.loc 1 388 6 view .LVU466
 1965 01a0 5B4B     		ldr	r3, .L196+40
 1966 01a2 FFF7FEFF 		bl	__aeabi_dcmpgt
 1967              	.LVL232:
 1968 01a6 08B3     		cbz	r0, .L182
 389:Core/Src/printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 1969              		.loc 1 389 5 is_stmt 1 view .LVU467
 1970 01a8 0137     		adds	r7, r7, #1
 1971              	.LVL233:
 391:Core/Src/printf.c ****       frac = 0;
 1972              		.loc 1 391 5 view .LVU468
 391:Core/Src/printf.c ****       frac = 0;
 1973              		.loc 1 391 14 is_stmt 0 view .LVU469
 1974 01aa 3846     		mov	r0, r7
 1975 01ac FFF7FEFF 		bl	__aeabi_ui2d
 1976              	.LVL234:
 1977 01b0 0246     		mov	r2, r0
 1978 01b2 0B46     		mov	r3, r1
 391:Core/Src/printf.c ****       frac = 0;
 1979              		.loc 1 391 8 view .LVU470
 1980 01b4 51EC180B 		vmov	r0, r1, d8
 1981 01b8 FFF7FEFF 		bl	__aeabi_dcmple
 1982              	.LVL235:
 1983 01bc 08B1     		cbz	r0, .L144
 392:Core/Src/printf.c ****       ++whole;
 1984              		.loc 1 392 7 is_stmt 1 view .LVU471
 1985              	.LVL236:
 393:Core/Src/printf.c ****     }
 1986              		.loc 1 393 7 view .LVU472
 1987 01be 0136     		adds	r6, r6, #1
 1988              	.LVL237:
 392:Core/Src/printf.c ****       ++whole;
 1989              		.loc 1 392 12 is_stmt 0 view .LVU473
 1990 01c0 0027     		movs	r7, #0
 1991              	.LVL238:
 1992              	.L144:
 403:Core/Src/printf.c ****     diff = value - (double)whole;
 1993              		.loc 1 403 3 is_stmt 1 view .LVU474
 403:Core/Src/printf.c ****     diff = value - (double)whole;
 1994              		.loc 1 403 6 is_stmt 0 view .LVU475
 1995 01c2 0DBB     		cbnz	r5, .L147
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1996              		.loc 1 404 5 is_stmt 1 view .LVU476
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1997              		.loc 1 404 20 is_stmt 0 view .LVU477
 1998 01c4 3046     		mov	r0, r6
 1999 01c6 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 50


 2000              	.LVL239:
 2001 01ca 0246     		mov	r2, r0
 2002 01cc 0B46     		mov	r3, r1
 404:Core/Src/printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 2003              		.loc 1 404 10 view .LVU478
 2004 01ce 4046     		mov	r0, r8
 2005 01d0 4946     		mov	r1, r9
 2006 01d2 FFF7FEFF 		bl	__aeabi_dsub
 2007              	.LVL240:
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2008              		.loc 1 405 5 is_stmt 1 view .LVU479
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2009              		.loc 1 405 8 is_stmt 0 view .LVU480
 2010 01d6 0022     		movs	r2, #0
 2011 01d8 4D4B     		ldr	r3, .L196+40
 2012 01da FFF7FEFF 		bl	__aeabi_dcmplt
 2013              	.LVL241:
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2014              		.loc 1 405 8 view .LVU481
 2015 01de 0028     		cmp	r0, #0
 2016 01e0 42D1     		bne	.L155
 405:Core/Src/printf.c ****       // exactly 0.5 and ODD, then round up
 2017              		.loc 1 405 41 discriminator 3 view .LVU482
 2018 01e2 16F0010F 		tst	r6, #1
 2019 01e6 3FD0     		beq	.L155
 408:Core/Src/printf.c ****     }
 2020              		.loc 1 408 7 is_stmt 1 view .LVU483
 2021 01e8 0136     		adds	r6, r6, #1
 2022              	.LVL242:
 408:Core/Src/printf.c ****     }
 2023              		.loc 1 408 7 is_stmt 0 view .LVU484
 2024 01ea 3DE0     		b	.L155
 2025              	.LVL243:
 2026              	.L182:
 396:Core/Src/printf.c ****   }
 2027              		.loc 1 396 8 is_stmt 1 view .LVU485
 396:Core/Src/printf.c ****   }
 2028              		.loc 1 396 11 is_stmt 0 view .LVU486
 2029 01ec 0022     		movs	r2, #0
 2030 01ee 484B     		ldr	r3, .L196+40
 2031 01f0 DDE90601 		ldrd	r0, [sp, #24]
 2032 01f4 FFF7FEFF 		bl	__aeabi_dcmplt
 2033              	.LVL244:
 2034 01f8 0028     		cmp	r0, #0
 2035 01fa E2D1     		bne	.L144
 398:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2036              		.loc 1 398 8 is_stmt 1 view .LVU487
 398:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2037              		.loc 1 398 11 is_stmt 0 view .LVU488
 2038 01fc 17B1     		cbz	r7, .L146
 398:Core/Src/printf.c ****     // if halfway, round up if odd OR if last digit is 0
 2039              		.loc 1 398 25 discriminator 1 view .LVU489
 2040 01fe 17F0010F 		tst	r7, #1
 2041 0202 DED0     		beq	.L144
 2042              	.L146:
 400:Core/Src/printf.c ****   }
 2043              		.loc 1 400 5 is_stmt 1 view .LVU490
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 51


 2044 0204 0137     		adds	r7, r7, #1
 2045              	.LVL245:
 400:Core/Src/printf.c ****   }
 2046              		.loc 1 400 5 is_stmt 0 view .LVU491
 2047 0206 DCE7     		b	.L144
 2048              	.LVL246:
 2049              	.L147:
 2050              	.LBB30:
 414:Core/Src/printf.c ****       --count;
 2051              		.loc 1 414 16 is_stmt 1 view .LVU492
 2052 0208 1F2C     		cmp	r4, #31
 2053 020a 17D8     		bhi	.L151
 415:Core/Src/printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 2054              		.loc 1 415 7 view .LVU493
 2055 020c 013D     		subs	r5, r5, #1
 2056              	.LVL247:
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2057              		.loc 1 416 7 view .LVU494
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2058              		.loc 1 416 39 is_stmt 0 view .LVU495
 2059 020e 414B     		ldr	r3, .L196+44
 2060 0210 A3FB0723 		umull	r2, r3, r3, r7
 2061 0214 DB08     		lsrs	r3, r3, #3
 2062 0216 1946     		mov	r1, r3
 2063 0218 03EB8303 		add	r3, r3, r3, lsl #2
 2064 021c A7EB4303 		sub	r3, r7, r3, lsl #1
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2065              		.loc 1 416 14 view .LVU496
 2066 0220 621C     		adds	r2, r4, #1
 2067              	.LVL248:
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2068              		.loc 1 416 20 view .LVU497
 2069 0222 3033     		adds	r3, r3, #48
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2070              		.loc 1 416 18 view .LVU498
 2071 0224 04F14800 		add	r0, r4, #72
 2072 0228 0DEB0004 		add	r4, sp, r0
 2073 022c 04F8203C 		strb	r3, [r4, #-32]
 417:Core/Src/printf.c ****         break;
 2074              		.loc 1 417 7 is_stmt 1 view .LVU499
 2075              	.LVL249:
 417:Core/Src/printf.c ****         break;
 2076              		.loc 1 417 10 is_stmt 0 view .LVU500
 2077 0230 092F     		cmp	r7, #9
 2078 0232 02D9     		bls	.L169
 417:Core/Src/printf.c ****         break;
 2079              		.loc 1 417 18 view .LVU501
 2080 0234 0F46     		mov	r7, r1
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2081              		.loc 1 416 14 view .LVU502
 2082 0236 1446     		mov	r4, r2
 2083 0238 E6E7     		b	.L147
 2084              	.L169:
 416:Core/Src/printf.c ****       if (!(frac /= 10U)) {
 2085              		.loc 1 416 14 view .LVU503
 2086 023a 1446     		mov	r4, r2
 2087              	.LVL250:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 52


 2088              	.L151:
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2089              		.loc 1 422 44 is_stmt 1 view .LVU504
 2090 023c 1F2C     		cmp	r4, #31
 2091 023e 0AD8     		bhi	.L152
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2092              		.loc 1 422 53 is_stmt 0 discriminator 1 view .LVU505
 2093 0240 6B1E     		subs	r3, r5, #1
 2094              	.LVL251:
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2095              		.loc 1 422 44 discriminator 1 view .LVU506
 2096 0242 45B1     		cbz	r5, .L152
 423:Core/Src/printf.c ****     }
 2097              		.loc 1 423 7 is_stmt 1 view .LVU507
 2098              	.LVL252:
 423:Core/Src/printf.c ****     }
 2099              		.loc 1 423 18 is_stmt 0 view .LVU508
 2100 0244 04F14802 		add	r2, r4, #72
 2101 0248 6A44     		add	r2, sp, r2
 2102 024a 3021     		movs	r1, #48
 2103 024c 02F8201C 		strb	r1, [r2, #-32]
 422:Core/Src/printf.c ****       buf[len++] = '0';
 2104              		.loc 1 422 53 discriminator 1 view .LVU509
 2105 0250 1D46     		mov	r5, r3
 423:Core/Src/printf.c ****     }
 2106              		.loc 1 423 14 view .LVU510
 2107 0252 0134     		adds	r4, r4, #1
 2108              	.LVL253:
 423:Core/Src/printf.c ****     }
 2109              		.loc 1 423 14 view .LVU511
 2110 0254 F2E7     		b	.L151
 2111              	.LVL254:
 2112              	.L152:
 425:Core/Src/printf.c ****       // add decimal
 2113              		.loc 1 425 5 is_stmt 1 view .LVU512
 425:Core/Src/printf.c ****       // add decimal
 2114              		.loc 1 425 8 is_stmt 0 view .LVU513
 2115 0256 1F2C     		cmp	r4, #31
 2116 0258 06D8     		bhi	.L155
 427:Core/Src/printf.c ****     }
 2117              		.loc 1 427 7 is_stmt 1 view .LVU514
 2118              	.LVL255:
 427:Core/Src/printf.c ****     }
 2119              		.loc 1 427 18 is_stmt 0 view .LVU515
 2120 025a 04F14803 		add	r3, r4, #72
 2121 025e 6B44     		add	r3, sp, r3
 2122 0260 2E22     		movs	r2, #46
 2123 0262 03F8202C 		strb	r2, [r3, #-32]
 427:Core/Src/printf.c ****     }
 2124              		.loc 1 427 14 view .LVU516
 2125 0266 0134     		adds	r4, r4, #1
 2126              	.LVL256:
 2127              	.L155:
 427:Core/Src/printf.c ****     }
 2128              		.loc 1 427 14 view .LVU517
 2129              	.LBE30:
 432:Core/Src/printf.c ****     buf[len++] = (char)(48 + (whole % 10));
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 53


 2130              		.loc 1 432 14 is_stmt 1 view .LVU518
 2131 0268 1F2C     		cmp	r4, #31
 2132 026a 17D8     		bhi	.L154
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2133              		.loc 1 433 5 view .LVU519
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2134              		.loc 1 433 37 is_stmt 0 view .LVU520
 2135 026c 2A4A     		ldr	r2, .L196+48
 2136 026e 82FB0632 		smull	r3, r2, r2, r6
 2137 0272 F317     		asrs	r3, r6, #31
 2138 0274 C3EBA203 		rsb	r3, r3, r2, asr #2
 2139 0278 1A46     		mov	r2, r3
 2140 027a 03EB8303 		add	r3, r3, r3, lsl #2
 2141 027e A6EB4303 		sub	r3, r6, r3, lsl #1
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2142              		.loc 1 433 12 view .LVU521
 2143 0282 611C     		adds	r1, r4, #1
 2144              	.LVL257:
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2145              		.loc 1 433 18 view .LVU522
 2146 0284 3033     		adds	r3, r3, #48
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2147              		.loc 1 433 16 view .LVU523
 2148 0286 04F14800 		add	r0, r4, #72
 2149 028a 0DEB0004 		add	r4, sp, r0
 2150 028e 04F8203C 		strb	r3, [r4, #-32]
 434:Core/Src/printf.c ****       break;
 2151              		.loc 1 434 5 is_stmt 1 view .LVU524
 434:Core/Src/printf.c ****       break;
 2152              		.loc 1 434 17 is_stmt 0 view .LVU525
 2153 0292 1646     		mov	r6, r2
 2154              	.LVL258:
 434:Core/Src/printf.c ****       break;
 2155              		.loc 1 434 8 view .LVU526
 2156 0294 0AB1     		cbz	r2, .L170
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2157              		.loc 1 433 12 view .LVU527
 2158 0296 0C46     		mov	r4, r1
 2159 0298 E6E7     		b	.L155
 2160              	.L170:
 433:Core/Src/printf.c ****     if (!(whole /= 10)) {
 2161              		.loc 1 433 12 view .LVU528
 2162 029a 0C46     		mov	r4, r1
 2163              	.LVL259:
 2164              	.L154:
 440:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2165              		.loc 1 440 3 is_stmt 1 view .LVU529
 440:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2166              		.loc 1 440 29 is_stmt 0 view .LVU530
 2167 029c 209B     		ldr	r3, [sp, #128]
 2168 029e 03F00303 		and	r3, r3, #3
 440:Core/Src/printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 2169              		.loc 1 440 6 view .LVU531
 2170 02a2 012B     		cmp	r3, #1
 2171 02a4 3AD0     		beq	.L195
 2172              	.LVL260:
 2173              	.L157:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 54


 449:Core/Src/printf.c ****     if (negative) {
 2174              		.loc 1 449 3 is_stmt 1 view .LVU532
 449:Core/Src/printf.c ****     if (negative) {
 2175              		.loc 1 449 6 is_stmt 0 view .LVU533
 2176 02a6 1F2C     		cmp	r4, #31
 2177 02a8 09D8     		bhi	.L162
 450:Core/Src/printf.c ****       buf[len++] = '-';
 2178              		.loc 1 450 5 is_stmt 1 view .LVU534
 450:Core/Src/printf.c ****       buf[len++] = '-';
 2179              		.loc 1 450 8 is_stmt 0 view .LVU535
 2180 02aa 099B     		ldr	r3, [sp, #36]
 2181 02ac 002B     		cmp	r3, #0
 2182 02ae 52D0     		beq	.L163
 451:Core/Src/printf.c ****     }
 2183              		.loc 1 451 7 is_stmt 1 view .LVU536
 2184              	.LVL261:
 451:Core/Src/printf.c ****     }
 2185              		.loc 1 451 18 is_stmt 0 view .LVU537
 2186 02b0 04F14803 		add	r3, r4, #72
 2187 02b4 6B44     		add	r3, sp, r3
 2188 02b6 2D22     		movs	r2, #45
 2189 02b8 03F8202C 		strb	r2, [r3, #-32]
 451:Core/Src/printf.c ****     }
 2190              		.loc 1 451 14 view .LVU538
 2191 02bc 0134     		adds	r4, r4, #1
 2192              	.LVL262:
 2193              	.L162:
 461:Core/Src/printf.c **** }
 2194              		.loc 1 461 3 is_stmt 1 view .LVU539
 461:Core/Src/printf.c **** }
 2195              		.loc 1 461 10 is_stmt 0 view .LVU540
 2196 02be 209B     		ldr	r3, [sp, #128]
 2197 02c0 0393     		str	r3, [sp, #12]
 2198 02c2 1F9B     		ldr	r3, [sp, #124]
 2199 02c4 0293     		str	r3, [sp, #8]
 2200 02c6 0194     		str	r4, [sp, #4]
 2201 02c8 0AAB     		add	r3, sp, #40
 2202 02ca 0093     		str	r3, [sp]
 2203 02cc 5B46     		mov	r3, fp
 2204 02ce 5246     		mov	r2, r10
 2205 02d0 0899     		ldr	r1, [sp, #32]
 2206 02d2 0598     		ldr	r0, [sp, #20]
 2207 02d4 FFF7FEFF 		bl	_out_rev
 2208              	.LVL263:
 2209              	.L122:
 462:Core/Src/printf.c **** 
 2210              		.loc 1 462 1 view .LVU541
 2211 02d8 13B0     		add	sp, sp, #76
 2212              	.LCFI25:
 2213              		.cfi_remember_state
 2214              		.cfi_def_cfa_offset 44
 2215              		@ sp needed
 2216 02da BDEC028B 		vldm	sp!, {d8}
 2217              	.LCFI26:
 2218              		.cfi_restore 80
 2219              		.cfi_restore 81
 2220              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 55


 2221 02de BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2222              	.LVL264:
 2223              	.L197:
 462:Core/Src/printf.c **** 
 2224              		.loc 1 462 1 view .LVU542
 2225 02e2 00BFAFF3 		.align	3
 2225      0080
 2226              	.L196:
 2227 02e8 00000000 		.word	0
 2228 02ec 65CDCD41 		.word	1104006501
 2229 02f0 00000000 		.word	0
 2230 02f4 65CDCDC1 		.word	-1043477147
 2231 02f8 FFFFEF7F 		.word	2146435071
 2232 02fc 0C000000 		.word	.LC2
 2233 0300 10000000 		.word	.LC3
 2234 0304 00000000 		.word	.LC0
 2235 0308 08000000 		.word	.LC1
 2236 030c 00000000 		.word	pow10.0
 2237 0310 0000E03F 		.word	1071644672
 2238 0314 CDCCCCCC 		.word	-858993459
 2239 0318 67666666 		.word	1717986919
 2240              	.LVL265:
 2241              	.L195:
 2242              	.LCFI27:
 2243              		.cfi_restore_state
 441:Core/Src/printf.c ****       width--;
 2244              		.loc 1 441 5 is_stmt 1 view .LVU543
 441:Core/Src/printf.c ****       width--;
 2245              		.loc 1 441 8 is_stmt 0 view .LVU544
 2246 031c 1F9B     		ldr	r3, [sp, #124]
 2247 031e B3B1     		cbz	r3, .L187
 441:Core/Src/printf.c ****       width--;
 2248              		.loc 1 441 15 discriminator 1 view .LVU545
 2249 0320 099B     		ldr	r3, [sp, #36]
 2250 0322 1BB9     		cbnz	r3, .L159
 441:Core/Src/printf.c ****       width--;
 2251              		.loc 1 441 28 discriminator 2 view .LVU546
 2252 0324 209B     		ldr	r3, [sp, #128]
 2253 0326 13F00C0F 		tst	r3, #12
 2254 032a 12D0     		beq	.L188
 2255              	.L159:
 442:Core/Src/printf.c ****     }
 2256              		.loc 1 442 7 is_stmt 1 view .LVU547
 442:Core/Src/printf.c ****     }
 2257              		.loc 1 442 12 is_stmt 0 view .LVU548
 2258 032c 1F9B     		ldr	r3, [sp, #124]
 2259 032e 013B     		subs	r3, r3, #1
 2260 0330 1F93     		str	r3, [sp, #124]
 2261              	.LVL266:
 442:Core/Src/printf.c ****     }
 2262              		.loc 1 442 12 view .LVU549
 2263 0332 1946     		mov	r1, r3
 2264 0334 06E0     		b	.L160
 2265              	.LVL267:
 2266              	.L161:
 445:Core/Src/printf.c ****     }
 2267              		.loc 1 445 7 is_stmt 1 view .LVU550
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 56


 445:Core/Src/printf.c ****     }
 2268              		.loc 1 445 18 is_stmt 0 view .LVU551
 2269 0336 04F14803 		add	r3, r4, #72
 2270 033a 6B44     		add	r3, sp, r3
 2271 033c 3022     		movs	r2, #48
 2272 033e 03F8202C 		strb	r2, [r3, #-32]
 445:Core/Src/printf.c ****     }
 2273              		.loc 1 445 14 view .LVU552
 2274 0342 0134     		adds	r4, r4, #1
 2275              	.LVL268:
 2276              	.L160:
 444:Core/Src/printf.c ****       buf[len++] = '0';
 2277              		.loc 1 444 26 is_stmt 1 view .LVU553
 2278 0344 8C42     		cmp	r4, r1
 2279 0346 AED2     		bcs	.L157
 444:Core/Src/printf.c ****       buf[len++] = '0';
 2280              		.loc 1 444 26 is_stmt 0 discriminator 1 view .LVU554
 2281 0348 1F2C     		cmp	r4, #31
 2282 034a F4D9     		bls	.L161
 2283 034c ABE7     		b	.L157
 2284              	.LVL269:
 2285              	.L187:
 444:Core/Src/printf.c ****       buf[len++] = '0';
 2286              		.loc 1 444 26 discriminator 1 view .LVU555
 2287 034e 1F99     		ldr	r1, [sp, #124]
 2288 0350 F8E7     		b	.L160
 2289              	.L188:
 2290 0352 1F99     		ldr	r1, [sp, #124]
 2291 0354 F6E7     		b	.L160
 2292              	.L163:
 453:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2293              		.loc 1 453 10 is_stmt 1 view .LVU556
 453:Core/Src/printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 2294              		.loc 1 453 13 is_stmt 0 view .LVU557
 2295 0356 209B     		ldr	r3, [sp, #128]
 2296 0358 13F0040F 		tst	r3, #4
 2297 035c 07D0     		beq	.L164
 454:Core/Src/printf.c ****     }
 2298              		.loc 1 454 7 is_stmt 1 view .LVU558
 2299              	.LVL270:
 454:Core/Src/printf.c ****     }
 2300              		.loc 1 454 18 is_stmt 0 view .LVU559
 2301 035e 04F14803 		add	r3, r4, #72
 2302 0362 6B44     		add	r3, sp, r3
 2303 0364 2B22     		movs	r2, #43
 2304 0366 03F8202C 		strb	r2, [r3, #-32]
 454:Core/Src/printf.c ****     }
 2305              		.loc 1 454 14 view .LVU560
 2306 036a 0134     		adds	r4, r4, #1
 2307              	.LVL271:
 454:Core/Src/printf.c ****     }
 2308              		.loc 1 454 14 view .LVU561
 2309 036c A7E7     		b	.L162
 2310              	.L164:
 456:Core/Src/printf.c ****       buf[len++] = ' ';
 2311              		.loc 1 456 10 is_stmt 1 view .LVU562
 456:Core/Src/printf.c ****       buf[len++] = ' ';
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 57


 2312              		.loc 1 456 13 is_stmt 0 view .LVU563
 2313 036e 209B     		ldr	r3, [sp, #128]
 2314 0370 13F0080F 		tst	r3, #8
 2315 0374 A3D0     		beq	.L162
 457:Core/Src/printf.c ****     }
 2316              		.loc 1 457 7 is_stmt 1 view .LVU564
 2317              	.LVL272:
 457:Core/Src/printf.c ****     }
 2318              		.loc 1 457 18 is_stmt 0 view .LVU565
 2319 0376 04F14803 		add	r3, r4, #72
 2320 037a 6B44     		add	r3, sp, r3
 2321 037c 2022     		movs	r2, #32
 2322 037e 03F8202C 		strb	r2, [r3, #-32]
 457:Core/Src/printf.c ****     }
 2323              		.loc 1 457 14 view .LVU566
 2324 0382 0134     		adds	r4, r4, #1
 2325              	.LVL273:
 457:Core/Src/printf.c ****     }
 2326              		.loc 1 457 14 view .LVU567
 2327 0384 9BE7     		b	.L162
 2328              		.cfi_endproc
 2329              	.LFE11:
 2331 0386 00BF     		.section	.text._vsnprintf,"ax",%progbits
 2332              		.align	1
 2333              		.syntax unified
 2334              		.thumb
 2335              		.thumb_func
 2337              	_vsnprintf:
 2338              	.LVL274:
 2339              	.LFB13:
 572:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 573:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 574:Core/Src/printf.c **** 
 575:Core/Src/printf.c **** 
 576:Core/Src/printf.c **** // internal vsnprintf
 577:Core/Src/printf.c **** static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_l
 578:Core/Src/printf.c **** {
 2340              		.loc 1 578 1 is_stmt 1 view -0
 2341              		.cfi_startproc
 2342              		@ args = 4, pretend = 0, frame = 24
 2343              		@ frame_needed = 0, uses_anonymous_args = 0
 2344              		.loc 1 578 1 is_stmt 0 view .LVU569
 2345 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2346              	.LCFI28:
 2347              		.cfi_def_cfa_offset 36
 2348              		.cfi_offset 4, -36
 2349              		.cfi_offset 5, -32
 2350              		.cfi_offset 6, -28
 2351              		.cfi_offset 7, -24
 2352              		.cfi_offset 8, -20
 2353              		.cfi_offset 9, -16
 2354              		.cfi_offset 10, -12
 2355              		.cfi_offset 11, -8
 2356              		.cfi_offset 14, -4
 2357 0004 91B0     		sub	sp, sp, #68
 2358              	.LCFI29:
 2359              		.cfi_def_cfa_offset 104
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 58


 2360 0006 8046     		mov	r8, r0
 2361 0008 1746     		mov	r7, r2
 2362 000a 0F93     		str	r3, [sp, #60]
 579:Core/Src/printf.c ****   unsigned int flags, width, precision, n;
 2363              		.loc 1 579 3 is_stmt 1 view .LVU570
 580:Core/Src/printf.c ****   size_t idx = 0U;
 2364              		.loc 1 580 3 view .LVU571
 2365              	.LVL275:
 581:Core/Src/printf.c **** 
 582:Core/Src/printf.c ****   if (!buffer) {
 2366              		.loc 1 582 3 view .LVU572
 2367              		.loc 1 582 6 is_stmt 0 view .LVU573
 2368 000c 8946     		mov	r9, r1
 2369 000e 0029     		cmp	r1, #0
 2370 0010 00F04783 		beq	.L302
 2371              	.L199:
 2372              	.LVL276:
 2373              	.LBB31:
 583:Core/Src/printf.c ****     // use null output function
 584:Core/Src/printf.c ****     out = _out_null;
 585:Core/Src/printf.c ****   }
 586:Core/Src/printf.c **** 
 587:Core/Src/printf.c ****   while (*format)
 588:Core/Src/printf.c ****   {
 589:Core/Src/printf.c ****     // format specifier?  %[flags][width][.precision][length]
 590:Core/Src/printf.c ****     if (*format != '%') {
 591:Core/Src/printf.c ****       // no
 592:Core/Src/printf.c ****       out(*format, buffer, idx++, maxlen);
 593:Core/Src/printf.c ****       format++;
 594:Core/Src/printf.c ****       continue;
 595:Core/Src/printf.c ****     }
 596:Core/Src/printf.c ****     else {
 597:Core/Src/printf.c ****       // yes, evaluate it
 598:Core/Src/printf.c ****       format++;
 599:Core/Src/printf.c ****     }
 600:Core/Src/printf.c **** 
 601:Core/Src/printf.c ****     // evaluate flags
 602:Core/Src/printf.c ****     flags = 0U;
 603:Core/Src/printf.c ****     do {
 604:Core/Src/printf.c ****       switch (*format) {
 605:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 606:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 607:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 608:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 609:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 610:Core/Src/printf.c ****         default :                                   n = 0U; break;
 611:Core/Src/printf.c ****       }
 612:Core/Src/printf.c ****     } while (n);
 613:Core/Src/printf.c **** 
 614:Core/Src/printf.c ****     // evaluate width field
 615:Core/Src/printf.c ****     width = 0U;
 616:Core/Src/printf.c ****     if (_is_digit(*format)) {
 617:Core/Src/printf.c ****       width = _atoi(&format);
 618:Core/Src/printf.c ****     }
 619:Core/Src/printf.c ****     else if (*format == '*') {
 620:Core/Src/printf.c ****       const int w = va_arg(va, int);
 621:Core/Src/printf.c ****       if (w < 0) {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 59


 622:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 623:Core/Src/printf.c ****         width = (unsigned int)-w;
 624:Core/Src/printf.c ****       }
 625:Core/Src/printf.c ****       else {
 626:Core/Src/printf.c ****         width = (unsigned int)w;
 627:Core/Src/printf.c ****       }
 628:Core/Src/printf.c ****       format++;
 629:Core/Src/printf.c ****     }
 630:Core/Src/printf.c **** 
 631:Core/Src/printf.c ****     // evaluate precision field
 632:Core/Src/printf.c ****     precision = 0U;
 633:Core/Src/printf.c ****     if (*format == '.') {
 634:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 635:Core/Src/printf.c ****       format++;
 636:Core/Src/printf.c ****       if (_is_digit(*format)) {
 637:Core/Src/printf.c ****         precision = _atoi(&format);
 638:Core/Src/printf.c ****       }
 639:Core/Src/printf.c ****       else if (*format == '*') {
 640:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 641:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 642:Core/Src/printf.c ****         format++;
 643:Core/Src/printf.c ****       }
 644:Core/Src/printf.c ****     }
 645:Core/Src/printf.c **** 
 646:Core/Src/printf.c ****     // evaluate length field
 647:Core/Src/printf.c ****     switch (*format) {
 648:Core/Src/printf.c ****       case 'l' :
 649:Core/Src/printf.c ****         flags |= FLAGS_LONG;
 650:Core/Src/printf.c ****         format++;
 651:Core/Src/printf.c ****         if (*format == 'l') {
 652:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 653:Core/Src/printf.c ****           format++;
 654:Core/Src/printf.c ****         }
 655:Core/Src/printf.c ****         break;
 656:Core/Src/printf.c ****       case 'h' :
 657:Core/Src/printf.c ****         flags |= FLAGS_SHORT;
 658:Core/Src/printf.c ****         format++;
 659:Core/Src/printf.c ****         if (*format == 'h') {
 660:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 661:Core/Src/printf.c ****           format++;
 662:Core/Src/printf.c ****         }
 663:Core/Src/printf.c ****         break;
 664:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_PTRDIFF_T)
 665:Core/Src/printf.c ****       case 't' :
 666:Core/Src/printf.c ****         flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 667:Core/Src/printf.c ****         format++;
 668:Core/Src/printf.c ****         break;
 669:Core/Src/printf.c **** #endif
 670:Core/Src/printf.c ****       case 'j' :
 671:Core/Src/printf.c ****         flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 672:Core/Src/printf.c ****         format++;
 673:Core/Src/printf.c ****         break;
 674:Core/Src/printf.c ****       case 'z' :
 675:Core/Src/printf.c ****         flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 676:Core/Src/printf.c ****         format++;
 677:Core/Src/printf.c ****         break;
 678:Core/Src/printf.c ****       default :
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 60


 679:Core/Src/printf.c ****         break;
 680:Core/Src/printf.c ****     }
 681:Core/Src/printf.c **** 
 682:Core/Src/printf.c ****     // evaluate specifier
 683:Core/Src/printf.c ****     switch (*format) {
 684:Core/Src/printf.c ****       case 'd' :
 685:Core/Src/printf.c ****       case 'i' :
 686:Core/Src/printf.c ****       case 'u' :
 687:Core/Src/printf.c ****       case 'x' :
 688:Core/Src/printf.c ****       case 'X' :
 689:Core/Src/printf.c ****       case 'o' :
 690:Core/Src/printf.c ****       case 'b' : {
 691:Core/Src/printf.c ****         // set the base
 692:Core/Src/printf.c ****         unsigned int base;
 693:Core/Src/printf.c ****         if (*format == 'x' || *format == 'X') {
 694:Core/Src/printf.c ****           base = 16U;
 695:Core/Src/printf.c ****         }
 696:Core/Src/printf.c ****         else if (*format == 'o') {
 697:Core/Src/printf.c ****           base =  8U;
 698:Core/Src/printf.c ****         }
 699:Core/Src/printf.c ****         else if (*format == 'b') {
 700:Core/Src/printf.c ****           base =  2U;
 701:Core/Src/printf.c ****         }
 702:Core/Src/printf.c ****         else {
 703:Core/Src/printf.c ****           base = 10U;
 704:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 705:Core/Src/printf.c ****         }
 706:Core/Src/printf.c ****         // uppercase
 707:Core/Src/printf.c ****         if (*format == 'X') {
 708:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 709:Core/Src/printf.c ****         }
 710:Core/Src/printf.c **** 
 711:Core/Src/printf.c ****         // no plus or space flag for u, x, X, o, b
 712:Core/Src/printf.c ****         if ((*format != 'i') && (*format != 'd')) {
 713:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 714:Core/Src/printf.c ****         }
 715:Core/Src/printf.c **** 
 716:Core/Src/printf.c ****         // ignore '0' flag when precision is given
 717:Core/Src/printf.c ****         if (flags & FLAGS_PRECISION) {
 718:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 719:Core/Src/printf.c ****         }
 720:Core/Src/printf.c **** 
 721:Core/Src/printf.c ****         // convert the integer
 722:Core/Src/printf.c ****         if ((*format == 'i') || (*format == 'd')) {
 723:Core/Src/printf.c ****           // signed
 724:Core/Src/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 725:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 726:Core/Src/printf.c ****             const long long value = va_arg(va, long long);
 727:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 728:Core/Src/printf.c **** #endif
 729:Core/Src/printf.c ****           }
 730:Core/Src/printf.c ****           else if (flags & FLAGS_LONG) {
 731:Core/Src/printf.c ****             const long value = va_arg(va, long);
 732:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 733:Core/Src/printf.c ****           }
 734:Core/Src/printf.c ****           else {
 735:Core/Src/printf.c ****             const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 61


 736:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 737:Core/Src/printf.c ****           }
 738:Core/Src/printf.c ****         }
 739:Core/Src/printf.c ****         else {
 740:Core/Src/printf.c ****           // unsigned
 741:Core/Src/printf.c ****           if (flags & FLAGS_LONG_LONG) {
 742:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 743:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, 
 744:Core/Src/printf.c **** #endif
 745:Core/Src/printf.c ****           }
 746:Core/Src/printf.c ****           else if (flags & FLAGS_LONG) {
 747:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 748:Core/Src/printf.c ****           }
 749:Core/Src/printf.c ****           else {
 750:Core/Src/printf.c ****             const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned in
 751:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 752:Core/Src/printf.c ****           }
 753:Core/Src/printf.c ****         }
 754:Core/Src/printf.c ****         format++;
 755:Core/Src/printf.c ****         break;
 756:Core/Src/printf.c ****       }
 757:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 758:Core/Src/printf.c ****       case 'f' :
 759:Core/Src/printf.c ****       case 'F' :
 760:Core/Src/printf.c ****         if (*format == 'F') flags |= FLAGS_UPPERCASE;
 761:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 762:Core/Src/printf.c ****         format++;
 763:Core/Src/printf.c ****         break;
 764:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 765:Core/Src/printf.c ****       case 'e':
 766:Core/Src/printf.c ****       case 'E':
 767:Core/Src/printf.c ****       case 'g':
 768:Core/Src/printf.c ****       case 'G':
 769:Core/Src/printf.c ****         if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
 770:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 771:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 772:Core/Src/printf.c ****         format++;
 773:Core/Src/printf.c ****         break;
 774:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 775:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 776:Core/Src/printf.c ****       case 'c' : {
 777:Core/Src/printf.c ****         unsigned int l = 1U;
 778:Core/Src/printf.c ****         // pre padding
 779:Core/Src/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 780:Core/Src/printf.c ****           while (l++ < width) {
 781:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 782:Core/Src/printf.c ****           }
 783:Core/Src/printf.c ****         }
 784:Core/Src/printf.c ****         // char output
 785:Core/Src/printf.c ****         out((char)va_arg(va, int), buffer, idx++, maxlen);
 786:Core/Src/printf.c ****         // post padding
 787:Core/Src/printf.c ****         if (flags & FLAGS_LEFT) {
 788:Core/Src/printf.c ****           while (l++ < width) {
 789:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 790:Core/Src/printf.c ****           }
 791:Core/Src/printf.c ****         }
 792:Core/Src/printf.c ****         format++;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 62


 793:Core/Src/printf.c ****         break;
 2374              		.loc 1 793 9 view .LVU574
 2375 0014 0026     		movs	r6, #0
 2376              	.LVL277:
 2377              	.L282:
 2378              		.loc 1 793 9 view .LVU575
 2379              	.LBE31:
 587:Core/Src/printf.c ****   {
 2380              		.loc 1 587 10 is_stmt 1 view .LVU576
 2381 0016 0F9B     		ldr	r3, [sp, #60]
 2382 0018 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2383 001a 0028     		cmp	r0, #0
 2384 001c 00F04483 		beq	.L303
 590:Core/Src/printf.c ****       // no
 2385              		.loc 1 590 5 view .LVU577
 590:Core/Src/printf.c ****       // no
 2386              		.loc 1 590 8 is_stmt 0 view .LVU578
 2387 0020 2528     		cmp	r0, #37
 2388 0022 09D0     		beq	.L201
 592:Core/Src/printf.c ****       format++;
 2389              		.loc 1 592 7 is_stmt 1 view .LVU579
 2390 0024 741C     		adds	r4, r6, #1
 2391              	.LVL278:
 592:Core/Src/printf.c ****       format++;
 2392              		.loc 1 592 7 is_stmt 0 view .LVU580
 2393 0026 3B46     		mov	r3, r7
 2394 0028 3246     		mov	r2, r6
 2395 002a 4946     		mov	r1, r9
 2396 002c C047     		blx	r8
 2397              	.LVL279:
 593:Core/Src/printf.c ****       continue;
 2398              		.loc 1 593 7 is_stmt 1 view .LVU581
 593:Core/Src/printf.c ****       continue;
 2399              		.loc 1 593 13 is_stmt 0 view .LVU582
 2400 002e 0F9B     		ldr	r3, [sp, #60]
 2401 0030 0133     		adds	r3, r3, #1
 2402 0032 0F93     		str	r3, [sp, #60]
 594:Core/Src/printf.c ****     }
 2403              		.loc 1 594 7 is_stmt 1 view .LVU583
 592:Core/Src/printf.c ****       format++;
 2404              		.loc 1 592 7 is_stmt 0 view .LVU584
 2405 0034 2646     		mov	r6, r4
 594:Core/Src/printf.c ****     }
 2406              		.loc 1 594 7 view .LVU585
 2407 0036 EEE7     		b	.L282
 2408              	.LVL280:
 2409              	.L201:
 598:Core/Src/printf.c ****     }
 2410              		.loc 1 598 7 is_stmt 1 view .LVU586
 598:Core/Src/printf.c ****     }
 2411              		.loc 1 598 13 is_stmt 0 view .LVU587
 2412 0038 0133     		adds	r3, r3, #1
 2413 003a 0F93     		str	r3, [sp, #60]
 602:Core/Src/printf.c ****     do {
 2414              		.loc 1 602 5 is_stmt 1 view .LVU588
 2415              	.LVL281:
 602:Core/Src/printf.c ****     do {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 63


 2416              		.loc 1 602 11 is_stmt 0 view .LVU589
 2417 003c 0025     		movs	r5, #0
 2418 003e 1FE0     		b	.L210
 2419              	.LVL282:
 2420              	.L204:
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2421              		.loc 1 605 19 is_stmt 1 view .LVU590
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2422              		.loc 1 605 25 is_stmt 0 view .LVU591
 2423 0040 45F00105 		orr	r5, r5, #1
 2424              	.LVL283:
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2425              		.loc 1 605 43 is_stmt 1 view .LVU592
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2426              		.loc 1 605 49 is_stmt 0 view .LVU593
 2427 0044 0132     		adds	r2, r2, #1
 2428 0046 0F92     		str	r2, [sp, #60]
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2429              		.loc 1 605 53 is_stmt 1 view .LVU594
 2430              	.LVL284:
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2431              		.loc 1 605 61 view .LVU595
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2432              		.loc 1 605 55 is_stmt 0 view .LVU596
 2433 0048 0123     		movs	r3, #1
 605:Core/Src/printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2434              		.loc 1 605 61 view .LVU597
 2435 004a 18E0     		b	.L203
 2436              	.LVL285:
 2437              	.L206:
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2438              		.loc 1 606 19 is_stmt 1 view .LVU598
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2439              		.loc 1 606 25 is_stmt 0 view .LVU599
 2440 004c 45F00205 		orr	r5, r5, #2
 2441              	.LVL286:
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2442              		.loc 1 606 43 is_stmt 1 view .LVU600
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2443              		.loc 1 606 49 is_stmt 0 view .LVU601
 2444 0050 0132     		adds	r2, r2, #1
 2445 0052 0F92     		str	r2, [sp, #60]
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2446              		.loc 1 606 53 is_stmt 1 view .LVU602
 2447              	.LVL287:
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2448              		.loc 1 606 61 view .LVU603
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2449              		.loc 1 606 55 is_stmt 0 view .LVU604
 2450 0054 0123     		movs	r3, #1
 606:Core/Src/printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2451              		.loc 1 606 61 view .LVU605
 2452 0056 12E0     		b	.L203
 2453              	.LVL288:
 2454              	.L207:
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2455              		.loc 1 607 19 is_stmt 1 view .LVU606
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 64


 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2456              		.loc 1 607 25 is_stmt 0 view .LVU607
 2457 0058 45F00405 		orr	r5, r5, #4
 2458              	.LVL289:
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2459              		.loc 1 607 43 is_stmt 1 view .LVU608
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2460              		.loc 1 607 49 is_stmt 0 view .LVU609
 2461 005c 0132     		adds	r2, r2, #1
 2462 005e 0F92     		str	r2, [sp, #60]
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2463              		.loc 1 607 53 is_stmt 1 view .LVU610
 2464              	.LVL290:
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2465              		.loc 1 607 61 view .LVU611
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2466              		.loc 1 607 55 is_stmt 0 view .LVU612
 2467 0060 0123     		movs	r3, #1
 607:Core/Src/printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2468              		.loc 1 607 61 view .LVU613
 2469 0062 0CE0     		b	.L203
 2470              	.LVL291:
 2471              	.L209:
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2472              		.loc 1 608 19 is_stmt 1 view .LVU614
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2473              		.loc 1 608 25 is_stmt 0 view .LVU615
 2474 0064 45F00805 		orr	r5, r5, #8
 2475              	.LVL292:
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2476              		.loc 1 608 43 is_stmt 1 view .LVU616
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2477              		.loc 1 608 49 is_stmt 0 view .LVU617
 2478 0068 0132     		adds	r2, r2, #1
 2479 006a 0F92     		str	r2, [sp, #60]
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2480              		.loc 1 608 53 is_stmt 1 view .LVU618
 2481              	.LVL293:
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2482              		.loc 1 608 61 view .LVU619
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2483              		.loc 1 608 55 is_stmt 0 view .LVU620
 2484 006c 0123     		movs	r3, #1
 608:Core/Src/printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2485              		.loc 1 608 61 view .LVU621
 2486 006e 06E0     		b	.L203
 2487              	.LVL294:
 2488              	.L208:
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2489              		.loc 1 609 19 is_stmt 1 view .LVU622
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2490              		.loc 1 609 25 is_stmt 0 view .LVU623
 2491 0070 45F01005 		orr	r5, r5, #16
 2492              	.LVL295:
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2493              		.loc 1 609 43 is_stmt 1 view .LVU624
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 65


 2494              		.loc 1 609 49 is_stmt 0 view .LVU625
 2495 0074 0132     		adds	r2, r2, #1
 2496 0076 0F92     		str	r2, [sp, #60]
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2497              		.loc 1 609 53 is_stmt 1 view .LVU626
 2498              	.LVL296:
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2499              		.loc 1 609 61 view .LVU627
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2500              		.loc 1 609 55 is_stmt 0 view .LVU628
 2501 0078 0123     		movs	r3, #1
 609:Core/Src/printf.c ****         default :                                   n = 0U; break;
 2502              		.loc 1 609 61 view .LVU629
 2503 007a 00E0     		b	.L203
 2504              	.LVL297:
 2505              	.L286:
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2506              		.loc 1 604 7 view .LVU630
 2507 007c 0023     		movs	r3, #0
 2508              	.L203:
 2509              	.LVL298:
 612:Core/Src/printf.c **** 
 2510              		.loc 1 612 14 is_stmt 1 view .LVU631
 2511 007e 4BB3     		cbz	r3, .L304
 2512              	.LVL299:
 2513              	.L210:
 603:Core/Src/printf.c ****       switch (*format) {
 2514              		.loc 1 603 5 view .LVU632
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2515              		.loc 1 604 7 view .LVU633
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2516              		.loc 1 604 15 is_stmt 0 view .LVU634
 2517 0080 0F9A     		ldr	r2, [sp, #60]
 2518 0082 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 604:Core/Src/printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2519              		.loc 1 604 7 view .LVU635
 2520 0084 203B     		subs	r3, r3, #32
 2521 0086 102B     		cmp	r3, #16
 2522 0088 F8D8     		bhi	.L286
 2523 008a 01A1     		adr	r1, .L205
 2524 008c 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 2525              		.p2align 2
 2526              	.L205:
 2527 0090 65000000 		.word	.L209+1
 2528 0094 7D000000 		.word	.L286+1
 2529 0098 7D000000 		.word	.L286+1
 2530 009c 71000000 		.word	.L208+1
 2531 00a0 7D000000 		.word	.L286+1
 2532 00a4 7D000000 		.word	.L286+1
 2533 00a8 7D000000 		.word	.L286+1
 2534 00ac 7D000000 		.word	.L286+1
 2535 00b0 7D000000 		.word	.L286+1
 2536 00b4 7D000000 		.word	.L286+1
 2537 00b8 7D000000 		.word	.L286+1
 2538 00bc 59000000 		.word	.L207+1
 2539 00c0 7D000000 		.word	.L286+1
 2540 00c4 4D000000 		.word	.L206+1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 66


 2541 00c8 7D000000 		.word	.L286+1
 2542 00cc 7D000000 		.word	.L286+1
 2543 00d0 41000000 		.word	.L204+1
 2544              	.LVL300:
 2545              		.p2align 1
 2546              	.L304:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2547              		.loc 1 616 9 view .LVU636
 2548 00d4 0B93     		str	r3, [sp, #44]
 615:Core/Src/printf.c ****     if (_is_digit(*format)) {
 2549              		.loc 1 615 5 is_stmt 1 view .LVU637
 2550              	.LVL301:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2551              		.loc 1 616 5 view .LVU638
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2552              		.loc 1 616 9 is_stmt 0 view .LVU639
 2553 00d6 0F9B     		ldr	r3, [sp, #60]
 2554              	.LVL302:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2555              		.loc 1 616 9 view .LVU640
 2556 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2557              	.LVL303:
 2558              	.LBB32:
 2559              	.LBI32:
 181:Core/Src/printf.c **** {
 2560              		.loc 1 181 20 is_stmt 1 view .LVU641
 2561              	.LBB33:
 183:Core/Src/printf.c **** }
 2562              		.loc 1 183 3 view .LVU642
 183:Core/Src/printf.c **** }
 2563              		.loc 1 183 22 is_stmt 0 view .LVU643
 2564 00da A2F13003 		sub	r3, r2, #48
 2565 00de DBB2     		uxtb	r3, r3
 2566              	.LVL304:
 183:Core/Src/printf.c **** }
 2567              		.loc 1 183 22 view .LVU644
 2568              	.LBE33:
 2569              	.LBE32:
 616:Core/Src/printf.c ****       width = _atoi(&format);
 2570              		.loc 1 616 8 discriminator 1 view .LVU645
 2571 00e0 092B     		cmp	r3, #9
 2572 00e2 18D9     		bls	.L305
 619:Core/Src/printf.c ****       const int w = va_arg(va, int);
 2573              		.loc 1 619 10 is_stmt 1 view .LVU646
 619:Core/Src/printf.c ****       const int w = va_arg(va, int);
 2574              		.loc 1 619 13 is_stmt 0 view .LVU647
 2575 00e4 2A2A     		cmp	r2, #42
 2576 00e6 1BD0     		beq	.L306
 615:Core/Src/printf.c ****     if (_is_digit(*format)) {
 2577              		.loc 1 615 11 view .LVU648
 2578 00e8 DDF82CB0 		ldr	fp, [sp, #44]
 2579              	.LVL305:
 2580              	.L212:
 632:Core/Src/printf.c ****     if (*format == '.') {
 2581              		.loc 1 632 5 is_stmt 1 view .LVU649
 633:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2582              		.loc 1 633 5 view .LVU650
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 67


 633:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2583              		.loc 1 633 9 is_stmt 0 view .LVU651
 2584 00ec 0F9B     		ldr	r3, [sp, #60]
 2585 00ee 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 633:Core/Src/printf.c ****       flags |= FLAGS_PRECISION;
 2586              		.loc 1 633 8 view .LVU652
 2587 00f0 2E2A     		cmp	r2, #46
 2588 00f2 25D0     		beq	.L307
 2589              	.LVL306:
 2590              	.L215:
 647:Core/Src/printf.c ****       case 'l' :
 2591              		.loc 1 647 5 is_stmt 1 view .LVU653
 647:Core/Src/printf.c ****       case 'l' :
 2592              		.loc 1 647 13 is_stmt 0 view .LVU654
 2593 00f4 0F9A     		ldr	r2, [sp, #60]
 2594 00f6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 647:Core/Src/printf.c ****       case 'l' :
 2595              		.loc 1 647 5 view .LVU655
 2596 00f8 683B     		subs	r3, r3, #104
 2597 00fa 122B     		cmp	r3, #18
 2598 00fc 5CD8     		bhi	.L217
 2599 00fe DFE803F0 		tbb	[pc, r3]
 2600              	.L219:
 2601 0102 49       		.byte	(.L223-.L219)/2
 2602 0103 5B       		.byte	(.L217-.L219)/2
 2603 0104 AC       		.byte	(.L222-.L219)/2
 2604 0105 5B       		.byte	(.L217-.L219)/2
 2605 0106 3B       		.byte	(.L221-.L219)/2
 2606 0107 5B       		.byte	(.L217-.L219)/2
 2607 0108 5B       		.byte	(.L217-.L219)/2
 2608 0109 5B       		.byte	(.L217-.L219)/2
 2609 010a 5B       		.byte	(.L217-.L219)/2
 2610 010b 5B       		.byte	(.L217-.L219)/2
 2611 010c 5B       		.byte	(.L217-.L219)/2
 2612 010d 5B       		.byte	(.L217-.L219)/2
 2613 010e 57       		.byte	(.L220-.L219)/2
 2614 010f 5B       		.byte	(.L217-.L219)/2
 2615 0110 5B       		.byte	(.L217-.L219)/2
 2616 0111 5B       		.byte	(.L217-.L219)/2
 2617 0112 5B       		.byte	(.L217-.L219)/2
 2618 0113 5B       		.byte	(.L217-.L219)/2
 2619 0114 B1       		.byte	(.L218-.L219)/2
 2620              	.LVL307:
 2621 0115 00       		.p2align 1
 2622              	.L305:
 617:Core/Src/printf.c ****     }
 2623              		.loc 1 617 7 is_stmt 1 view .LVU656
 617:Core/Src/printf.c ****     }
 2624              		.loc 1 617 15 is_stmt 0 view .LVU657
 2625 0116 0FA8     		add	r0, sp, #60
 2626 0118 FFF7FEFF 		bl	_atoi
 2627              	.LVL308:
 2628 011c 8346     		mov	fp, r0
 2629              	.LVL309:
 617:Core/Src/printf.c ****     }
 2630              		.loc 1 617 15 view .LVU658
 2631 011e E5E7     		b	.L212
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 68


 2632              	.LVL310:
 2633              	.L306:
 2634              	.LBB34:
 620:Core/Src/printf.c ****       if (w < 0) {
 2635              		.loc 1 620 7 is_stmt 1 view .LVU659
 620:Core/Src/printf.c ****       if (w < 0) {
 2636              		.loc 1 620 17 is_stmt 0 view .LVU660
 2637 0120 1A9B     		ldr	r3, [sp, #104]
 2638 0122 1A1D     		adds	r2, r3, #4
 2639 0124 1A92     		str	r2, [sp, #104]
 2640 0126 1B68     		ldr	r3, [r3]
 621:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 2641              		.loc 1 621 7 is_stmt 1 view .LVU661
 621:Core/Src/printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 2642              		.loc 1 621 10 is_stmt 0 view .LVU662
 2643 0128 002B     		cmp	r3, #0
 2644 012a 04DB     		blt	.L308
 626:Core/Src/printf.c ****       }
 2645              		.loc 1 626 9 is_stmt 1 view .LVU663
 626:Core/Src/printf.c ****       }
 2646              		.loc 1 626 15 is_stmt 0 view .LVU664
 2647 012c 9B46     		mov	fp, r3
 2648              	.LVL311:
 2649              	.L214:
 628:Core/Src/printf.c ****     }
 2650              		.loc 1 628 7 is_stmt 1 view .LVU665
 628:Core/Src/printf.c ****     }
 2651              		.loc 1 628 13 is_stmt 0 view .LVU666
 2652 012e 0F9B     		ldr	r3, [sp, #60]
 2653 0130 0133     		adds	r3, r3, #1
 2654 0132 0F93     		str	r3, [sp, #60]
 2655 0134 DAE7     		b	.L212
 2656              	.LVL312:
 2657              	.L308:
 622:Core/Src/printf.c ****         width = (unsigned int)-w;
 2658              		.loc 1 622 9 is_stmt 1 view .LVU667
 622:Core/Src/printf.c ****         width = (unsigned int)-w;
 2659              		.loc 1 622 15 is_stmt 0 view .LVU668
 2660 0136 45F00205 		orr	r5, r5, #2
 2661              	.LVL313:
 623:Core/Src/printf.c ****       }
 2662              		.loc 1 623 9 is_stmt 1 view .LVU669
 623:Core/Src/printf.c ****       }
 2663              		.loc 1 623 31 is_stmt 0 view .LVU670
 2664 013a C3F1000B 		rsb	fp, r3, #0
 2665              	.LVL314:
 623:Core/Src/printf.c ****       }
 2666              		.loc 1 623 31 view .LVU671
 2667 013e F6E7     		b	.L214
 2668              	.LVL315:
 2669              	.L307:
 623:Core/Src/printf.c ****       }
 2670              		.loc 1 623 31 view .LVU672
 2671              	.LBE34:
 634:Core/Src/printf.c ****       format++;
 2672              		.loc 1 634 7 is_stmt 1 view .LVU673
 634:Core/Src/printf.c ****       format++;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 69


 2673              		.loc 1 634 13 is_stmt 0 view .LVU674
 2674 0140 45F48065 		orr	r5, r5, #1024
 2675              	.LVL316:
 635:Core/Src/printf.c ****       if (_is_digit(*format)) {
 2676              		.loc 1 635 7 is_stmt 1 view .LVU675
 635:Core/Src/printf.c ****       if (_is_digit(*format)) {
 2677              		.loc 1 635 13 is_stmt 0 view .LVU676
 2678 0144 5A1C     		adds	r2, r3, #1
 2679 0146 0F92     		str	r2, [sp, #60]
 636:Core/Src/printf.c ****         precision = _atoi(&format);
 2680              		.loc 1 636 7 is_stmt 1 view .LVU677
 636:Core/Src/printf.c ****         precision = _atoi(&format);
 2681              		.loc 1 636 11 is_stmt 0 view .LVU678
 2682 0148 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2683              	.LVL317:
 2684              	.LBB35:
 2685              	.LBI35:
 181:Core/Src/printf.c **** {
 2686              		.loc 1 181 20 is_stmt 1 view .LVU679
 2687              	.LBB36:
 183:Core/Src/printf.c **** }
 2688              		.loc 1 183 3 view .LVU680
 183:Core/Src/printf.c **** }
 2689              		.loc 1 183 22 is_stmt 0 view .LVU681
 2690 014a A2F13003 		sub	r3, r2, #48
 2691 014e DBB2     		uxtb	r3, r3
 2692              	.LVL318:
 183:Core/Src/printf.c **** }
 2693              		.loc 1 183 22 view .LVU682
 2694              	.LBE36:
 2695              	.LBE35:
 636:Core/Src/printf.c ****         precision = _atoi(&format);
 2696              		.loc 1 636 10 discriminator 1 view .LVU683
 2697 0150 092B     		cmp	r3, #9
 2698 0152 0CD9     		bls	.L309
 639:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 2699              		.loc 1 639 12 is_stmt 1 view .LVU684
 639:Core/Src/printf.c ****         const int prec = (int)va_arg(va, int);
 2700              		.loc 1 639 15 is_stmt 0 view .LVU685
 2701 0154 2A2A     		cmp	r2, #42
 2702 0156 CDD1     		bne	.L215
 2703              	.LBB37:
 640:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 2704              		.loc 1 640 9 is_stmt 1 view .LVU686
 640:Core/Src/printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 2705              		.loc 1 640 19 is_stmt 0 view .LVU687
 2706 0158 1A9B     		ldr	r3, [sp, #104]
 2707 015a 1A1D     		adds	r2, r3, #4
 2708 015c 1A92     		str	r2, [sp, #104]
 2709 015e 1C68     		ldr	r4, [r3]
 641:Core/Src/printf.c ****         format++;
 2710              		.loc 1 641 9 is_stmt 1 view .LVU688
 641:Core/Src/printf.c ****         format++;
 2711              		.loc 1 641 51 is_stmt 0 view .LVU689
 2712 0160 24EAE473 		bic	r3, r4, r4, asr #31
 2713 0164 0B93     		str	r3, [sp, #44]
 2714              	.LVL319:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 70


 642:Core/Src/printf.c ****       }
 2715              		.loc 1 642 9 is_stmt 1 view .LVU690
 642:Core/Src/printf.c ****       }
 2716              		.loc 1 642 15 is_stmt 0 view .LVU691
 2717 0166 0F9B     		ldr	r3, [sp, #60]
 2718              	.LVL320:
 642:Core/Src/printf.c ****       }
 2719              		.loc 1 642 15 view .LVU692
 2720 0168 0133     		adds	r3, r3, #1
 2721 016a 0F93     		str	r3, [sp, #60]
 2722 016c C2E7     		b	.L215
 2723              	.LVL321:
 2724              	.L309:
 642:Core/Src/printf.c ****       }
 2725              		.loc 1 642 15 view .LVU693
 2726              	.LBE37:
 637:Core/Src/printf.c ****       }
 2727              		.loc 1 637 9 is_stmt 1 view .LVU694
 637:Core/Src/printf.c ****       }
 2728              		.loc 1 637 21 is_stmt 0 view .LVU695
 2729 016e 0FA8     		add	r0, sp, #60
 2730 0170 FFF7FEFF 		bl	_atoi
 2731              	.LVL322:
 2732 0174 0B90     		str	r0, [sp, #44]
 2733              	.LVL323:
 637:Core/Src/printf.c ****       }
 2734              		.loc 1 637 21 view .LVU696
 2735 0176 BDE7     		b	.L215
 2736              	.LVL324:
 2737              	.L221:
 649:Core/Src/printf.c ****         format++;
 2738              		.loc 1 649 9 is_stmt 1 view .LVU697
 649:Core/Src/printf.c ****         format++;
 2739              		.loc 1 649 15 is_stmt 0 view .LVU698
 2740 0178 45F48071 		orr	r1, r5, #256
 2741              	.LVL325:
 650:Core/Src/printf.c ****         if (*format == 'l') {
 2742              		.loc 1 650 9 is_stmt 1 view .LVU699
 650:Core/Src/printf.c ****         if (*format == 'l') {
 2743              		.loc 1 650 15 is_stmt 0 view .LVU700
 2744 017c 531C     		adds	r3, r2, #1
 2745 017e 0F93     		str	r3, [sp, #60]
 651:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 2746              		.loc 1 651 9 is_stmt 1 view .LVU701
 651:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 2747              		.loc 1 651 13 is_stmt 0 view .LVU702
 2748 0180 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 651:Core/Src/printf.c ****           flags |= FLAGS_LONG_LONG;
 2749              		.loc 1 651 12 view .LVU703
 2750 0182 6C2B     		cmp	r3, #108
 2751 0184 01D0     		beq	.L310
 649:Core/Src/printf.c ****         format++;
 2752              		.loc 1 649 15 view .LVU704
 2753 0186 0D46     		mov	r5, r1
 2754 0188 16E0     		b	.L217
 2755              	.L310:
 652:Core/Src/printf.c ****           format++;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 71


 2756              		.loc 1 652 11 is_stmt 1 view .LVU705
 652:Core/Src/printf.c ****           format++;
 2757              		.loc 1 652 17 is_stmt 0 view .LVU706
 2758 018a 45F44075 		orr	r5, r5, #768
 2759              	.LVL326:
 653:Core/Src/printf.c ****         }
 2760              		.loc 1 653 11 is_stmt 1 view .LVU707
 653:Core/Src/printf.c ****         }
 2761              		.loc 1 653 17 is_stmt 0 view .LVU708
 2762 018e 0232     		adds	r2, r2, #2
 2763 0190 0F92     		str	r2, [sp, #60]
 2764 0192 11E0     		b	.L217
 2765              	.L223:
 657:Core/Src/printf.c ****         format++;
 2766              		.loc 1 657 9 is_stmt 1 view .LVU709
 657:Core/Src/printf.c ****         format++;
 2767              		.loc 1 657 15 is_stmt 0 view .LVU710
 2768 0194 45F08001 		orr	r1, r5, #128
 2769              	.LVL327:
 658:Core/Src/printf.c ****         if (*format == 'h') {
 2770              		.loc 1 658 9 is_stmt 1 view .LVU711
 658:Core/Src/printf.c ****         if (*format == 'h') {
 2771              		.loc 1 658 15 is_stmt 0 view .LVU712
 2772 0198 531C     		adds	r3, r2, #1
 2773 019a 0F93     		str	r3, [sp, #60]
 659:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 2774              		.loc 1 659 9 is_stmt 1 view .LVU713
 659:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 2775              		.loc 1 659 13 is_stmt 0 view .LVU714
 2776 019c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 659:Core/Src/printf.c ****           flags |= FLAGS_CHAR;
 2777              		.loc 1 659 12 view .LVU715
 2778 019e 682B     		cmp	r3, #104
 2779 01a0 01D0     		beq	.L311
 657:Core/Src/printf.c ****         format++;
 2780              		.loc 1 657 15 view .LVU716
 2781 01a2 0D46     		mov	r5, r1
 2782 01a4 08E0     		b	.L217
 2783              	.L311:
 660:Core/Src/printf.c ****           format++;
 2784              		.loc 1 660 11 is_stmt 1 view .LVU717
 660:Core/Src/printf.c ****           format++;
 2785              		.loc 1 660 17 is_stmt 0 view .LVU718
 2786 01a6 45F0C005 		orr	r5, r5, #192
 2787              	.LVL328:
 661:Core/Src/printf.c ****         }
 2788              		.loc 1 661 11 is_stmt 1 view .LVU719
 661:Core/Src/printf.c ****         }
 2789              		.loc 1 661 17 is_stmt 0 view .LVU720
 2790 01aa 0232     		adds	r2, r2, #2
 2791 01ac 0F92     		str	r2, [sp, #60]
 2792 01ae 03E0     		b	.L217
 2793              	.L220:
 666:Core/Src/printf.c ****         format++;
 2794              		.loc 1 666 9 is_stmt 1 view .LVU721
 666:Core/Src/printf.c ****         format++;
 2795              		.loc 1 666 15 is_stmt 0 view .LVU722
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 72


 2796 01b0 45F48075 		orr	r5, r5, #256
 2797              	.LVL329:
 667:Core/Src/printf.c ****         break;
 2798              		.loc 1 667 9 is_stmt 1 view .LVU723
 667:Core/Src/printf.c ****         break;
 2799              		.loc 1 667 15 is_stmt 0 view .LVU724
 2800 01b4 0132     		adds	r2, r2, #1
 2801 01b6 0F92     		str	r2, [sp, #60]
 668:Core/Src/printf.c **** #endif
 2802              		.loc 1 668 9 is_stmt 1 view .LVU725
 2803              	.L217:
 683:Core/Src/printf.c ****       case 'd' :
 2804              		.loc 1 683 5 view .LVU726
 683:Core/Src/printf.c ****       case 'd' :
 2805              		.loc 1 683 13 is_stmt 0 view .LVU727
 2806 01b8 0F9B     		ldr	r3, [sp, #60]
 2807 01ba 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 683:Core/Src/printf.c ****       case 'd' :
 2808              		.loc 1 683 5 view .LVU728
 2809 01bc 6728     		cmp	r0, #103
 2810 01be 56D8     		bhi	.L224
 683:Core/Src/printf.c ****       case 'd' :
 2811              		.loc 1 683 5 view .LVU729
 2812 01c0 2528     		cmp	r0, #37
 2813 01c2 C0F06482 		bcc	.L226
 2814 01c6 A0F12503 		sub	r3, r0, #37
 2815 01ca 422B     		cmp	r3, #66
 2816 01cc 00F25F82 		bhi	.L226
 2817 01d0 DFE813F0 		tbh	[pc, r3, lsl #1]
 2818              	.L231:
 2819 01d4 5202     		.2byte	(.L234-.L231)/2
 2820 01d6 5D02     		.2byte	(.L226-.L231)/2
 2821 01d8 5D02     		.2byte	(.L226-.L231)/2
 2822 01da 5D02     		.2byte	(.L226-.L231)/2
 2823 01dc 5D02     		.2byte	(.L226-.L231)/2
 2824 01de 5D02     		.2byte	(.L226-.L231)/2
 2825 01e0 5D02     		.2byte	(.L226-.L231)/2
 2826 01e2 5D02     		.2byte	(.L226-.L231)/2
 2827 01e4 5D02     		.2byte	(.L226-.L231)/2
 2828 01e6 5D02     		.2byte	(.L226-.L231)/2
 2829 01e8 5D02     		.2byte	(.L226-.L231)/2
 2830 01ea 5D02     		.2byte	(.L226-.L231)/2
 2831 01ec 5D02     		.2byte	(.L226-.L231)/2
 2832 01ee 5D02     		.2byte	(.L226-.L231)/2
 2833 01f0 5D02     		.2byte	(.L226-.L231)/2
 2834 01f2 5D02     		.2byte	(.L226-.L231)/2
 2835 01f4 5D02     		.2byte	(.L226-.L231)/2
 2836 01f6 5D02     		.2byte	(.L226-.L231)/2
 2837 01f8 5D02     		.2byte	(.L226-.L231)/2
 2838 01fa 5D02     		.2byte	(.L226-.L231)/2
 2839 01fc 5D02     		.2byte	(.L226-.L231)/2
 2840 01fe 5D02     		.2byte	(.L226-.L231)/2
 2841 0200 5D02     		.2byte	(.L226-.L231)/2
 2842 0202 5D02     		.2byte	(.L226-.L231)/2
 2843 0204 5D02     		.2byte	(.L226-.L231)/2
 2844 0206 5D02     		.2byte	(.L226-.L231)/2
 2845 0208 5D02     		.2byte	(.L226-.L231)/2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 73


 2846 020a 5D02     		.2byte	(.L226-.L231)/2
 2847 020c 5D02     		.2byte	(.L226-.L231)/2
 2848 020e 5D02     		.2byte	(.L226-.L231)/2
 2849 0210 5D02     		.2byte	(.L226-.L231)/2
 2850 0212 5D02     		.2byte	(.L226-.L231)/2
 2851 0214 8601     		.2byte	(.L230-.L231)/2
 2852 0216 6801     		.2byte	(.L232-.L231)/2
 2853 0218 8601     		.2byte	(.L230-.L231)/2
 2854 021a 5D02     		.2byte	(.L226-.L231)/2
 2855 021c 5D02     		.2byte	(.L226-.L231)/2
 2856 021e 5D02     		.2byte	(.L226-.L231)/2
 2857 0220 5D02     		.2byte	(.L226-.L231)/2
 2858 0222 5D02     		.2byte	(.L226-.L231)/2
 2859 0224 5D02     		.2byte	(.L226-.L231)/2
 2860 0226 5D02     		.2byte	(.L226-.L231)/2
 2861 0228 5D02     		.2byte	(.L226-.L231)/2
 2862 022a 5D02     		.2byte	(.L226-.L231)/2
 2863 022c 5D02     		.2byte	(.L226-.L231)/2
 2864 022e 5D02     		.2byte	(.L226-.L231)/2
 2865 0230 5D02     		.2byte	(.L226-.L231)/2
 2866 0232 5D02     		.2byte	(.L226-.L231)/2
 2867 0234 5D02     		.2byte	(.L226-.L231)/2
 2868 0236 5D02     		.2byte	(.L226-.L231)/2
 2869 0238 5D02     		.2byte	(.L226-.L231)/2
 2870 023a 7100     		.2byte	(.L227-.L231)/2
 2871 023c 5D02     		.2byte	(.L226-.L231)/2
 2872 023e 5D02     		.2byte	(.L226-.L231)/2
 2873 0240 5D02     		.2byte	(.L226-.L231)/2
 2874 0242 5D02     		.2byte	(.L226-.L231)/2
 2875 0244 5D02     		.2byte	(.L226-.L231)/2
 2876 0246 5D02     		.2byte	(.L226-.L231)/2
 2877 0248 5D02     		.2byte	(.L226-.L231)/2
 2878 024a 5D02     		.2byte	(.L226-.L231)/2
 2879 024c 5D02     		.2byte	(.L226-.L231)/2
 2880 024e 7100     		.2byte	(.L227-.L231)/2
 2881 0250 AB01     		.2byte	(.L233-.L231)/2
 2882 0252 7100     		.2byte	(.L227-.L231)/2
 2883 0254 8601     		.2byte	(.L230-.L231)/2
 2884 0256 6801     		.2byte	(.L232-.L231)/2
 2885 0258 8601     		.2byte	(.L230-.L231)/2
 2886              		.p2align 1
 2887              	.L222:
 671:Core/Src/printf.c ****         format++;
 2888              		.loc 1 671 9 is_stmt 1 view .LVU730
 671:Core/Src/printf.c ****         format++;
 2889              		.loc 1 671 15 is_stmt 0 view .LVU731
 2890 025a 45F40075 		orr	r5, r5, #512
 2891              	.LVL330:
 672:Core/Src/printf.c ****         break;
 2892              		.loc 1 672 9 is_stmt 1 view .LVU732
 672:Core/Src/printf.c ****         break;
 2893              		.loc 1 672 15 is_stmt 0 view .LVU733
 2894 025e 0132     		adds	r2, r2, #1
 2895 0260 0F92     		str	r2, [sp, #60]
 673:Core/Src/printf.c ****       case 'z' :
 2896              		.loc 1 673 9 is_stmt 1 view .LVU734
 2897 0262 A9E7     		b	.L217
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 74


 2898              	.L218:
 675:Core/Src/printf.c ****         format++;
 2899              		.loc 1 675 9 view .LVU735
 675:Core/Src/printf.c ****         format++;
 2900              		.loc 1 675 15 is_stmt 0 view .LVU736
 2901 0264 45F48075 		orr	r5, r5, #256
 2902              	.LVL331:
 676:Core/Src/printf.c ****         break;
 2903              		.loc 1 676 9 is_stmt 1 view .LVU737
 676:Core/Src/printf.c ****         break;
 2904              		.loc 1 676 15 is_stmt 0 view .LVU738
 2905 0268 0132     		adds	r2, r2, #1
 2906 026a 0F92     		str	r2, [sp, #60]
 677:Core/Src/printf.c ****       default :
 2907              		.loc 1 677 9 is_stmt 1 view .LVU739
 2908 026c A4E7     		b	.L217
 2909              	.L224:
 683:Core/Src/printf.c ****       case 'd' :
 2910              		.loc 1 683 5 is_stmt 0 view .LVU740
 2911 026e 7828     		cmp	r0, #120
 2912 0270 00F20D82 		bhi	.L226
 2913 0274 6928     		cmp	r0, #105
 2914 0276 C0F00A82 		bcc	.L226
 2915 027a A0F16902 		sub	r2, r0, #105
 2916 027e D2B2     		uxtb	r2, r2
 2917 0280 0123     		movs	r3, #1
 2918 0282 9340     		lsls	r3, r3, r2
 2919 0284 49F24102 		movw	r2, #36929
 2920 0288 1342     		tst	r3, r2
 2921 028a 14D1     		bne	.L227
 2922 028c 13F0800F 		tst	r3, #128
 2923 0290 40F0D781 		bne	.L228
 2924 0294 13F4806F 		tst	r3, #1024
 2925 0298 00F0F981 		beq	.L226
 2926              	.LBB38:
 794:Core/Src/printf.c ****       }
 795:Core/Src/printf.c **** 
 796:Core/Src/printf.c ****       case 's' : {
 797:Core/Src/printf.c ****         const char* p = va_arg(va, char*);
 2927              		.loc 1 797 9 is_stmt 1 view .LVU741
 2928              		.loc 1 797 21 is_stmt 0 view .LVU742
 2929 029c 1A9B     		ldr	r3, [sp, #104]
 2930 029e 1A1D     		adds	r2, r3, #4
 2931 02a0 1A92     		str	r2, [sp, #104]
 2932 02a2 D3F800A0 		ldr	r10, [r3]
 798:Core/Src/printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 2933              		.loc 1 798 9 is_stmt 1 view .LVU743
 2934              		.loc 1 798 26 is_stmt 0 view .LVU744
 2935 02a6 0B9B     		ldr	r3, [sp, #44]
 2936 02a8 002B     		cmp	r3, #0
 2937 02aa 40F08C81 		bne	.L267
 2938              		.loc 1 798 26 discriminator 2 view .LVU745
 2939 02ae 4FF0FF32 		mov	r2, #-1
 2940              	.L268:
 2941              		.loc 1 798 26 discriminator 1 view .LVU746
 2942 02b2 5346     		mov	r3, r10
 2943 02b4 6DE1     		b	.L269
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 75


 2944              	.L227:
 2945              	.LBE38:
 2946              	.LBB41:
 692:Core/Src/printf.c ****         if (*format == 'x' || *format == 'X') {
 2947              		.loc 1 692 9 is_stmt 1 view .LVU747
 693:Core/Src/printf.c ****           base = 16U;
 2948              		.loc 1 693 9 view .LVU748
 2949 02b6 6F28     		cmp	r0, #111
 2950 02b8 0CD0     		beq	.L290
 2951 02ba 05D8     		bhi	.L237
 2952 02bc 5828     		cmp	r0, #88
 2953 02be 3CD0     		beq	.L291
 2954 02c0 6228     		cmp	r0, #98
 2955 02c2 03D1     		bne	.L238
 2956              	.LBE41:
 657:Core/Src/printf.c ****         format++;
 2957              		.loc 1 657 15 is_stmt 0 view .LVU749
 2958 02c4 0223     		movs	r3, #2
 2959 02c6 06E0     		b	.L236
 2960              	.L237:
 2961 02c8 7828     		cmp	r0, #120
 2962 02ca 38D0     		beq	.L293
 2963              	.L238:
 2964              	.LBB49:
 703:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 2965              		.loc 1 703 11 is_stmt 1 view .LVU750
 2966              	.LVL332:
 704:Core/Src/printf.c ****         }
 2967              		.loc 1 704 11 view .LVU751
 704:Core/Src/printf.c ****         }
 2968              		.loc 1 704 17 is_stmt 0 view .LVU752
 2969 02cc 25F01005 		bic	r5, r5, #16
 2970              	.LVL333:
 703:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 2971              		.loc 1 703 16 view .LVU753
 2972 02d0 0A23     		movs	r3, #10
 2973 02d2 00E0     		b	.L236
 2974              	.LVL334:
 2975              	.L290:
 703:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 2976              		.loc 1 703 16 view .LVU754
 2977              	.LBE49:
 657:Core/Src/printf.c ****         format++;
 2978              		.loc 1 657 15 view .LVU755
 2979 02d4 0823     		movs	r3, #8
 2980              	.L236:
 2981              	.LVL335:
 2982              	.LBB50:
 707:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 2983              		.loc 1 707 9 is_stmt 1 view .LVU756
 707:Core/Src/printf.c ****           flags |= FLAGS_UPPERCASE;
 2984              		.loc 1 707 12 is_stmt 0 view .LVU757
 2985 02d6 5828     		cmp	r0, #88
 2986 02d8 33D0     		beq	.L312
 2987              	.L239:
 712:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2988              		.loc 1 712 9 is_stmt 1 view .LVU758
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 76


 712:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2989              		.loc 1 712 12 is_stmt 0 view .LVU759
 2990 02da 6928     		cmp	r0, #105
 2991 02dc 03D0     		beq	.L240
 712:Core/Src/printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2992              		.loc 1 712 30 discriminator 1 view .LVU760
 2993 02de 6428     		cmp	r0, #100
 2994 02e0 01D0     		beq	.L240
 713:Core/Src/printf.c ****         }
 2995              		.loc 1 713 11 is_stmt 1 view .LVU761
 713:Core/Src/printf.c ****         }
 2996              		.loc 1 713 17 is_stmt 0 view .LVU762
 2997 02e2 25F00C05 		bic	r5, r5, #12
 2998              	.LVL336:
 2999              	.L240:
 717:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 3000              		.loc 1 717 9 is_stmt 1 view .LVU763
 717:Core/Src/printf.c ****           flags &= ~FLAGS_ZEROPAD;
 3001              		.loc 1 717 12 is_stmt 0 view .LVU764
 3002 02e6 15F4806F 		tst	r5, #1024
 3003 02ea 01D0     		beq	.L241
 718:Core/Src/printf.c ****         }
 3004              		.loc 1 718 11 is_stmt 1 view .LVU765
 718:Core/Src/printf.c ****         }
 3005              		.loc 1 718 17 is_stmt 0 view .LVU766
 3006 02ec 25F00105 		bic	r5, r5, #1
 3007              	.LVL337:
 3008              	.L241:
 722:Core/Src/printf.c ****           // signed
 3009              		.loc 1 722 9 is_stmt 1 view .LVU767
 722:Core/Src/printf.c ****           // signed
 3010              		.loc 1 722 12 is_stmt 0 view .LVU768
 3011 02f0 6928     		cmp	r0, #105
 3012 02f2 29D0     		beq	.L242
 722:Core/Src/printf.c ****           // signed
 3013              		.loc 1 722 30 discriminator 1 view .LVU769
 3014 02f4 6428     		cmp	r0, #100
 3015 02f6 27D0     		beq	.L242
 741:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3016              		.loc 1 741 11 is_stmt 1 view .LVU770
 741:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3017              		.loc 1 741 14 is_stmt 0 view .LVU771
 3018 02f8 15F4007F 		tst	r5, #512
 3019 02fc 40F09480 		bne	.L313
 746:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 3020              		.loc 1 746 16 is_stmt 1 view .LVU772
 746:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 3021              		.loc 1 746 19 is_stmt 0 view .LVU773
 3022 0300 15F4807F 		tst	r5, #256
 3023 0304 40F0AC80 		bne	.L314
 3024              	.LBB42:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3025              		.loc 1 750 13 is_stmt 1 view .LVU774
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3026              		.loc 1 750 103 is_stmt 0 view .LVU775
 3027 0308 15F0400F 		tst	r5, #64
 3028 030c 00F0BD80 		beq	.L253
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 77


 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3029              		.loc 1 750 78 discriminator 1 view .LVU776
 3030 0310 1A9A     		ldr	r2, [sp, #104]
 3031 0312 111D     		adds	r1, r2, #4
 3032 0314 1A91     		str	r1, [sp, #104]
 3033 0316 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3034              	.L254:
 3035              	.LVL338:
 751:Core/Src/printf.c ****           }
 3036              		.loc 1 751 13 is_stmt 1 view .LVU777
 751:Core/Src/printf.c ****           }
 3037              		.loc 1 751 19 is_stmt 0 view .LVU778
 3038 0318 0595     		str	r5, [sp, #20]
 3039 031a CDF810B0 		str	fp, [sp, #16]
 3040 031e 0B99     		ldr	r1, [sp, #44]
 3041 0320 0391     		str	r1, [sp, #12]
 3042 0322 0293     		str	r3, [sp, #8]
 3043 0324 0023     		movs	r3, #0
 3044              	.LVL339:
 751:Core/Src/printf.c ****           }
 3045              		.loc 1 751 19 view .LVU779
 3046 0326 0193     		str	r3, [sp, #4]
 3047 0328 0092     		str	r2, [sp]
 3048 032a 3B46     		mov	r3, r7
 3049 032c 3246     		mov	r2, r6
 3050              	.LVL340:
 751:Core/Src/printf.c ****           }
 3051              		.loc 1 751 19 view .LVU780
 3052 032e 4946     		mov	r1, r9
 3053 0330 4046     		mov	r0, r8
 3054 0332 FFF7FEFF 		bl	_ntoa_long
 3055              	.LVL341:
 751:Core/Src/printf.c ****           }
 3056              		.loc 1 751 19 view .LVU781
 3057 0336 0646     		mov	r6, r0
 3058              	.LVL342:
 751:Core/Src/printf.c ****           }
 3059              		.loc 1 751 19 view .LVU782
 3060 0338 27E0     		b	.L246
 3061              	.LVL343:
 3062              	.L291:
 751:Core/Src/printf.c ****           }
 3063              		.loc 1 751 19 view .LVU783
 3064              	.LBE42:
 703:Core/Src/printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 3065              		.loc 1 703 16 view .LVU784
 3066 033a 1023     		movs	r3, #16
 3067 033c CBE7     		b	.L236
 3068              	.L293:
 3069              	.LBE50:
 657:Core/Src/printf.c ****         format++;
 3070              		.loc 1 657 15 view .LVU785
 3071 033e 1023     		movs	r3, #16
 3072 0340 C9E7     		b	.L236
 3073              	.LVL344:
 3074              	.L312:
 3075              	.LBB51:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 78


 708:Core/Src/printf.c ****         }
 3076              		.loc 1 708 11 is_stmt 1 view .LVU786
 708:Core/Src/printf.c ****         }
 3077              		.loc 1 708 17 is_stmt 0 view .LVU787
 3078 0342 45F02005 		orr	r5, r5, #32
 3079              	.LVL345:
 708:Core/Src/printf.c ****         }
 3080              		.loc 1 708 17 view .LVU788
 3081 0346 C8E7     		b	.L239
 3082              	.L242:
 724:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3083              		.loc 1 724 11 is_stmt 1 view .LVU789
 724:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 3084              		.loc 1 724 14 is_stmt 0 view .LVU790
 3085 0348 15F4007F 		tst	r5, #512
 3086 034c 21D1     		bne	.L315
 730:Core/Src/printf.c ****             const long value = va_arg(va, long);
 3087              		.loc 1 730 16 is_stmt 1 view .LVU791
 730:Core/Src/printf.c ****             const long value = va_arg(va, long);
 3088              		.loc 1 730 19 is_stmt 0 view .LVU792
 3089 034e 15F4807F 		tst	r5, #256
 3090 0352 42D1     		bne	.L316
 3091              	.LBB43:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3092              		.loc 1 735 13 is_stmt 1 view .LVU793
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3093              		.loc 1 735 76 is_stmt 0 view .LVU794
 3094 0354 15F0400F 		tst	r5, #64
 3095 0358 58D0     		beq	.L248
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3096              		.loc 1 735 60 discriminator 1 view .LVU795
 3097 035a 1A9A     		ldr	r2, [sp, #104]
 3098 035c 111D     		adds	r1, r2, #4
 3099 035e 1A91     		str	r1, [sp, #104]
 3100 0360 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3101              	.L249:
 3102              	.LVL346:
 736:Core/Src/printf.c ****           }
 3103              		.loc 1 736 13 is_stmt 1 view .LVU796
 736:Core/Src/printf.c ****           }
 3104              		.loc 1 736 56 is_stmt 0 view .LVU797
 3105 0362 82EAE271 		eor	r1, r2, r2, asr #31
 3106 0366 A1EBE271 		sub	r1, r1, r2, asr #31
 736:Core/Src/printf.c ****           }
 3107              		.loc 1 736 19 view .LVU798
 3108 036a 0595     		str	r5, [sp, #20]
 3109 036c CDF810B0 		str	fp, [sp, #16]
 3110 0370 0B98     		ldr	r0, [sp, #44]
 3111 0372 0390     		str	r0, [sp, #12]
 3112 0374 0293     		str	r3, [sp, #8]
 3113 0376 D20F     		lsrs	r2, r2, #31
 3114              	.LVL347:
 736:Core/Src/printf.c ****           }
 3115              		.loc 1 736 19 view .LVU799
 3116 0378 0192     		str	r2, [sp, #4]
 3117 037a 0091     		str	r1, [sp]
 3118 037c 3B46     		mov	r3, r7
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 79


 3119              	.LVL348:
 736:Core/Src/printf.c ****           }
 3120              		.loc 1 736 19 view .LVU800
 3121 037e 3246     		mov	r2, r6
 3122 0380 4946     		mov	r1, r9
 3123 0382 4046     		mov	r0, r8
 3124 0384 FFF7FEFF 		bl	_ntoa_long
 3125              	.LVL349:
 736:Core/Src/printf.c ****           }
 3126              		.loc 1 736 19 view .LVU801
 3127 0388 0646     		mov	r6, r0
 3128              	.LVL350:
 3129              	.L246:
 736:Core/Src/printf.c ****           }
 3130              		.loc 1 736 19 view .LVU802
 3131              	.LBE43:
 754:Core/Src/printf.c ****         break;
 3132              		.loc 1 754 9 is_stmt 1 view .LVU803
 754:Core/Src/printf.c ****         break;
 3133              		.loc 1 754 15 is_stmt 0 view .LVU804
 3134 038a 0F9B     		ldr	r3, [sp, #60]
 3135 038c 0133     		adds	r3, r3, #1
 3136 038e 0F93     		str	r3, [sp, #60]
 755:Core/Src/printf.c ****       }
 3137              		.loc 1 755 9 is_stmt 1 view .LVU805
 3138 0390 41E6     		b	.L282
 3139              	.LVL351:
 3140              	.L315:
 3141              	.LBB44:
 726:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 3142              		.loc 1 726 13 view .LVU806
 726:Core/Src/printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 3143              		.loc 1 726 29 is_stmt 0 view .LVU807
 3144 0392 1A9A     		ldr	r2, [sp, #104]
 3145 0394 0732     		adds	r2, r2, #7
 3146 0396 22F00702 		bic	r2, r2, #7
 3147 039a 02F10801 		add	r1, r2, #8
 3148 039e 1A91     		str	r1, [sp, #104]
 3149 03a0 5168     		ldr	r1, [r2, #4]
 727:Core/Src/printf.c **** #endif
 3150              		.loc 1 727 13 is_stmt 1 view .LVU808
 727:Core/Src/printf.c **** #endif
 3151              		.loc 1 727 61 is_stmt 0 view .LVU809
 3152 03a2 1268     		ldr	r2, [r2]
 3153 03a4 0846     		mov	r0, r1
 3154 03a6 0029     		cmp	r1, #0
 3155 03a8 13DB     		blt	.L317
 3156              	.L245:
 727:Core/Src/printf.c **** #endif
 3157              		.loc 1 727 19 view .LVU810
 3158 03aa 0895     		str	r5, [sp, #32]
 3159 03ac CDF81CB0 		str	fp, [sp, #28]
 3160 03b0 0B9C     		ldr	r4, [sp, #44]
 3161 03b2 0694     		str	r4, [sp, #24]
 3162 03b4 0493     		str	r3, [sp, #16]
 3163 03b6 0023     		movs	r3, #0
 3164              	.LVL352:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 80


 727:Core/Src/printf.c **** #endif
 3165              		.loc 1 727 19 view .LVU811
 3166 03b8 0593     		str	r3, [sp, #20]
 3167 03ba C90F     		lsrs	r1, r1, #31
 3168 03bc 0291     		str	r1, [sp, #8]
 3169 03be 0092     		str	r2, [sp]
 3170 03c0 0190     		str	r0, [sp, #4]
 3171 03c2 3B46     		mov	r3, r7
 3172 03c4 3246     		mov	r2, r6
 3173 03c6 4946     		mov	r1, r9
 3174 03c8 4046     		mov	r0, r8
 3175 03ca FFF7FEFF 		bl	_ntoa_long_long
 3176              	.LVL353:
 727:Core/Src/printf.c **** #endif
 3177              		.loc 1 727 19 view .LVU812
 3178 03ce 0646     		mov	r6, r0
 3179              	.LVL354:
 727:Core/Src/printf.c **** #endif
 3180              		.loc 1 727 19 view .LVU813
 3181              	.LBE44:
 3182 03d0 DBE7     		b	.L246
 3183              	.LVL355:
 3184              	.L317:
 3185              	.LBB45:
 727:Core/Src/printf.c **** #endif
 3186              		.loc 1 727 61 view .LVU814
 3187 03d2 5242     		negs	r2, r2
 3188 03d4 61EB4100 		sbc	r0, r1, r1, lsl #1
 3189 03d8 E7E7     		b	.L245
 3190              	.L316:
 3191              	.LBE45:
 3192              	.LBB46:
 731:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 3193              		.loc 1 731 13 is_stmt 1 view .LVU815
 731:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 3194              		.loc 1 731 24 is_stmt 0 view .LVU816
 3195 03da 1A9A     		ldr	r2, [sp, #104]
 3196 03dc 111D     		adds	r1, r2, #4
 3197 03de 1A91     		str	r1, [sp, #104]
 3198 03e0 1268     		ldr	r2, [r2]
 732:Core/Src/printf.c ****           }
 3199              		.loc 1 732 13 is_stmt 1 view .LVU817
 732:Core/Src/printf.c ****           }
 3200              		.loc 1 732 56 is_stmt 0 view .LVU818
 3201 03e2 82EAE271 		eor	r1, r2, r2, asr #31
 3202 03e6 A1EBE271 		sub	r1, r1, r2, asr #31
 732:Core/Src/printf.c ****           }
 3203              		.loc 1 732 19 view .LVU819
 3204 03ea 0595     		str	r5, [sp, #20]
 3205 03ec CDF810B0 		str	fp, [sp, #16]
 3206 03f0 0B98     		ldr	r0, [sp, #44]
 3207 03f2 0390     		str	r0, [sp, #12]
 3208 03f4 0293     		str	r3, [sp, #8]
 3209 03f6 D20F     		lsrs	r2, r2, #31
 3210 03f8 0192     		str	r2, [sp, #4]
 3211 03fa 0091     		str	r1, [sp]
 3212 03fc 3B46     		mov	r3, r7
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 81


 3213              	.LVL356:
 732:Core/Src/printf.c ****           }
 3214              		.loc 1 732 19 view .LVU820
 3215 03fe 3246     		mov	r2, r6
 3216 0400 4946     		mov	r1, r9
 3217 0402 4046     		mov	r0, r8
 3218 0404 FFF7FEFF 		bl	_ntoa_long
 3219              	.LVL357:
 732:Core/Src/printf.c ****           }
 3220              		.loc 1 732 19 view .LVU821
 3221 0408 0646     		mov	r6, r0
 3222              	.LVL358:
 732:Core/Src/printf.c ****           }
 3223              		.loc 1 732 19 view .LVU822
 3224              	.LBE46:
 3225 040a BEE7     		b	.L246
 3226              	.LVL359:
 3227              	.L248:
 3228              	.LBB47:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3229              		.loc 1 735 129 discriminator 2 view .LVU823
 3230 040c 15F0800F 		tst	r5, #128
 3231 0410 05D0     		beq	.L250
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3232              		.loc 1 735 113 discriminator 4 view .LVU824
 3233 0412 1A9A     		ldr	r2, [sp, #104]
 3234 0414 111D     		adds	r1, r2, #4
 3235 0416 1A91     		str	r1, [sp, #104]
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3236              		.loc 1 735 102 discriminator 1 view .LVU825
 3237 0418 B2F90020 		ldrsh	r2, [r2]
 3238 041c A1E7     		b	.L249
 3239              	.L250:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3240              		.loc 1 735 129 discriminator 5 view .LVU826
 3241 041e 1A9A     		ldr	r2, [sp, #104]
 3242 0420 111D     		adds	r1, r2, #4
 3243 0422 1A91     		str	r1, [sp, #104]
 3244 0424 1268     		ldr	r2, [r2]
 3245 0426 9CE7     		b	.L249
 3246              	.L313:
 735:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 3247              		.loc 1 735 129 discriminator 5 view .LVU827
 3248              	.LBE47:
 743:Core/Src/printf.c **** #endif
 3249              		.loc 1 743 13 is_stmt 1 view .LVU828
 743:Core/Src/printf.c **** #endif
 3250              		.loc 1 743 19 is_stmt 0 view .LVU829
 3251 0428 1A9A     		ldr	r2, [sp, #104]
 3252 042a 0732     		adds	r2, r2, #7
 3253 042c 22F00702 		bic	r2, r2, #7
 3254 0430 02F10801 		add	r1, r2, #8
 3255 0434 1A91     		str	r1, [sp, #104]
 743:Core/Src/printf.c **** #endif
 3256              		.loc 1 743 19 discriminator 1 view .LVU830
 3257 0436 0895     		str	r5, [sp, #32]
 3258 0438 CDF81CB0 		str	fp, [sp, #28]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 82


 3259 043c 0B99     		ldr	r1, [sp, #44]
 3260 043e 0691     		str	r1, [sp, #24]
 3261 0440 0021     		movs	r1, #0
 3262 0442 0493     		str	r3, [sp, #16]
 3263 0444 0591     		str	r1, [sp, #20]
 3264 0446 0291     		str	r1, [sp, #8]
 3265 0448 D2E90023 		ldrd	r2, [r2]
 3266 044c CDE90023 		strd	r2, [sp]
 3267 0450 3B46     		mov	r3, r7
 3268              	.LVL360:
 743:Core/Src/printf.c **** #endif
 3269              		.loc 1 743 19 discriminator 1 view .LVU831
 3270 0452 3246     		mov	r2, r6
 3271 0454 4946     		mov	r1, r9
 3272 0456 4046     		mov	r0, r8
 3273 0458 FFF7FEFF 		bl	_ntoa_long_long
 3274              	.LVL361:
 743:Core/Src/printf.c **** #endif
 3275              		.loc 1 743 19 discriminator 1 view .LVU832
 3276 045c 0646     		mov	r6, r0
 3277              	.LVL362:
 743:Core/Src/printf.c **** #endif
 3278              		.loc 1 743 19 discriminator 1 view .LVU833
 3279 045e 94E7     		b	.L246
 3280              	.LVL363:
 3281              	.L314:
 747:Core/Src/printf.c ****           }
 3282              		.loc 1 747 13 is_stmt 1 view .LVU834
 747:Core/Src/printf.c ****           }
 3283              		.loc 1 747 19 is_stmt 0 view .LVU835
 3284 0460 1A9A     		ldr	r2, [sp, #104]
 3285 0462 111D     		adds	r1, r2, #4
 3286 0464 1A91     		str	r1, [sp, #104]
 747:Core/Src/printf.c ****           }
 3287              		.loc 1 747 19 discriminator 1 view .LVU836
 3288 0466 0595     		str	r5, [sp, #20]
 3289 0468 CDF810B0 		str	fp, [sp, #16]
 3290 046c 0B99     		ldr	r1, [sp, #44]
 3291 046e 0391     		str	r1, [sp, #12]
 3292 0470 0293     		str	r3, [sp, #8]
 3293 0472 0023     		movs	r3, #0
 3294              	.LVL364:
 747:Core/Src/printf.c ****           }
 3295              		.loc 1 747 19 discriminator 1 view .LVU837
 3296 0474 0193     		str	r3, [sp, #4]
 3297 0476 1368     		ldr	r3, [r2]
 3298 0478 0093     		str	r3, [sp]
 3299 047a 3B46     		mov	r3, r7
 3300 047c 3246     		mov	r2, r6
 3301 047e 4946     		mov	r1, r9
 3302 0480 4046     		mov	r0, r8
 3303 0482 FFF7FEFF 		bl	_ntoa_long
 3304              	.LVL365:
 747:Core/Src/printf.c ****           }
 3305              		.loc 1 747 19 discriminator 1 view .LVU838
 3306 0486 0646     		mov	r6, r0
 3307              	.LVL366:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 83


 747:Core/Src/printf.c ****           }
 3308              		.loc 1 747 19 discriminator 1 view .LVU839
 3309 0488 7FE7     		b	.L246
 3310              	.LVL367:
 3311              	.L253:
 3312              	.LBB48:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3313              		.loc 1 750 174 discriminator 2 view .LVU840
 3314 048a 15F0800F 		tst	r5, #128
 3315 048e 04D0     		beq	.L255
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3316              		.loc 1 750 149 discriminator 4 view .LVU841
 3317 0490 1A9A     		ldr	r2, [sp, #104]
 3318 0492 111D     		adds	r1, r2, #4
 3319 0494 1A91     		str	r1, [sp, #104]
 3320 0496 1288     		ldrh	r2, [r2]
 3321 0498 3EE7     		b	.L254
 3322              	.L255:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3323              		.loc 1 750 174 discriminator 5 view .LVU842
 3324 049a 1A9A     		ldr	r2, [sp, #104]
 3325 049c 111D     		adds	r1, r2, #4
 3326 049e 1A91     		str	r1, [sp, #104]
 3327 04a0 1268     		ldr	r2, [r2]
 3328 04a2 39E7     		b	.L254
 3329              	.LVL368:
 3330              	.L232:
 750:Core/Src/printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3331              		.loc 1 750 174 discriminator 5 view .LVU843
 3332              	.LBE48:
 3333              	.LBE51:
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3334              		.loc 1 760 9 is_stmt 1 view .LVU844
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3335              		.loc 1 760 12 is_stmt 0 view .LVU845
 3336 04a4 4628     		cmp	r0, #70
 3337 04a6 18D0     		beq	.L318
 3338              	.L256:
 761:Core/Src/printf.c ****         format++;
 3339              		.loc 1 761 9 is_stmt 1 view .LVU846
 761:Core/Src/printf.c ****         format++;
 3340              		.loc 1 761 15 is_stmt 0 view .LVU847
 3341 04a8 1A9B     		ldr	r3, [sp, #104]
 3342 04aa 0733     		adds	r3, r3, #7
 3343 04ac 23F00703 		bic	r3, r3, #7
 3344 04b0 03F10802 		add	r2, r3, #8
 3345 04b4 1A92     		str	r2, [sp, #104]
 761:Core/Src/printf.c ****         format++;
 3346              		.loc 1 761 15 discriminator 1 view .LVU848
 3347 04b6 93ED000B 		vldr.64	d0, [r3]
 3348 04ba 0295     		str	r5, [sp, #8]
 3349 04bc CDF804B0 		str	fp, [sp, #4]
 3350 04c0 0B9B     		ldr	r3, [sp, #44]
 3351 04c2 0093     		str	r3, [sp]
 3352 04c4 3B46     		mov	r3, r7
 3353 04c6 3246     		mov	r2, r6
 3354 04c8 4946     		mov	r1, r9
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 84


 3355 04ca 4046     		mov	r0, r8
 3356 04cc FFF7FEFF 		bl	_ftoa
 3357              	.LVL369:
 3358 04d0 0646     		mov	r6, r0
 3359              	.LVL370:
 762:Core/Src/printf.c ****         break;
 3360              		.loc 1 762 9 is_stmt 1 view .LVU849
 762:Core/Src/printf.c ****         break;
 3361              		.loc 1 762 15 is_stmt 0 view .LVU850
 3362 04d2 0F9B     		ldr	r3, [sp, #60]
 3363 04d4 0133     		adds	r3, r3, #1
 3364 04d6 0F93     		str	r3, [sp, #60]
 763:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 3365              		.loc 1 763 9 is_stmt 1 view .LVU851
 3366 04d8 9DE5     		b	.L282
 3367              	.LVL371:
 3368              	.L318:
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3369              		.loc 1 760 29 discriminator 1 view .LVU852
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3370              		.loc 1 760 35 is_stmt 0 discriminator 1 view .LVU853
 3371 04da 45F02005 		orr	r5, r5, #32
 3372              	.LVL372:
 760:Core/Src/printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3373              		.loc 1 760 35 discriminator 1 view .LVU854
 3374 04de E3E7     		b	.L256
 3375              	.L230:
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3376              		.loc 1 769 9 is_stmt 1 view .LVU855
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3377              		.loc 1 769 12 is_stmt 0 view .LVU856
 3378 04e0 6728     		cmp	r0, #103
 3379 04e2 01D0     		beq	.L257
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3380              		.loc 1 769 29 discriminator 2 view .LVU857
 3381 04e4 4728     		cmp	r0, #71
 3382 04e6 01D1     		bne	.L258
 3383              	.L257:
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3384              		.loc 1 769 49 is_stmt 1 discriminator 3 view .LVU858
 769:Core/Src/printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3385              		.loc 1 769 55 is_stmt 0 discriminator 3 view .LVU859
 3386 04e8 45F40065 		orr	r5, r5, #2048
 3387              	.LVL373:
 3388              	.L258:
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3389              		.loc 1 770 9 is_stmt 1 view .LVU860
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3390              		.loc 1 770 12 is_stmt 0 view .LVU861
 3391 04ec 4528     		cmp	r0, #69
 3392 04ee 01D0     		beq	.L259
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3393              		.loc 1 770 29 discriminator 2 view .LVU862
 3394 04f0 4728     		cmp	r0, #71
 3395 04f2 01D1     		bne	.L260
 3396              	.L259:
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 85


 3397              		.loc 1 770 49 is_stmt 1 discriminator 3 view .LVU863
 770:Core/Src/printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3398              		.loc 1 770 55 is_stmt 0 discriminator 3 view .LVU864
 3399 04f4 45F02005 		orr	r5, r5, #32
 3400              	.LVL374:
 3401              	.L260:
 771:Core/Src/printf.c ****         format++;
 3402              		.loc 1 771 9 is_stmt 1 view .LVU865
 771:Core/Src/printf.c ****         format++;
 3403              		.loc 1 771 15 is_stmt 0 view .LVU866
 3404 04f8 1A9B     		ldr	r3, [sp, #104]
 3405 04fa 0733     		adds	r3, r3, #7
 3406 04fc 23F00703 		bic	r3, r3, #7
 3407 0500 03F10802 		add	r2, r3, #8
 3408 0504 1A92     		str	r2, [sp, #104]
 771:Core/Src/printf.c ****         format++;
 3409              		.loc 1 771 15 discriminator 1 view .LVU867
 3410 0506 93ED000B 		vldr.64	d0, [r3]
 3411 050a 0295     		str	r5, [sp, #8]
 3412 050c CDF804B0 		str	fp, [sp, #4]
 3413 0510 0B9B     		ldr	r3, [sp, #44]
 3414 0512 0093     		str	r3, [sp]
 3415 0514 3B46     		mov	r3, r7
 3416 0516 3246     		mov	r2, r6
 3417 0518 4946     		mov	r1, r9
 3418 051a 4046     		mov	r0, r8
 3419 051c FFF7FEFF 		bl	_etoa
 3420              	.LVL375:
 3421 0520 0646     		mov	r6, r0
 3422              	.LVL376:
 772:Core/Src/printf.c ****         break;
 3423              		.loc 1 772 9 is_stmt 1 view .LVU868
 772:Core/Src/printf.c ****         break;
 3424              		.loc 1 772 15 is_stmt 0 view .LVU869
 3425 0522 0F9B     		ldr	r3, [sp, #60]
 3426 0524 0133     		adds	r3, r3, #1
 3427 0526 0F93     		str	r3, [sp, #60]
 773:Core/Src/printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 3428              		.loc 1 773 9 is_stmt 1 view .LVU870
 3429 0528 75E5     		b	.L282
 3430              	.LVL377:
 3431              	.L233:
 3432              	.LBB52:
 777:Core/Src/printf.c ****         // pre padding
 3433              		.loc 1 777 9 view .LVU871
 779:Core/Src/printf.c ****           while (l++ < width) {
 3434              		.loc 1 779 9 view .LVU872
 779:Core/Src/printf.c ****           while (l++ < width) {
 3435              		.loc 1 779 12 is_stmt 0 view .LVU873
 3436 052a 15F00205 		ands	r5, r5, #2
 3437              	.LVL378:
 779:Core/Src/printf.c ****           while (l++ < width) {
 3438              		.loc 1 779 12 view .LVU874
 3439 052e 1DD0     		beq	.L294
 777:Core/Src/printf.c ****         // pre padding
 3440              		.loc 1 777 22 view .LVU875
 3441 0530 0124     		movs	r4, #1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 86


 3442              	.LVL379:
 3443              	.L262:
 785:Core/Src/printf.c ****         // post padding
 3444              		.loc 1 785 9 is_stmt 1 view .LVU876
 785:Core/Src/printf.c ****         // post padding
 3445              		.loc 1 785 19 is_stmt 0 view .LVU877
 3446 0532 1A98     		ldr	r0, [sp, #104]
 3447 0534 031D     		adds	r3, r0, #4
 3448 0536 1A93     		str	r3, [sp, #104]
 785:Core/Src/printf.c ****         // post padding
 3449              		.loc 1 785 9 discriminator 1 view .LVU878
 3450 0538 06F1010A 		add	r10, r6, #1
 3451              	.LVL380:
 785:Core/Src/printf.c ****         // post padding
 3452              		.loc 1 785 9 discriminator 1 view .LVU879
 3453 053c 3B46     		mov	r3, r7
 3454 053e 3246     		mov	r2, r6
 3455 0540 4946     		mov	r1, r9
 3456 0542 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3457 0544 C047     		blx	r8
 3458              	.LVL381:
 787:Core/Src/printf.c ****           while (l++ < width) {
 3459              		.loc 1 787 9 is_stmt 1 view .LVU880
 787:Core/Src/printf.c ****           while (l++ < width) {
 3460              		.loc 1 787 12 is_stmt 0 view .LVU881
 3461 0546 A5B9     		cbnz	r5, .L319
 3462              	.LVL382:
 3463              	.L265:
 792:Core/Src/printf.c ****         break;
 3464              		.loc 1 792 9 is_stmt 1 view .LVU882
 792:Core/Src/printf.c ****         break;
 3465              		.loc 1 792 15 is_stmt 0 view .LVU883
 3466 0548 0F9B     		ldr	r3, [sp, #60]
 3467 054a 0133     		adds	r3, r3, #1
 3468 054c 0F93     		str	r3, [sp, #60]
 793:Core/Src/printf.c ****       }
 3469              		.loc 1 793 9 is_stmt 1 view .LVU884
 3470 054e 5646     		mov	r6, r10
 3471 0550 61E5     		b	.L282
 3472              	.LVL383:
 3473              	.L263:
 781:Core/Src/printf.c ****           }
 3474              		.loc 1 781 13 view .LVU885
 3475 0552 02F1010A 		add	r10, r2, #1
 3476              	.LVL384:
 781:Core/Src/printf.c ****           }
 3477              		.loc 1 781 13 is_stmt 0 view .LVU886
 3478 0556 3B46     		mov	r3, r7
 3479 0558 4946     		mov	r1, r9
 3480 055a 2020     		movs	r0, #32
 3481 055c C047     		blx	r8
 3482              	.LVL385:
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3483              		.loc 1 780 19 view .LVU887
 3484 055e 2346     		mov	r3, r4
 781:Core/Src/printf.c ****           }
 3485              		.loc 1 781 13 view .LVU888
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 87


 3486 0560 5246     		mov	r2, r10
 3487              	.LVL386:
 3488              	.L261:
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3489              		.loc 1 780 22 is_stmt 1 view .LVU889
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3490              		.loc 1 780 19 is_stmt 0 view .LVU890
 3491 0562 5C1C     		adds	r4, r3, #1
 3492              	.LVL387:
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3493              		.loc 1 780 22 view .LVU891
 3494 0564 9B45     		cmp	fp, r3
 3495 0566 F4D8     		bhi	.L263
 780:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3496              		.loc 1 780 22 view .LVU892
 3497 0568 1646     		mov	r6, r2
 3498 056a E2E7     		b	.L262
 3499              	.LVL388:
 3500              	.L294:
 777:Core/Src/printf.c ****         // pre padding
 3501              		.loc 1 777 22 view .LVU893
 3502 056c 0123     		movs	r3, #1
 3503 056e 3246     		mov	r2, r6
 3504 0570 F7E7     		b	.L261
 3505              	.LVL389:
 3506              	.L319:
 777:Core/Src/printf.c ****         // pre padding
 3507              		.loc 1 777 22 view .LVU894
 3508 0572 5246     		mov	r2, r10
 3509 0574 06E0     		b	.L264
 3510              	.LVL390:
 3511              	.L266:
 789:Core/Src/printf.c ****           }
 3512              		.loc 1 789 13 is_stmt 1 view .LVU895
 3513 0576 561C     		adds	r6, r2, #1
 3514              	.LVL391:
 789:Core/Src/printf.c ****           }
 3515              		.loc 1 789 13 is_stmt 0 view .LVU896
 3516 0578 3B46     		mov	r3, r7
 3517 057a 4946     		mov	r1, r9
 3518 057c 2020     		movs	r0, #32
 3519 057e C047     		blx	r8
 3520              	.LVL392:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3521              		.loc 1 788 19 view .LVU897
 3522 0580 2C46     		mov	r4, r5
 789:Core/Src/printf.c ****           }
 3523              		.loc 1 789 13 view .LVU898
 3524 0582 3246     		mov	r2, r6
 3525              	.LVL393:
 3526              	.L264:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3527              		.loc 1 788 22 is_stmt 1 view .LVU899
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3528              		.loc 1 788 19 is_stmt 0 view .LVU900
 3529 0584 651C     		adds	r5, r4, #1
 3530              	.LVL394:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 88


 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3531              		.loc 1 788 22 view .LVU901
 3532 0586 A345     		cmp	fp, r4
 3533 0588 F5D8     		bhi	.L266
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3534              		.loc 1 788 22 view .LVU902
 3535 058a 9246     		mov	r10, r2
 3536 058c DCE7     		b	.L265
 3537              	.LVL395:
 3538              	.L271:
 788:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3539              		.loc 1 788 22 view .LVU903
 3540              	.LBE52:
 3541              	.LBB53:
 3542              	.LBB39:
 3543              	.LBB40:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3544              		.loc 1 174 34 is_stmt 1 discriminator 4 view .LVU904
 3545 058e 0133     		adds	r3, r3, #1
 3546              	.LVL396:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3547              		.loc 1 174 30 is_stmt 0 discriminator 3 view .LVU905
 3548 0590 0A46     		mov	r2, r1
 3549              	.LVL397:
 3550              	.L269:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3551              		.loc 1 174 20 is_stmt 1 discriminator 1 view .LVU906
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3552              		.loc 1 174 17 is_stmt 0 discriminator 1 view .LVU907
 3553 0592 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3554              		.loc 1 174 20 discriminator 1 view .LVU908
 3555 0594 11B1     		cbz	r1, .L270
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3556              		.loc 1 174 30 discriminator 3 view .LVU909
 3557 0596 511E     		subs	r1, r2, #1
 3558              	.LVL398:
 174:Core/Src/printf.c ****   return (unsigned int)(s - str);
 3559              		.loc 1 174 20 discriminator 3 view .LVU910
 3560 0598 002A     		cmp	r2, #0
 3561 059a F8D1     		bne	.L271
 3562              	.LVL399:
 3563              	.L270:
 175:Core/Src/printf.c **** }
 3564              		.loc 1 175 3 is_stmt 1 view .LVU911
 175:Core/Src/printf.c **** }
 3565              		.loc 1 175 27 is_stmt 0 view .LVU912
 3566 059c A3EB0A03 		sub	r3, r3, r10
 3567              	.LVL400:
 175:Core/Src/printf.c **** }
 3568              		.loc 1 175 27 view .LVU913
 3569              	.LBE40:
 3570              	.LBE39:
 799:Core/Src/printf.c ****         // pre padding
 800:Core/Src/printf.c ****         if (flags & FLAGS_PRECISION) {
 3571              		.loc 1 800 9 is_stmt 1 view .LVU914
 3572              		.loc 1 800 12 is_stmt 0 view .LVU915
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 89


 3573 05a0 15F48062 		ands	r2, r5, #1024
 3574 05a4 0C92     		str	r2, [sp, #48]
 3575 05a6 03D0     		beq	.L272
 801:Core/Src/printf.c ****           l = (l < precision ? l : precision);
 3576              		.loc 1 801 11 is_stmt 1 view .LVU916
 3577              		.loc 1 801 13 is_stmt 0 view .LVU917
 3578 05a8 0B9A     		ldr	r2, [sp, #44]
 3579 05aa 9342     		cmp	r3, r2
 3580 05ac 28BF     		it	cs
 3581 05ae 1346     		movcs	r3, r2
 3582              	.LVL401:
 3583              	.L272:
 802:Core/Src/printf.c ****         }
 803:Core/Src/printf.c ****         if (!(flags & FLAGS_LEFT)) {
 3584              		.loc 1 803 9 is_stmt 1 view .LVU918
 3585              		.loc 1 803 12 is_stmt 0 view .LVU919
 3586 05b0 15F00204 		ands	r4, r5, #2
 3587 05b4 09D0     		beq	.L320
 3588              		.loc 1 803 12 view .LVU920
 3589 05b6 0D94     		str	r4, [sp, #52]
 3590 05b8 CDF838B0 		str	fp, [sp, #56]
 3591 05bc 0B9D     		ldr	r5, [sp, #44]
 3592              	.LVL402:
 3593              		.loc 1 803 12 view .LVU921
 3594 05be 3246     		mov	r2, r6
 3595 05c0 0C9E     		ldr	r6, [sp, #48]
 3596              	.LVL403:
 3597              		.loc 1 803 12 view .LVU922
 3598 05c2 9B46     		mov	fp, r3
 3599              	.LVL404:
 3600              		.loc 1 803 12 view .LVU923
 3601 05c4 1FE0     		b	.L276
 3602              	.LVL405:
 3603              	.L267:
 798:Core/Src/printf.c ****         // pre padding
 3604              		.loc 1 798 26 discriminator 1 view .LVU924
 3605 05c6 0B9A     		ldr	r2, [sp, #44]
 3606 05c8 73E6     		b	.L268
 3607              	.LVL406:
 3608              	.L320:
 798:Core/Src/printf.c ****         // pre padding
 3609              		.loc 1 798 26 discriminator 1 view .LVU925
 3610 05ca 3246     		mov	r2, r6
 3611 05cc 2646     		mov	r6, r4
 3612              	.LVL407:
 798:Core/Src/printf.c ****         // pre padding
 3613              		.loc 1 798 26 discriminator 1 view .LVU926
 3614 05ce 06E0     		b	.L273
 3615              	.LVL408:
 3616              	.L275:
 804:Core/Src/printf.c ****           while (l++ < width) {
 805:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 3617              		.loc 1 805 13 is_stmt 1 view .LVU927
 3618 05d0 541C     		adds	r4, r2, #1
 3619              	.LVL409:
 3620              		.loc 1 805 13 is_stmt 0 view .LVU928
 3621 05d2 3B46     		mov	r3, r7
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 90


 3622 05d4 4946     		mov	r1, r9
 3623 05d6 2020     		movs	r0, #32
 3624 05d8 C047     		blx	r8
 3625              	.LVL410:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3626              		.loc 1 804 19 view .LVU929
 3627 05da 2B46     		mov	r3, r5
 3628              		.loc 1 805 13 view .LVU930
 3629 05dc 2246     		mov	r2, r4
 3630              	.LVL411:
 3631              	.L273:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3632              		.loc 1 804 22 is_stmt 1 view .LVU931
 804:Core/Src/printf.c ****           while (l++ < width) {
 3633              		.loc 1 804 19 is_stmt 0 view .LVU932
 3634 05de 5D1C     		adds	r5, r3, #1
 3635              	.LVL412:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3636              		.loc 1 804 22 view .LVU933
 3637 05e0 9B45     		cmp	fp, r3
 3638 05e2 F5D8     		bhi	.L275
 804:Core/Src/printf.c ****           while (l++ < width) {
 3639              		.loc 1 804 19 view .LVU934
 3640 05e4 3446     		mov	r4, r6
 3641 05e6 2B46     		mov	r3, r5
 3642 05e8 0D94     		str	r4, [sp, #52]
 3643 05ea CDF838B0 		str	fp, [sp, #56]
 3644 05ee 0B9D     		ldr	r5, [sp, #44]
 3645              	.LVL413:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3646              		.loc 1 804 19 view .LVU935
 3647 05f0 0C9E     		ldr	r6, [sp, #48]
 3648 05f2 9B46     		mov	fp, r3
 3649              	.LVL414:
 804:Core/Src/printf.c ****           while (l++ < width) {
 3650              		.loc 1 804 19 view .LVU936
 3651 05f4 07E0     		b	.L276
 3652              	.LVL415:
 3653              	.L295:
 806:Core/Src/printf.c ****           }
 807:Core/Src/printf.c ****         }
 808:Core/Src/printf.c ****         // string output
 809:Core/Src/printf.c ****         while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 3654              		.loc 1 809 69 discriminator 2 view .LVU937
 3655 05f6 1D46     		mov	r5, r3
 3656              	.LVL416:
 3657              	.L278:
 810:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3658              		.loc 1 810 11 is_stmt 1 view .LVU938
 3659              		.loc 1 810 18 is_stmt 0 view .LVU939
 3660 05f8 0AF1010A 		add	r10, r10, #1
 3661              	.LVL417:
 3662              		.loc 1 810 11 view .LVU940
 3663 05fc 541C     		adds	r4, r2, #1
 3664              	.LVL418:
 3665              		.loc 1 810 11 view .LVU941
 3666 05fe 3B46     		mov	r3, r7
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 91


 3667 0600 4946     		mov	r1, r9
 3668 0602 C047     		blx	r8
 3669              	.LVL419:
 3670 0604 2246     		mov	r2, r4
 3671              	.LVL420:
 3672              	.L276:
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3673              		.loc 1 809 26 is_stmt 1 view .LVU942
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3674              		.loc 1 809 17 is_stmt 0 view .LVU943
 3675 0606 9AF80000 		ldrb	r0, [r10]	@ zero_extendqisi2
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3676              		.loc 1 809 26 view .LVU944
 3677 060a 20B1     		cbz	r0, .L277
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3678              		.loc 1 809 26 discriminator 1 view .LVU945
 3679 060c 002E     		cmp	r6, #0
 3680 060e F3D0     		beq	.L278
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3681              		.loc 1 809 69 discriminator 2 view .LVU946
 3682 0610 6B1E     		subs	r3, r5, #1
 3683              	.LVL421:
 809:Core/Src/printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3684              		.loc 1 809 57 discriminator 2 view .LVU947
 3685 0612 002D     		cmp	r5, #0
 3686 0614 EFD1     		bne	.L295
 3687              	.LVL422:
 3688              	.L277:
 811:Core/Src/printf.c ****         }
 812:Core/Src/printf.c ****         // post padding
 813:Core/Src/printf.c ****         if (flags & FLAGS_LEFT) {
 3689              		.loc 1 813 12 view .LVU948
 3690 0616 0D9C     		ldr	r4, [sp, #52]
 3691 0618 1646     		mov	r6, r2
 3692 061a 5B46     		mov	r3, fp
 3693 061c DDF838B0 		ldr	fp, [sp, #56]
 3694              	.LVL423:
 3695              		.loc 1 813 9 is_stmt 1 view .LVU949
 3696              		.loc 1 813 12 is_stmt 0 view .LVU950
 3697 0620 54B9     		cbnz	r4, .L279
 3698              	.LVL424:
 3699              	.L280:
 814:Core/Src/printf.c ****           while (l++ < width) {
 815:Core/Src/printf.c ****             out(' ', buffer, idx++, maxlen);
 816:Core/Src/printf.c ****           }
 817:Core/Src/printf.c ****         }
 818:Core/Src/printf.c ****         format++;
 3700              		.loc 1 818 9 is_stmt 1 view .LVU951
 3701              		.loc 1 818 15 is_stmt 0 view .LVU952
 3702 0622 0F9B     		ldr	r3, [sp, #60]
 3703 0624 0133     		adds	r3, r3, #1
 3704 0626 0F93     		str	r3, [sp, #60]
 819:Core/Src/printf.c ****         break;
 3705              		.loc 1 819 9 is_stmt 1 view .LVU953
 3706 0628 F5E4     		b	.L282
 3707              	.LVL425:
 3708              	.L281:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 92


 815:Core/Src/printf.c ****           }
 3709              		.loc 1 815 13 view .LVU954
 3710 062a 551C     		adds	r5, r2, #1
 3711              	.LVL426:
 815:Core/Src/printf.c ****           }
 3712              		.loc 1 815 13 is_stmt 0 view .LVU955
 3713 062c 3B46     		mov	r3, r7
 3714 062e 4946     		mov	r1, r9
 3715 0630 2020     		movs	r0, #32
 3716 0632 C047     		blx	r8
 3717              	.LVL427:
 814:Core/Src/printf.c ****           while (l++ < width) {
 3718              		.loc 1 814 19 view .LVU956
 3719 0634 2346     		mov	r3, r4
 815:Core/Src/printf.c ****           }
 3720              		.loc 1 815 13 view .LVU957
 3721 0636 2A46     		mov	r2, r5
 3722              	.LVL428:
 3723              	.L279:
 814:Core/Src/printf.c ****           while (l++ < width) {
 3724              		.loc 1 814 22 is_stmt 1 view .LVU958
 814:Core/Src/printf.c ****           while (l++ < width) {
 3725              		.loc 1 814 19 is_stmt 0 view .LVU959
 3726 0638 5C1C     		adds	r4, r3, #1
 3727              	.LVL429:
 814:Core/Src/printf.c ****           while (l++ < width) {
 3728              		.loc 1 814 22 view .LVU960
 3729 063a 9B45     		cmp	fp, r3
 3730 063c F5D8     		bhi	.L281
 814:Core/Src/printf.c ****           while (l++ < width) {
 3731              		.loc 1 814 22 view .LVU961
 3732 063e 1646     		mov	r6, r2
 3733 0640 EFE7     		b	.L280
 3734              	.LVL430:
 3735              	.L228:
 814:Core/Src/printf.c ****           while (l++ < width) {
 3736              		.loc 1 814 22 view .LVU962
 3737              	.LBE53:
 3738              	.LBB54:
 820:Core/Src/printf.c ****       }
 821:Core/Src/printf.c **** 
 822:Core/Src/printf.c ****       case 'p' : {
 823:Core/Src/printf.c ****         width = sizeof(void*) * 2U;
 3739              		.loc 1 823 9 is_stmt 1 view .LVU963
 824:Core/Src/printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 3740              		.loc 1 824 9 view .LVU964
 3741              		.loc 1 824 15 is_stmt 0 view .LVU965
 3742 0642 45F02105 		orr	r5, r5, #33
 3743              	.LVL431:
 825:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 826:Core/Src/printf.c ****         const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
 3744              		.loc 1 826 9 is_stmt 1 view .LVU966
 827:Core/Src/printf.c ****         if (is_ll) {
 3745              		.loc 1 827 9 view .LVU967
 828:Core/Src/printf.c ****           idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U,
 829:Core/Src/printf.c ****         }
 830:Core/Src/printf.c ****         else {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 93


 831:Core/Src/printf.c **** #endif
 832:Core/Src/printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)),
 3746              		.loc 1 832 11 view .LVU968
 3747              		.loc 1 832 81 is_stmt 0 view .LVU969
 3748 0646 1A9B     		ldr	r3, [sp, #104]
 3749 0648 1A1D     		adds	r2, r3, #4
 3750 064a 1A92     		str	r2, [sp, #104]
 3751 064c 1B68     		ldr	r3, [r3]
 3752              		.loc 1 832 17 discriminator 1 view .LVU970
 3753 064e 0595     		str	r5, [sp, #20]
 3754 0650 0822     		movs	r2, #8
 3755 0652 0492     		str	r2, [sp, #16]
 3756 0654 0B9A     		ldr	r2, [sp, #44]
 3757 0656 0392     		str	r2, [sp, #12]
 3758 0658 1022     		movs	r2, #16
 3759 065a 0292     		str	r2, [sp, #8]
 3760 065c 0022     		movs	r2, #0
 3761 065e 0192     		str	r2, [sp, #4]
 3762 0660 0093     		str	r3, [sp]
 3763 0662 3B46     		mov	r3, r7
 3764 0664 3246     		mov	r2, r6
 3765 0666 4946     		mov	r1, r9
 3766 0668 4046     		mov	r0, r8
 3767 066a FFF7FEFF 		bl	_ntoa_long
 3768              	.LVL432:
 3769 066e 0646     		mov	r6, r0
 3770              	.LVL433:
 833:Core/Src/printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 834:Core/Src/printf.c ****         }
 835:Core/Src/printf.c **** #endif
 836:Core/Src/printf.c ****         format++;
 3771              		.loc 1 836 9 is_stmt 1 view .LVU971
 3772              		.loc 1 836 15 is_stmt 0 view .LVU972
 3773 0670 0F9B     		ldr	r3, [sp, #60]
 3774 0672 0133     		adds	r3, r3, #1
 3775 0674 0F93     		str	r3, [sp, #60]
 837:Core/Src/printf.c ****         break;
 3776              		.loc 1 837 9 is_stmt 1 view .LVU973
 3777 0676 CEE4     		b	.L282
 3778              	.LVL434:
 3779              	.L234:
 3780              		.loc 1 837 9 is_stmt 0 view .LVU974
 3781              	.LBE54:
 838:Core/Src/printf.c ****       }
 839:Core/Src/printf.c **** 
 840:Core/Src/printf.c ****       case '%' :
 841:Core/Src/printf.c ****         out('%', buffer, idx++, maxlen);
 3782              		.loc 1 841 9 is_stmt 1 view .LVU975
 3783 0678 741C     		adds	r4, r6, #1
 3784              	.LVL435:
 3785              		.loc 1 841 9 is_stmt 0 view .LVU976
 3786 067a 3B46     		mov	r3, r7
 3787 067c 3246     		mov	r2, r6
 3788 067e 4946     		mov	r1, r9
 3789 0680 2520     		movs	r0, #37
 3790 0682 C047     		blx	r8
 3791              	.LVL436:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 94


 842:Core/Src/printf.c ****         format++;
 3792              		.loc 1 842 9 is_stmt 1 view .LVU977
 3793              		.loc 1 842 15 is_stmt 0 view .LVU978
 3794 0684 0F9B     		ldr	r3, [sp, #60]
 3795 0686 0133     		adds	r3, r3, #1
 3796 0688 0F93     		str	r3, [sp, #60]
 843:Core/Src/printf.c ****         break;
 3797              		.loc 1 843 9 is_stmt 1 view .LVU979
 841:Core/Src/printf.c ****         format++;
 3798              		.loc 1 841 9 is_stmt 0 view .LVU980
 3799 068a 2646     		mov	r6, r4
 3800              		.loc 1 843 9 view .LVU981
 3801 068c C3E4     		b	.L282
 3802              	.LVL437:
 3803              	.L226:
 844:Core/Src/printf.c **** 
 845:Core/Src/printf.c ****       default :
 846:Core/Src/printf.c ****         out(*format, buffer, idx++, maxlen);
 3804              		.loc 1 846 9 is_stmt 1 view .LVU982
 3805 068e 741C     		adds	r4, r6, #1
 3806              	.LVL438:
 3807              		.loc 1 846 9 is_stmt 0 view .LVU983
 3808 0690 3B46     		mov	r3, r7
 3809 0692 3246     		mov	r2, r6
 3810 0694 4946     		mov	r1, r9
 3811 0696 C047     		blx	r8
 3812              	.LVL439:
 847:Core/Src/printf.c ****         format++;
 3813              		.loc 1 847 9 is_stmt 1 view .LVU984
 3814              		.loc 1 847 15 is_stmt 0 view .LVU985
 3815 0698 0F9B     		ldr	r3, [sp, #60]
 3816 069a 0133     		adds	r3, r3, #1
 3817 069c 0F93     		str	r3, [sp, #60]
 848:Core/Src/printf.c ****         break;
 3818              		.loc 1 848 9 is_stmt 1 view .LVU986
 846:Core/Src/printf.c ****         format++;
 3819              		.loc 1 846 9 is_stmt 0 view .LVU987
 3820 069e 2646     		mov	r6, r4
 3821              		.loc 1 848 9 view .LVU988
 3822 06a0 B9E4     		b	.L282
 3823              	.LVL440:
 3824              	.L302:
 584:Core/Src/printf.c ****   }
 3825              		.loc 1 584 9 view .LVU989
 3826 06a2 DFF82080 		ldr	r8, .L321
 3827 06a6 B5E4     		b	.L199
 3828              	.LVL441:
 3829              	.L303:
 849:Core/Src/printf.c ****     }
 850:Core/Src/printf.c ****   }
 851:Core/Src/printf.c **** 
 852:Core/Src/printf.c ****   // termination
 853:Core/Src/printf.c ****   out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 3830              		.loc 1 853 3 is_stmt 1 view .LVU990
 3831 06a8 BE42     		cmp	r6, r7
 3832 06aa 08D3     		bcc	.L296
 3833              		.loc 1 853 3 is_stmt 0 discriminator 1 view .LVU991
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 95


 3834 06ac 7A1E     		subs	r2, r7, #1
 3835              	.L284:
 3836              		.loc 1 853 3 discriminator 4 view .LVU992
 3837 06ae 3B46     		mov	r3, r7
 3838 06b0 4946     		mov	r1, r9
 3839 06b2 0020     		movs	r0, #0
 3840 06b4 C047     		blx	r8
 3841              	.LVL442:
 854:Core/Src/printf.c **** 
 855:Core/Src/printf.c ****   // return written chars without terminating \0
 856:Core/Src/printf.c ****   return (int)idx;
 3842              		.loc 1 856 3 is_stmt 1 view .LVU993
 857:Core/Src/printf.c **** }
 3843              		.loc 1 857 1 is_stmt 0 view .LVU994
 3844 06b6 3046     		mov	r0, r6
 3845 06b8 11B0     		add	sp, sp, #68
 3846              	.LCFI30:
 3847              		.cfi_remember_state
 3848              		.cfi_def_cfa_offset 36
 3849              		@ sp needed
 3850 06ba BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3851              	.LVL443:
 3852              	.L296:
 3853              	.LCFI31:
 3854              		.cfi_restore_state
 853:Core/Src/printf.c **** 
 3855              		.loc 1 853 3 discriminator 2 view .LVU995
 3856 06be 3246     		mov	r2, r6
 3857 06c0 F5E7     		b	.L284
 3858              	.L322:
 3859 06c2 00BF     		.align	2
 3860              	.L321:
 3861 06c4 00000000 		.word	_out_null
 3862              		.cfi_endproc
 3863              	.LFE13:
 3865              		.section	.text._out_char,"ax",%progbits
 3866              		.align	1
 3867              		.syntax unified
 3868              		.thumb
 3869              		.thumb_func
 3871              	_out_char:
 3872              	.LVL444:
 3873              	.LFB2:
 150:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 3874              		.loc 1 150 1 is_stmt 1 view -0
 3875              		.cfi_startproc
 3876              		@ args = 0, pretend = 0, frame = 0
 3877              		@ frame_needed = 0, uses_anonymous_args = 0
 151:Core/Src/printf.c ****   if (character) {
 3878              		.loc 1 151 3 view .LVU997
 151:Core/Src/printf.c ****   if (character) {
 3879              		.loc 1 151 17 view .LVU998
 151:Core/Src/printf.c ****   if (character) {
 3880              		.loc 1 151 28 view .LVU999
 152:Core/Src/printf.c ****     _putchar(character);
 3881              		.loc 1 152 3 view .LVU1000
 152:Core/Src/printf.c ****     _putchar(character);
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 96


 3882              		.loc 1 152 6 is_stmt 0 view .LVU1001
 3883 0000 00B9     		cbnz	r0, .L329
 3884 0002 7047     		bx	lr
 3885              	.L329:
 150:Core/Src/printf.c ****   (void)buffer; (void)idx; (void)maxlen;
 3886              		.loc 1 150 1 view .LVU1002
 3887 0004 08B5     		push	{r3, lr}
 3888              	.LCFI32:
 3889              		.cfi_def_cfa_offset 8
 3890              		.cfi_offset 3, -8
 3891              		.cfi_offset 14, -4
 153:Core/Src/printf.c ****   }
 3892              		.loc 1 153 5 is_stmt 1 view .LVU1003
 3893 0006 FFF7FEFF 		bl	_putchar
 3894              	.LVL445:
 155:Core/Src/printf.c **** 
 3895              		.loc 1 155 1 is_stmt 0 view .LVU1004
 3896 000a 08BD     		pop	{r3, pc}
 3897              		.cfi_endproc
 3898              	.LFE2:
 3900              		.section	.text.printf_,"ax",%progbits
 3901              		.align	1
 3902              		.global	printf_
 3903              		.syntax unified
 3904              		.thumb
 3905              		.thumb_func
 3907              	printf_:
 3908              	.LVL446:
 3909              	.LFB14:
 858:Core/Src/printf.c **** 
 859:Core/Src/printf.c **** 
 860:Core/Src/printf.c **** ///////////////////////////////////////////////////////////////////////////////
 861:Core/Src/printf.c **** 
 862:Core/Src/printf.c **** int printf_(const char* format, ...)
 863:Core/Src/printf.c **** {
 3910              		.loc 1 863 1 is_stmt 1 view -0
 3911              		.cfi_startproc
 3912              		@ args = 4, pretend = 16, frame = 8
 3913              		@ frame_needed = 0, uses_anonymous_args = 1
 3914              		.loc 1 863 1 is_stmt 0 view .LVU1006
 3915 0000 0FB4     		push	{r0, r1, r2, r3}
 3916              	.LCFI33:
 3917              		.cfi_def_cfa_offset 16
 3918              		.cfi_offset 0, -16
 3919              		.cfi_offset 1, -12
 3920              		.cfi_offset 2, -8
 3921              		.cfi_offset 3, -4
 3922 0002 00B5     		push	{lr}
 3923              	.LCFI34:
 3924              		.cfi_def_cfa_offset 20
 3925              		.cfi_offset 14, -20
 3926 0004 85B0     		sub	sp, sp, #20
 3927              	.LCFI35:
 3928              		.cfi_def_cfa_offset 40
 3929 0006 06AA     		add	r2, sp, #24
 3930 0008 52F8043B 		ldr	r3, [r2], #4
 864:Core/Src/printf.c ****   va_list va;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 97


 3931              		.loc 1 864 3 is_stmt 1 view .LVU1007
 865:Core/Src/printf.c ****   va_start(va, format);
 3932              		.loc 1 865 3 view .LVU1008
 3933 000c 0392     		str	r2, [sp, #12]
 866:Core/Src/printf.c ****   char buffer[1];
 3934              		.loc 1 866 3 view .LVU1009
 867:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 3935              		.loc 1 867 3 view .LVU1010
 3936              		.loc 1 867 19 is_stmt 0 view .LVU1011
 3937 000e 0092     		str	r2, [sp]
 3938 0010 4FF0FF32 		mov	r2, #-1
 3939 0014 02A9     		add	r1, sp, #8
 3940 0016 0448     		ldr	r0, .L332
 3941 0018 FFF7FEFF 		bl	_vsnprintf
 3942              	.LVL447:
 868:Core/Src/printf.c ****   va_end(va);
 3943              		.loc 1 868 3 is_stmt 1 view .LVU1012
 869:Core/Src/printf.c ****   return ret;
 3944              		.loc 1 869 3 view .LVU1013
 870:Core/Src/printf.c **** }
 3945              		.loc 1 870 1 is_stmt 0 view .LVU1014
 3946 001c 05B0     		add	sp, sp, #20
 3947              	.LCFI36:
 3948              		.cfi_def_cfa_offset 20
 3949              		@ sp needed
 3950 001e 5DF804EB 		ldr	lr, [sp], #4
 3951              	.LCFI37:
 3952              		.cfi_restore 14
 3953              		.cfi_def_cfa_offset 16
 3954 0022 04B0     		add	sp, sp, #16
 3955              	.LCFI38:
 3956              		.cfi_restore 3
 3957              		.cfi_restore 2
 3958              		.cfi_restore 1
 3959              		.cfi_restore 0
 3960              		.cfi_def_cfa_offset 0
 3961 0024 7047     		bx	lr
 3962              	.L333:
 3963 0026 00BF     		.align	2
 3964              	.L332:
 3965 0028 00000000 		.word	_out_char
 3966              		.cfi_endproc
 3967              	.LFE14:
 3969              		.section	.text.sprintf_,"ax",%progbits
 3970              		.align	1
 3971              		.global	sprintf_
 3972              		.syntax unified
 3973              		.thumb
 3974              		.thumb_func
 3976              	sprintf_:
 3977              	.LVL448:
 3978              	.LFB15:
 871:Core/Src/printf.c **** 
 872:Core/Src/printf.c **** 
 873:Core/Src/printf.c **** int sprintf_(char* buffer, const char* format, ...)
 874:Core/Src/printf.c **** {
 3979              		.loc 1 874 1 is_stmt 1 view -0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 98


 3980              		.cfi_startproc
 3981              		@ args = 4, pretend = 12, frame = 8
 3982              		@ frame_needed = 0, uses_anonymous_args = 1
 3983              		.loc 1 874 1 is_stmt 0 view .LVU1016
 3984 0000 0EB4     		push	{r1, r2, r3}
 3985              	.LCFI39:
 3986              		.cfi_def_cfa_offset 12
 3987              		.cfi_offset 1, -12
 3988              		.cfi_offset 2, -8
 3989              		.cfi_offset 3, -4
 3990 0002 00B5     		push	{lr}
 3991              	.LCFI40:
 3992              		.cfi_def_cfa_offset 16
 3993              		.cfi_offset 14, -16
 3994 0004 84B0     		sub	sp, sp, #16
 3995              	.LCFI41:
 3996              		.cfi_def_cfa_offset 32
 3997 0006 0146     		mov	r1, r0
 3998 0008 05AA     		add	r2, sp, #20
 3999 000a 52F8043B 		ldr	r3, [r2], #4
 875:Core/Src/printf.c ****   va_list va;
 4000              		.loc 1 875 3 is_stmt 1 view .LVU1017
 876:Core/Src/printf.c ****   va_start(va, format);
 4001              		.loc 1 876 3 view .LVU1018
 4002 000e 0392     		str	r2, [sp, #12]
 877:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
 4003              		.loc 1 877 3 view .LVU1019
 4004              		.loc 1 877 19 is_stmt 0 view .LVU1020
 4005 0010 0092     		str	r2, [sp]
 4006 0012 4FF0FF32 		mov	r2, #-1
 4007 0016 0448     		ldr	r0, .L336
 4008              	.LVL449:
 4009              		.loc 1 877 19 view .LVU1021
 4010 0018 FFF7FEFF 		bl	_vsnprintf
 4011              	.LVL450:
 878:Core/Src/printf.c ****   va_end(va);
 4012              		.loc 1 878 3 is_stmt 1 view .LVU1022
 879:Core/Src/printf.c ****   return ret;
 4013              		.loc 1 879 3 view .LVU1023
 880:Core/Src/printf.c **** }
 4014              		.loc 1 880 1 is_stmt 0 view .LVU1024
 4015 001c 04B0     		add	sp, sp, #16
 4016              	.LCFI42:
 4017              		.cfi_def_cfa_offset 16
 4018              		@ sp needed
 4019 001e 5DF804EB 		ldr	lr, [sp], #4
 4020              	.LCFI43:
 4021              		.cfi_restore 14
 4022              		.cfi_def_cfa_offset 12
 4023 0022 03B0     		add	sp, sp, #12
 4024              	.LCFI44:
 4025              		.cfi_restore 3
 4026              		.cfi_restore 2
 4027              		.cfi_restore 1
 4028              		.cfi_def_cfa_offset 0
 4029 0024 7047     		bx	lr
 4030              	.L337:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 99


 4031 0026 00BF     		.align	2
 4032              	.L336:
 4033 0028 00000000 		.word	_out_buffer
 4034              		.cfi_endproc
 4035              	.LFE15:
 4037              		.section	.text.snprintf_,"ax",%progbits
 4038              		.align	1
 4039              		.global	snprintf_
 4040              		.syntax unified
 4041              		.thumb
 4042              		.thumb_func
 4044              	snprintf_:
 4045              	.LVL451:
 4046              	.LFB16:
 881:Core/Src/printf.c **** 
 882:Core/Src/printf.c **** 
 883:Core/Src/printf.c **** int snprintf_(char* buffer, size_t count, const char* format, ...)
 884:Core/Src/printf.c **** {
 4047              		.loc 1 884 1 is_stmt 1 view -0
 4048              		.cfi_startproc
 4049              		@ args = 4, pretend = 8, frame = 8
 4050              		@ frame_needed = 0, uses_anonymous_args = 1
 4051              		.loc 1 884 1 is_stmt 0 view .LVU1026
 4052 0000 0CB4     		push	{r2, r3}
 4053              	.LCFI45:
 4054              		.cfi_def_cfa_offset 8
 4055              		.cfi_offset 2, -8
 4056              		.cfi_offset 3, -4
 4057 0002 10B5     		push	{r4, lr}
 4058              	.LCFI46:
 4059              		.cfi_def_cfa_offset 16
 4060              		.cfi_offset 4, -16
 4061              		.cfi_offset 14, -12
 4062 0004 84B0     		sub	sp, sp, #16
 4063              	.LCFI47:
 4064              		.cfi_def_cfa_offset 32
 4065 0006 0A46     		mov	r2, r1
 4066 0008 06AC     		add	r4, sp, #24
 4067 000a 54F8043B 		ldr	r3, [r4], #4
 885:Core/Src/printf.c ****   va_list va;
 4068              		.loc 1 885 3 is_stmt 1 view .LVU1027
 886:Core/Src/printf.c ****   va_start(va, format);
 4069              		.loc 1 886 3 view .LVU1028
 4070 000e 0394     		str	r4, [sp, #12]
 887:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 4071              		.loc 1 887 3 view .LVU1029
 4072              		.loc 1 887 19 is_stmt 0 view .LVU1030
 4073 0010 0094     		str	r4, [sp]
 4074 0012 0146     		mov	r1, r0
 4075              	.LVL452:
 4076              		.loc 1 887 19 view .LVU1031
 4077 0014 0348     		ldr	r0, .L340
 4078              	.LVL453:
 4079              		.loc 1 887 19 view .LVU1032
 4080 0016 FFF7FEFF 		bl	_vsnprintf
 4081              	.LVL454:
 888:Core/Src/printf.c ****   va_end(va);
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 100


 4082              		.loc 1 888 3 is_stmt 1 view .LVU1033
 889:Core/Src/printf.c ****   return ret;
 4083              		.loc 1 889 3 view .LVU1034
 890:Core/Src/printf.c **** }
 4084              		.loc 1 890 1 is_stmt 0 view .LVU1035
 4085 001a 04B0     		add	sp, sp, #16
 4086              	.LCFI48:
 4087              		.cfi_def_cfa_offset 16
 4088              		@ sp needed
 4089 001c BDE81040 		pop	{r4, lr}
 4090              	.LCFI49:
 4091              		.cfi_restore 14
 4092              		.cfi_restore 4
 4093              		.cfi_def_cfa_offset 8
 4094 0020 02B0     		add	sp, sp, #8
 4095              	.LCFI50:
 4096              		.cfi_restore 3
 4097              		.cfi_restore 2
 4098              		.cfi_def_cfa_offset 0
 4099 0022 7047     		bx	lr
 4100              	.L341:
 4101              		.align	2
 4102              	.L340:
 4103 0024 00000000 		.word	_out_buffer
 4104              		.cfi_endproc
 4105              	.LFE16:
 4107              		.section	.text.vprintf_,"ax",%progbits
 4108              		.align	1
 4109              		.global	vprintf_
 4110              		.syntax unified
 4111              		.thumb
 4112              		.thumb_func
 4114              	vprintf_:
 4115              	.LVL455:
 4116              	.LFB17:
 891:Core/Src/printf.c **** 
 892:Core/Src/printf.c **** 
 893:Core/Src/printf.c **** int vprintf_(const char* format, va_list va)
 894:Core/Src/printf.c **** {
 4117              		.loc 1 894 1 is_stmt 1 view -0
 4118              		.cfi_startproc
 4119              		@ args = 0, pretend = 0, frame = 8
 4120              		@ frame_needed = 0, uses_anonymous_args = 0
 4121              		.loc 1 894 1 is_stmt 0 view .LVU1037
 4122 0000 00B5     		push	{lr}
 4123              	.LCFI51:
 4124              		.cfi_def_cfa_offset 4
 4125              		.cfi_offset 14, -4
 4126 0002 85B0     		sub	sp, sp, #20
 4127              	.LCFI52:
 4128              		.cfi_def_cfa_offset 24
 4129 0004 0346     		mov	r3, r0
 895:Core/Src/printf.c ****   char buffer[1];
 4130              		.loc 1 895 3 is_stmt 1 view .LVU1038
 896:Core/Src/printf.c ****   return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 4131              		.loc 1 896 3 view .LVU1039
 4132              		.loc 1 896 10 is_stmt 0 view .LVU1040
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 101


 4133 0006 0091     		str	r1, [sp]
 4134 0008 4FF0FF32 		mov	r2, #-1
 4135 000c 03A9     		add	r1, sp, #12
 4136              	.LVL456:
 4137              		.loc 1 896 10 view .LVU1041
 4138 000e 0348     		ldr	r0, .L344
 4139              	.LVL457:
 4140              		.loc 1 896 10 view .LVU1042
 4141 0010 FFF7FEFF 		bl	_vsnprintf
 4142              	.LVL458:
 897:Core/Src/printf.c **** }
 4143              		.loc 1 897 1 view .LVU1043
 4144 0014 05B0     		add	sp, sp, #20
 4145              	.LCFI53:
 4146              		.cfi_def_cfa_offset 4
 4147              		@ sp needed
 4148 0016 5DF804FB 		ldr	pc, [sp], #4
 4149              	.L345:
 4150 001a 00BF     		.align	2
 4151              	.L344:
 4152 001c 00000000 		.word	_out_char
 4153              		.cfi_endproc
 4154              	.LFE17:
 4156              		.section	.text.vsnprintf_,"ax",%progbits
 4157              		.align	1
 4158              		.global	vsnprintf_
 4159              		.syntax unified
 4160              		.thumb
 4161              		.thumb_func
 4163              	vsnprintf_:
 4164              	.LVL459:
 4165              	.LFB18:
 898:Core/Src/printf.c **** 
 899:Core/Src/printf.c **** 
 900:Core/Src/printf.c **** int vsnprintf_(char* buffer, size_t count, const char* format, va_list va)
 901:Core/Src/printf.c **** {
 4166              		.loc 1 901 1 is_stmt 1 view -0
 4167              		.cfi_startproc
 4168              		@ args = 0, pretend = 0, frame = 0
 4169              		@ frame_needed = 0, uses_anonymous_args = 0
 4170              		.loc 1 901 1 is_stmt 0 view .LVU1045
 4171 0000 00B5     		push	{lr}
 4172              	.LCFI54:
 4173              		.cfi_def_cfa_offset 4
 4174              		.cfi_offset 14, -4
 4175 0002 83B0     		sub	sp, sp, #12
 4176              	.LCFI55:
 4177              		.cfi_def_cfa_offset 16
 902:Core/Src/printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 4178              		.loc 1 902 3 is_stmt 1 view .LVU1046
 4179              		.loc 1 902 10 is_stmt 0 view .LVU1047
 4180 0004 0093     		str	r3, [sp]
 4181 0006 1346     		mov	r3, r2
 4182              	.LVL460:
 4183              		.loc 1 902 10 view .LVU1048
 4184 0008 0A46     		mov	r2, r1
 4185              	.LVL461:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 102


 4186              		.loc 1 902 10 view .LVU1049
 4187 000a 0146     		mov	r1, r0
 4188              	.LVL462:
 4189              		.loc 1 902 10 view .LVU1050
 4190 000c 0248     		ldr	r0, .L348
 4191              	.LVL463:
 4192              		.loc 1 902 10 view .LVU1051
 4193 000e FFF7FEFF 		bl	_vsnprintf
 4194              	.LVL464:
 903:Core/Src/printf.c **** }
 4195              		.loc 1 903 1 view .LVU1052
 4196 0012 03B0     		add	sp, sp, #12
 4197              	.LCFI56:
 4198              		.cfi_def_cfa_offset 4
 4199              		@ sp needed
 4200 0014 5DF804FB 		ldr	pc, [sp], #4
 4201              	.L349:
 4202              		.align	2
 4203              	.L348:
 4204 0018 00000000 		.word	_out_buffer
 4205              		.cfi_endproc
 4206              	.LFE18:
 4208              		.section	.text.fctprintf,"ax",%progbits
 4209              		.align	1
 4210              		.global	fctprintf
 4211              		.syntax unified
 4212              		.thumb
 4213              		.thumb_func
 4215              	fctprintf:
 4216              	.LVL465:
 4217              	.LFB19:
 904:Core/Src/printf.c **** 
 905:Core/Src/printf.c **** 
 906:Core/Src/printf.c **** int fctprintf(void (*out)(char character, void* arg), void* arg, const char* format, ...)
 907:Core/Src/printf.c **** {
 4218              		.loc 1 907 1 is_stmt 1 view -0
 4219              		.cfi_startproc
 4220              		@ args = 4, pretend = 8, frame = 16
 4221              		@ frame_needed = 0, uses_anonymous_args = 1
 4222              		.loc 1 907 1 is_stmt 0 view .LVU1054
 4223 0000 0CB4     		push	{r2, r3}
 4224              	.LCFI57:
 4225              		.cfi_def_cfa_offset 8
 4226              		.cfi_offset 2, -8
 4227              		.cfi_offset 3, -4
 4228 0002 00B5     		push	{lr}
 4229              	.LCFI58:
 4230              		.cfi_def_cfa_offset 12
 4231              		.cfi_offset 14, -12
 4232 0004 87B0     		sub	sp, sp, #28
 4233              	.LCFI59:
 4234              		.cfi_def_cfa_offset 40
 4235 0006 08AA     		add	r2, sp, #32
 4236 0008 52F8043B 		ldr	r3, [r2], #4
 908:Core/Src/printf.c ****   va_list va;
 4237              		.loc 1 908 3 is_stmt 1 view .LVU1055
 909:Core/Src/printf.c ****   va_start(va, format);
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 103


 4238              		.loc 1 909 3 view .LVU1056
 4239 000c 0592     		str	r2, [sp, #20]
 910:Core/Src/printf.c ****   const out_fct_wrap_type out_fct_wrap = { out, arg };
 4240              		.loc 1 910 3 view .LVU1057
 4241              		.loc 1 910 27 is_stmt 0 view .LVU1058
 4242 000e 0390     		str	r0, [sp, #12]
 4243 0010 0491     		str	r1, [sp, #16]
 911:Core/Src/printf.c ****   const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
 4244              		.loc 1 911 3 is_stmt 1 view .LVU1059
 4245              		.loc 1 911 19 is_stmt 0 view .LVU1060
 4246 0012 0092     		str	r2, [sp]
 4247 0014 4FF0FF32 		mov	r2, #-1
 4248 0018 03A9     		add	r1, sp, #12
 4249              	.LVL466:
 4250              		.loc 1 911 19 view .LVU1061
 4251 001a 0448     		ldr	r0, .L352
 4252              	.LVL467:
 4253              		.loc 1 911 19 view .LVU1062
 4254 001c FFF7FEFF 		bl	_vsnprintf
 4255              	.LVL468:
 912:Core/Src/printf.c ****   va_end(va);
 4256              		.loc 1 912 3 is_stmt 1 view .LVU1063
 913:Core/Src/printf.c ****   return ret;
 4257              		.loc 1 913 3 view .LVU1064
 914:Core/Src/printf.c **** }
 4258              		.loc 1 914 1 is_stmt 0 view .LVU1065
 4259 0020 07B0     		add	sp, sp, #28
 4260              	.LCFI60:
 4261              		.cfi_def_cfa_offset 12
 4262              		@ sp needed
 4263 0022 5DF804EB 		ldr	lr, [sp], #4
 4264              	.LCFI61:
 4265              		.cfi_restore 14
 4266              		.cfi_def_cfa_offset 8
 4267 0026 02B0     		add	sp, sp, #8
 4268              	.LCFI62:
 4269              		.cfi_restore 3
 4270              		.cfi_restore 2
 4271              		.cfi_def_cfa_offset 0
 4272 0028 7047     		bx	lr
 4273              	.L353:
 4274 002a 00BF     		.align	2
 4275              	.L352:
 4276 002c 00000000 		.word	_out_fct
 4277              		.cfi_endproc
 4278              	.LFE19:
 4280              		.section	.rodata.pow10.0,"a"
 4281              		.align	3
 4284              	pow10.0:
 4285 0000 00000000 		.word	0
 4286 0004 0000F03F 		.word	1072693248
 4287 0008 00000000 		.word	0
 4288 000c 00002440 		.word	1076101120
 4289 0010 00000000 		.word	0
 4290 0014 00005940 		.word	1079574528
 4291 0018 00000000 		.word	0
 4292 001c 00408F40 		.word	1083129856
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 104


 4293 0020 00000000 		.word	0
 4294 0024 0088C340 		.word	1086556160
 4295 0028 00000000 		.word	0
 4296 002c 006AF840 		.word	1090021888
 4297 0030 00000000 		.word	0
 4298 0034 80842E41 		.word	1093567616
 4299 0038 00000000 		.word	0
 4300 003c D0126341 		.word	1097011920
 4301 0040 00000000 		.word	0
 4302 0044 84D79741 		.word	1100470148
 4303 0048 00000000 		.word	0
 4304 004c 65CDCD41 		.word	1104006501
 4305              		.text
 4306              	.Letext0:
 4307              		.file 2 "C:/ARM GNU Toolchain/arm-none-eabi/include/machine/_default_types.h"
 4308              		.file 3 "C:/ARM GNU Toolchain/arm-none-eabi/include/sys/_stdint.h"
 4309              		.file 4 "C:/ARM GNU Toolchain/lib/gcc/arm-none-eabi/13.3.1/include/stdarg.h"
 4310              		.file 5 "C:/ARM GNU Toolchain/lib/gcc/arm-none-eabi/13.3.1/include/stddef.h"
 4311              		.file 6 "<built-in>"
 4312              		.file 7 "Core/Inc/printf.h"
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 105


DEFINED SYMBOLS
                            *ABS*:00000000 printf.c
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:21     .text._out_buffer:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:26     .text._out_buffer:00000000 _out_buffer
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:48     .text._out_null:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:53     .text._out_null:00000000 _out_null
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:71     .text._out_fct:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:76     .text._out_fct:00000000 _out_fct
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:118    .text._atoi:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:123    .text._atoi:00000000 _atoi
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:186    .text._out_rev:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:191    .text._out_rev:00000000 _out_rev
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:323    .text._ntoa_format:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:328    .text._ntoa_format:00000000 _ntoa_format
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:617    .text._ntoa_long:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:622    .text._ntoa_long:00000000 _ntoa_long
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:769    .text._ntoa_long_long:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:774    .text._ntoa_long_long:00000000 _ntoa_long_long
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:955    .text._etoa:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:960    .text._etoa:00000000 _etoa
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:1643   .text._ftoa:00000000 _ftoa
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:1444   .text._etoa:000002b0 $d
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:1472   .text._etoa:00000314 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:1622   .rodata._ftoa.str1.4:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:1638   .text._ftoa:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:2227   .text._ftoa:000002e8 $d
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:4284   .rodata.pow10.0:00000000 pow10.0
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:2246   .text._ftoa:0000031c $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:2332   .text._vsnprintf:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:2337   .text._vsnprintf:00000000 _vsnprintf
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:2527   .text._vsnprintf:00000090 $d
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:2545   .text._vsnprintf:000000d4 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:2601   .text._vsnprintf:00000102 $d
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:2819   .text._vsnprintf:000001d4 $d
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:2886   .text._vsnprintf:0000025a $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:3861   .text._vsnprintf:000006c4 $d
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:3866   .text._out_char:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:3871   .text._out_char:00000000 _out_char
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:3901   .text.printf_:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:3907   .text.printf_:00000000 printf_
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:3965   .text.printf_:00000028 $d
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:3970   .text.sprintf_:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:3976   .text.sprintf_:00000000 sprintf_
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:4033   .text.sprintf_:00000028 $d
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:4038   .text.snprintf_:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:4044   .text.snprintf_:00000000 snprintf_
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:4103   .text.snprintf_:00000024 $d
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:4108   .text.vprintf_:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:4114   .text.vprintf_:00000000 vprintf_
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:4152   .text.vprintf_:0000001c $d
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:4157   .text.vsnprintf_:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:4163   .text.vsnprintf_:00000000 vsnprintf_
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:4204   .text.vsnprintf_:00000018 $d
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:4209   .text.fctprintf:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:4215   .text.fctprintf:00000000 fctprintf
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:4276   .text.fctprintf:0000002c $d
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:4281   .rodata.pow10.0:00000000 $d
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s 			page 106


C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:2621   .text._vsnprintf:00000115 $d
C:\Users\Lamp\AppData\Local\Temp\ccVUxn5d.s:2621   .text._vsnprintf:00000116 $t

UNDEFINED SYMBOLS
__aeabi_uldivmod
__aeabi_dcmpeq
__aeabi_dcmpgt
__aeabi_dcmplt
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_dsub
__aeabi_d2iz
__aeabi_ddiv
__aeabi_dcmpge
__aeabi_d2uiz
__aeabi_ui2d
__aeabi_dcmple
_putchar
